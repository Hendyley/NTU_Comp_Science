<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <NavigationAction />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top_country_medal' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1'>
        <calculation class='tableau' formula='1' />
        <range max='100' min='1' />
      </column>
      <column caption='Top n years' datatype='real' name='[Parameter 2]' param-domain-type='list' role='measure' type='quantitative' value='10.'>
        <calculation class='tableau' formula='10.' />
        <members>
          <member value='10.' />
          <member value='20.' />
          <member value='30.' />
          <member value='40.' />
          <member value='50.' />
          <member value='60.' />
          <member value='100.' />
          <member value='150.' />
          <member value='200.' />
          <member value='250.' />
          <member value='300.' />
        </members>
      </column>
      <column alias='Win Rate' caption='Content' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Win Rate&quot;'>
        <calculation class='tableau' formula='&quot;Win Rate&quot;' />
        <aliases>
          <alias key='&quot;Most Medal&quot;' value='Most Medal' />
          <alias key='&quot;Number of Participants&quot;' value='Number of Participants' />
          <alias key='&quot;Win Rate&quot;' value='Win Rate' />
        </aliases>
        <members>
          <member alias='Number of Participants' value='&quot;Number of Participants&quot;' />
          <member alias='Most Medal' value='&quot;Most Medal&quot;' />
          <member alias='Win Rate' value='&quot;Win Rate&quot;' />
        </members>
      </column>
      <column caption='Parameter 4' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;BACK&quot;'>
        <calculation class='tableau' formula='&quot;BACK&quot;' />
        <members>
          <member value='&quot;NEXT&quot;' />
          <member value='&quot;BACK&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='olympic_results+' inline='true' name='federated.1yxdfkn163wzao17puqgt0p30fvp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='olympic_results' name='textscan.19ea4n118yyoyt1fw1bzf1b55hfs'>
            <connection class='textscan' directory='C:/Users/Hendy/OneDrive/Desktop/SC4024/Olympic_dataset' filename='olympic_results.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='IFNULL([olympic_results.csv].[athlete_full_name],[olympic_medals.csv].[athlete_full_name])' />
              <expression op='[olympic_athletes.csv].[athlete_full_name]' />
            </expression>
          </clause>
          <relation join='full' type='join'>
            <clause type='join'>
              <expression op='AND'>
                <expression op='='>
                  <expression op='[olympic_results.csv].[discipline_title]' />
                  <expression op='[olympic_medals.csv].[discipline_title]' />
                </expression>
                <expression op='='>
                  <expression op='[olympic_results.csv].[slug_game]' />
                  <expression op='[olympic_medals.csv].[slug_game]' />
                </expression>
                <expression op='='>
                  <expression op='[olympic_results.csv].[country_name]' />
                  <expression op='[olympic_medals.csv].[country_name]' />
                </expression>
                <expression op='='>
                  <expression op='[olympic_results.csv].[event_title]' />
                  <expression op='[olympic_medals.csv].[event_title]' />
                </expression>
                <expression op='='>
                  <expression op='[olympic_results.csv].[athlete_full_name]' />
                  <expression op='[olympic_medals.csv].[athlete_full_name]' />
                </expression>
              </expression>
            </clause>
            <relation join='full' type='join'>
              <clause type='join'>
                <expression op='AND'>
                  <expression op='='>
                    <expression op='TRIM(STR([athletes_2024.csv].[code]))' />
                    <expression op='TRIM(STR([medals_2024.csv].[code]))' />
                  </expression>
                  <expression op='='>
                    <expression op='[medallists_2024.csv].[url_event]' />
                    <expression op='[medals_2024.csv].[url_event]' />
                  </expression>
                  <expression op='='>
                    <expression op='[athletes_2024.csv].[country]' />
                    <expression op='[medals_2024.csv].[country]' />
                  </expression>
                  <expression op='='>
                    <expression op='[athletes_2024.csv].[name_tv]' />
                    <expression op='[medals_2024.csv].[name]' />
                  </expression>
                </expression>
              </clause>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='AND'>
                    <expression op='='>
                      <expression op='[athletes_2024.csv].[code]' />
                      <expression op='[medallists_2024.csv].[code_athlete]' />
                    </expression>
                    <expression op='='>
                      <expression op='[athletes_2024.csv].[country]' />
                      <expression op='[medallists_2024.csv].[country]' />
                    </expression>
                  </expression>
                </clause>
                <relation join='left' type='join'>
                  <clause type='join'>
                    <expression op='='>
                      <expression op='[olympic_results.csv].[slug_game]' />
                      <expression op='[olympic_hosts.csv].[game_slug]' />
                    </expression>
                  </clause>
                  <relation join='full' type='join'>
                    <clause type='join'>
                      <expression op='AND'>
                        <expression op='='>
                          <expression op='UPPER([athletes_2024.csv].[country])' />
                          <expression op='UPPER([olympic_results.csv].[country_name])' />
                        </expression>
                        <expression op='='>
                          <expression op='UPPER(&#13;&#10;&#13;&#10;REPLACE( REPLACE(  REPLACE( REPLACE([athletes_2024.csv].[disciplines],&quot;[&quot;,&quot;&quot;) ,&quot;]&quot;,&quot;&quot;) ,&quot;&apos;&quot;,&quot;&quot;) , &apos;&quot;&apos;,&quot;&quot;)&#13;&#10;&#13;&#10;&#13;&#10;)' />
                          <expression op='UPPER([olympic_results.csv].[discipline_title])' />
                        </expression>
                        <expression op='='>
                          <expression op='[athletes_2024.csv].[name_tv]' />
                          <expression op='[olympic_results.csv].[athlete_full_name]' />
                        </expression>
                        <expression op='='>
                          <expression op='[athletes_2024.csv].[year]' />
                          <expression op='RIGHT([olympic_results.csv].[slug_game],4)' />
                        </expression>
                      </expression>
                    </clause>
                    <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='athletes_2024.csv' table='[athletes_2024#csv]' type='table'>
                      <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                        <column datatype='integer' name='code' ordinal='0' />
                        <column datatype='boolean' name='current' ordinal='1' />
                        <column datatype='string' name='name' ordinal='2' />
                        <column datatype='string' name='name_short' ordinal='3' />
                        <column datatype='string' name='name_tv' ordinal='4' />
                        <column datatype='string' name='gender' ordinal='5' />
                        <column datatype='string' name='function' ordinal='6' />
                        <column datatype='string' name='country_code' ordinal='7' />
                        <column datatype='string' name='country' ordinal='8' />
                        <column datatype='string' name='country_long' ordinal='9' />
                        <column datatype='string' name='nationality' ordinal='10' />
                        <column datatype='string' name='nationality_long' ordinal='11' />
                        <column datatype='string' name='nationality_code' ordinal='12' />
                        <column datatype='integer' name='height' ordinal='13' />
                        <column datatype='integer' name='weight' ordinal='14' />
                        <column datatype='string' name='disciplines' ordinal='15' />
                        <column datatype='string' name='events' ordinal='16' />
                        <column datatype='date' name='birth_date' ordinal='17' />
                        <column datatype='string' name='birth_place' ordinal='18' />
                        <column datatype='string' name='birth_country' ordinal='19' />
                        <column datatype='string' name='residence_place' ordinal='20' />
                        <column datatype='string' name='residence_country' ordinal='21' />
                        <column datatype='string' name='nickname' ordinal='22' />
                        <column datatype='string' name='hobbies' ordinal='23' />
                        <column datatype='string' name='occupation' ordinal='24' />
                        <column datatype='string' name='education' ordinal='25' />
                        <column datatype='string' name='family' ordinal='26' />
                        <column datatype='string' name='lang' ordinal='27' />
                        <column datatype='string' name='coach' ordinal='28' />
                        <column datatype='string' name='reason' ordinal='29' />
                        <column datatype='string' name='hero' ordinal='30' />
                        <column datatype='string' name='influence' ordinal='31' />
                        <column datatype='string' name='philosophy' ordinal='32' />
                        <column datatype='string' name='sporting_relatives' ordinal='33' />
                        <column datatype='string' name='ritual' ordinal='34' />
                        <column datatype='string' name='other_sports' ordinal='35' />
                        <column datatype='string' name='year' ordinal='36' />
                      </columns>
                    </relation>
                    <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='olympic_results.csv' table='[olympic_results#csv]' type='table'>
                      <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                        <column datatype='string' name='discipline_title' ordinal='0' />
                        <column datatype='string' name='event_title' ordinal='1' />
                        <column datatype='string' name='slug_game' ordinal='2' />
                        <column datatype='string' name='participant_type' ordinal='3' />
                        <column datatype='string' name='medal_type' ordinal='4' />
                        <column datatype='string' name='athletes' ordinal='5' />
                        <column datatype='boolean' name='rank_equal' ordinal='6' />
                        <column datatype='integer' name='rank_position' ordinal='7' />
                        <column datatype='string' name='country_name' ordinal='8' />
                        <column datatype='string' name='country_code' ordinal='9' />
                        <column datatype='string' name='country_3_letter_code' ordinal='10' />
                        <column datatype='string' name='athlete_url' ordinal='11' />
                        <column datatype='string' name='athlete_full_name' ordinal='12' />
                        <column datatype='string' name='value_unit' ordinal='13' />
                        <column datatype='string' name='value_type' ordinal='14' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='olympic_hosts.csv' table='[olympic_hosts#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                      <column datatype='string' name='game_slug' ordinal='0' />
                      <column datatype='datetime' name='game_end_date' ordinal='1' />
                      <column datatype='datetime' name='game_start_date' ordinal='2' />
                      <column datatype='string' name='game_location' ordinal='3' />
                      <column datatype='string' name='game_name' ordinal='4' />
                      <column datatype='string' name='game_season' ordinal='5' />
                      <column datatype='integer' name='game_year' ordinal='6' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='medallists_2024.csv' table='[medallists_2024#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                    <column datatype='date' name='medal_date' ordinal='0' />
                    <column datatype='string' name='medal_type' ordinal='1' />
                    <column datatype='real' name='medal_code' ordinal='2' />
                    <column datatype='string' name='name' ordinal='3' />
                    <column datatype='string' name='gender' ordinal='4' />
                    <column datatype='string' name='country_code' ordinal='5' />
                    <column datatype='string' name='country' ordinal='6' />
                    <column datatype='string' name='country_long' ordinal='7' />
                    <column datatype='string' name='nationality_code' ordinal='8' />
                    <column datatype='string' name='nationality' ordinal='9' />
                    <column datatype='string' name='nationality_long' ordinal='10' />
                    <column datatype='string' name='team' ordinal='11' />
                    <column datatype='string' name='team_gender' ordinal='12' />
                    <column datatype='string' name='discipline' ordinal='13' />
                    <column datatype='string' name='event' ordinal='14' />
                    <column datatype='string' name='event_type' ordinal='15' />
                    <column datatype='string' name='url_event' ordinal='16' />
                    <column datatype='date' name='birth_date' ordinal='17' />
                    <column datatype='integer' name='code_athlete' ordinal='18' />
                    <column datatype='string' name='code_team' ordinal='19' />
                    <column datatype='boolean' name='is_medallist' ordinal='20' />
                  </columns>
                </relation>
              </relation>
              <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='medals_2024.csv' table='[medals_2024#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                  <column datatype='string' name='medal_type' ordinal='0' />
                  <column datatype='string' name='medal_code' ordinal='1' />
                  <column datatype='date' name='medal_date' ordinal='2' />
                  <column datatype='string' name='name' ordinal='3' />
                  <column datatype='string' name='gender' ordinal='4' />
                  <column datatype='string' name='discipline' ordinal='5' />
                  <column datatype='string' name='event' ordinal='6' />
                  <column datatype='string' name='event_type' ordinal='7' />
                  <column datatype='string' name='url_event' ordinal='8' />
                  <column datatype='string' name='code' ordinal='9' />
                  <column datatype='string' name='country_code' ordinal='10' />
                  <column datatype='string' name='country' ordinal='11' />
                  <column datatype='string' name='country_long' ordinal='12' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='olympic_medals.csv' table='[olympic_medals#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                <column datatype='string' name='discipline_title' ordinal='0' />
                <column datatype='string' name='slug_game' ordinal='1' />
                <column datatype='string' name='event_title' ordinal='2' />
                <column datatype='string' name='event_gender' ordinal='3' />
                <column datatype='string' name='medal_type' ordinal='4' />
                <column datatype='string' name='participant_type' ordinal='5' />
                <column datatype='string' name='participant_title' ordinal='6' />
                <column datatype='string' name='athlete_url' ordinal='7' />
                <column datatype='string' name='athlete_full_name' ordinal='8' />
                <column datatype='string' name='country_name' ordinal='9' />
                <column datatype='string' name='country_code' ordinal='10' />
                <column datatype='string' name='country_3_letter_code' ordinal='11' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='olympic_athletes.csv' table='[olympic_athletes#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
              <column datatype='string' name='athlete_url' ordinal='0' />
              <column datatype='string' name='athlete_full_name' ordinal='1' />
              <column datatype='integer' name='games_participations' ordinal='2' />
              <column datatype='string' name='first_game' ordinal='3' />
              <column datatype='integer' name='athlete_year_birth' ordinal='4' />
              <column datatype='string' name='athlete_medals' ordinal='5' />
              <column datatype='string' name='bio' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[athlete_full_name (olympic_athletes.csv)]' value='[olympic_athletes.csv].[athlete_full_name]' />
          <map key='[athlete_full_name (olympic_medals.csv)]' value='[olympic_medals.csv].[athlete_full_name]' />
          <map key='[athlete_full_name]' value='[olympic_results.csv].[athlete_full_name]' />
          <map key='[athlete_medals]' value='[olympic_athletes.csv].[athlete_medals]' />
          <map key='[athlete_url (olympic_athletes.csv)]' value='[olympic_athletes.csv].[athlete_url]' />
          <map key='[athlete_url (olympic_medals.csv)]' value='[olympic_medals.csv].[athlete_url]' />
          <map key='[athlete_url]' value='[olympic_results.csv].[athlete_url]' />
          <map key='[athlete_year_birth]' value='[olympic_athletes.csv].[athlete_year_birth]' />
          <map key='[athletes]' value='[olympic_results.csv].[athletes]' />
          <map key='[bio]' value='[olympic_athletes.csv].[bio]' />
          <map key='[birth_country]' value='[athletes_2024.csv].[birth_country]' />
          <map key='[birth_date (medallists_2024.csv)]' value='[medallists_2024.csv].[birth_date]' />
          <map key='[birth_date]' value='[athletes_2024.csv].[birth_date]' />
          <map key='[birth_place]' value='[athletes_2024.csv].[birth_place]' />
          <map key='[coach]' value='[athletes_2024.csv].[coach]' />
          <map key='[code (medals_2024.csv)]' value='[medals_2024.csv].[code]' />
          <map key='[code]' value='[athletes_2024.csv].[code]' />
          <map key='[code_athlete]' value='[medallists_2024.csv].[code_athlete]' />
          <map key='[code_team]' value='[medallists_2024.csv].[code_team]' />
          <map key='[country (medallists_2024.csv)]' value='[medallists_2024.csv].[country]' />
          <map key='[country (medals_2024.csv)]' value='[medals_2024.csv].[country]' />
          <map key='[country]' value='[athletes_2024.csv].[country]' />
          <map key='[country_3_letter_code (olympic_medals.csv)]' value='[olympic_medals.csv].[country_3_letter_code]' />
          <map key='[country_3_letter_code]' value='[olympic_results.csv].[country_3_letter_code]' />
          <map key='[country_code (medallists_2024.csv)]' value='[medallists_2024.csv].[country_code]' />
          <map key='[country_code (medals_2024.csv)]' value='[medals_2024.csv].[country_code]' />
          <map key='[country_code (olympic_medals.csv)]' value='[olympic_medals.csv].[country_code]' />
          <map key='[country_code (olympic_results.csv)]' value='[olympic_results.csv].[country_code]' />
          <map key='[country_code]' value='[athletes_2024.csv].[country_code]' />
          <map key='[country_long (medallists_2024.csv)]' value='[medallists_2024.csv].[country_long]' />
          <map key='[country_long (medals_2024.csv)]' value='[medals_2024.csv].[country_long]' />
          <map key='[country_long]' value='[athletes_2024.csv].[country_long]' />
          <map key='[country_name (olympic_medals.csv)]' value='[olympic_medals.csv].[country_name]' />
          <map key='[country_name]' value='[olympic_results.csv].[country_name]' />
          <map key='[current]' value='[athletes_2024.csv].[current]' />
          <map key='[discipline (medallists_2024.csv)]' value='[medallists_2024.csv].[discipline]' />
          <map key='[discipline (medals_2024.csv)]' value='[medals_2024.csv].[discipline]' />
          <map key='[discipline_title (olympic_medals.csv)]' value='[olympic_medals.csv].[discipline_title]' />
          <map key='[discipline_title]' value='[olympic_results.csv].[discipline_title]' />
          <map key='[disciplines]' value='[athletes_2024.csv].[disciplines]' />
          <map key='[education]' value='[athletes_2024.csv].[education]' />
          <map key='[event (medallists_2024.csv)]' value='[medallists_2024.csv].[event]' />
          <map key='[event]' value='[medals_2024.csv].[event]' />
          <map key='[event_gender]' value='[olympic_medals.csv].[event_gender]' />
          <map key='[event_title (olympic_medals.csv)]' value='[olympic_medals.csv].[event_title]' />
          <map key='[event_title]' value='[olympic_results.csv].[event_title]' />
          <map key='[event_type (medallists_2024.csv)]' value='[medallists_2024.csv].[event_type]' />
          <map key='[event_type]' value='[medals_2024.csv].[event_type]' />
          <map key='[events]' value='[athletes_2024.csv].[events]' />
          <map key='[family]' value='[athletes_2024.csv].[family]' />
          <map key='[first_game]' value='[olympic_athletes.csv].[first_game]' />
          <map key='[function]' value='[athletes_2024.csv].[function]' />
          <map key='[game_end_date]' value='[olympic_hosts.csv].[game_end_date]' />
          <map key='[game_location]' value='[olympic_hosts.csv].[game_location]' />
          <map key='[game_name]' value='[olympic_hosts.csv].[game_name]' />
          <map key='[game_season]' value='[olympic_hosts.csv].[game_season]' />
          <map key='[game_slug]' value='[olympic_hosts.csv].[game_slug]' />
          <map key='[game_start_date]' value='[olympic_hosts.csv].[game_start_date]' />
          <map key='[game_year]' value='[olympic_hosts.csv].[game_year]' />
          <map key='[games_participations]' value='[olympic_athletes.csv].[games_participations]' />
          <map key='[gender (medallists_2024.csv)]' value='[medallists_2024.csv].[gender]' />
          <map key='[gender (medals_2024.csv)]' value='[medals_2024.csv].[gender]' />
          <map key='[gender]' value='[athletes_2024.csv].[gender]' />
          <map key='[height]' value='[athletes_2024.csv].[height]' />
          <map key='[hero]' value='[athletes_2024.csv].[hero]' />
          <map key='[hobbies]' value='[athletes_2024.csv].[hobbies]' />
          <map key='[influence]' value='[athletes_2024.csv].[influence]' />
          <map key='[is_medallist]' value='[medallists_2024.csv].[is_medallist]' />
          <map key='[lang]' value='[athletes_2024.csv].[lang]' />
          <map key='[medal_code (medallists_2024.csv)]' value='[medallists_2024.csv].[medal_code]' />
          <map key='[medal_code]' value='[medals_2024.csv].[medal_code]' />
          <map key='[medal_date (medallists_2024.csv)]' value='[medallists_2024.csv].[medal_date]' />
          <map key='[medal_date]' value='[medals_2024.csv].[medal_date]' />
          <map key='[medal_type (medallists_2024.csv)]' value='[medallists_2024.csv].[medal_type]' />
          <map key='[medal_type (olympic_medals.csv)]' value='[olympic_medals.csv].[medal_type]' />
          <map key='[medal_type (olympic_results.csv)]' value='[olympic_results.csv].[medal_type]' />
          <map key='[medal_type]' value='[medals_2024.csv].[medal_type]' />
          <map key='[name (medallists_2024.csv)]' value='[medallists_2024.csv].[name]' />
          <map key='[name (medals_2024.csv)]' value='[medals_2024.csv].[name]' />
          <map key='[name]' value='[athletes_2024.csv].[name]' />
          <map key='[name_short]' value='[athletes_2024.csv].[name_short]' />
          <map key='[name_tv]' value='[athletes_2024.csv].[name_tv]' />
          <map key='[nationality (medallists_2024.csv)]' value='[medallists_2024.csv].[nationality]' />
          <map key='[nationality]' value='[athletes_2024.csv].[nationality]' />
          <map key='[nationality_code (medallists_2024.csv)]' value='[medallists_2024.csv].[nationality_code]' />
          <map key='[nationality_code]' value='[athletes_2024.csv].[nationality_code]' />
          <map key='[nationality_long (medallists_2024.csv)]' value='[medallists_2024.csv].[nationality_long]' />
          <map key='[nationality_long]' value='[athletes_2024.csv].[nationality_long]' />
          <map key='[nickname]' value='[athletes_2024.csv].[nickname]' />
          <map key='[occupation]' value='[athletes_2024.csv].[occupation]' />
          <map key='[other_sports]' value='[athletes_2024.csv].[other_sports]' />
          <map key='[participant_title]' value='[olympic_medals.csv].[participant_title]' />
          <map key='[participant_type (olympic_medals.csv)]' value='[olympic_medals.csv].[participant_type]' />
          <map key='[participant_type]' value='[olympic_results.csv].[participant_type]' />
          <map key='[philosophy]' value='[athletes_2024.csv].[philosophy]' />
          <map key='[rank_equal]' value='[olympic_results.csv].[rank_equal]' />
          <map key='[rank_position]' value='[olympic_results.csv].[rank_position]' />
          <map key='[reason]' value='[athletes_2024.csv].[reason]' />
          <map key='[residence_country]' value='[athletes_2024.csv].[residence_country]' />
          <map key='[residence_place]' value='[athletes_2024.csv].[residence_place]' />
          <map key='[ritual]' value='[athletes_2024.csv].[ritual]' />
          <map key='[slug_game (olympic_medals.csv)]' value='[olympic_medals.csv].[slug_game]' />
          <map key='[slug_game]' value='[olympic_results.csv].[slug_game]' />
          <map key='[sporting_relatives]' value='[athletes_2024.csv].[sporting_relatives]' />
          <map key='[team]' value='[medallists_2024.csv].[team]' />
          <map key='[team_gender]' value='[medallists_2024.csv].[team_gender]' />
          <map key='[url_event (medallists_2024.csv)]' value='[medallists_2024.csv].[url_event]' />
          <map key='[url_event]' value='[medals_2024.csv].[url_event]' />
          <map key='[value_type]' value='[olympic_results.csv].[value_type]' />
          <map key='[value_unit]' value='[olympic_results.csv].[value_unit]' />
          <map key='[weight]' value='[athletes_2024.csv].[weight]' />
          <map key='[year]' value='[athletes_2024.csv].[year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[olympic_hosts.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[olympic_athletes.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_SG&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>current</remote-name>
            <remote-type>11</remote-type>
            <local-name>[current]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>current</remote-alias>
            <ordinal>1</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name_short</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name_short]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>name_short</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name_tv</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name_tv]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>name_tv</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>function</remote-name>
            <remote-type>129</remote-type>
            <local-name>[function]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>function</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_long</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_long]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>country_long</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>nationality</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality_long</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality_long]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>nationality_long</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality_code]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>nationality_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>height</remote-name>
            <remote-type>20</remote-type>
            <local-name>[height]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>height</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>weight</remote-name>
            <remote-type>20</remote-type>
            <local-name>[weight]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>weight</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>disciplines</remote-name>
            <remote-type>129</remote-type>
            <local-name>[disciplines]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>disciplines</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>events</remote-name>
            <remote-type>129</remote-type>
            <local-name>[events]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>events</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[birth_date]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>birth_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth_place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[birth_place]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>birth_place</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[birth_country]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>birth_country</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>residence_place</remote-name>
            <remote-type>129</remote-type>
            <local-name>[residence_place]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>residence_place</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>residence_country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[residence_country]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>residence_country</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nickname</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nickname]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>nickname</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hobbies</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hobbies]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>hobbies</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occupation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[occupation]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>occupation</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>education</remote-name>
            <remote-type>129</remote-type>
            <local-name>[education]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>education</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>family</remote-name>
            <remote-type>129</remote-type>
            <local-name>[family]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>family</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lang</remote-name>
            <remote-type>129</remote-type>
            <local-name>[lang]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>lang</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coach</remote-name>
            <remote-type>129</remote-type>
            <local-name>[coach]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>coach</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reason</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reason]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>reason</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hero</remote-name>
            <remote-type>129</remote-type>
            <local-name>[hero]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>hero</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>influence</remote-name>
            <remote-type>129</remote-type>
            <local-name>[influence]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>influence</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>philosophy</remote-name>
            <remote-type>129</remote-type>
            <local-name>[philosophy]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>philosophy</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sporting_relatives</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sporting_relatives]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>sporting_relatives</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ritual</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ritual]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>ritual</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_sports</remote-name>
            <remote-type>129</remote-type>
            <local-name>[other_sports]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>other_sports</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[athletes_2024.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discipline_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[discipline_title]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>discipline_title</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event_title]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>event_title</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>slug_game</remote-name>
            <remote-type>129</remote-type>
            <local-name>[slug_game]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>slug_game</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>participant_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[participant_type]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>participant_type</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[medal_type (olympic_results.csv)]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>medal_type</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athletes</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athletes]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>athletes</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank_equal</remote-name>
            <remote-type>11</remote-type>
            <local-name>[rank_equal]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>rank_equal</remote-alias>
            <ordinal>43</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank_position</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank_position]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>rank_position</remote-alias>
            <ordinal>44</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (olympic_results.csv)]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_3_letter_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_3_letter_code]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>country_3_letter_code</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athlete_url]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>athlete_url</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_full_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athlete_full_name]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>athlete_full_name</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_unit</remote-name>
            <remote-type>129</remote-type>
            <local-name>[value_unit]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>value_unit</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[value_type]</local-name>
            <parent-name>[olympic_results.csv]</parent-name>
            <remote-alias>value_type</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_slug</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_slug]</local-name>
            <parent-name>[olympic_hosts.csv]</parent-name>
            <remote-alias>game_slug</remote-alias>
            <ordinal>52</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_end_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[game_end_date]</local-name>
            <parent-name>[olympic_hosts.csv]</parent-name>
            <remote-alias>game_end_date</remote-alias>
            <ordinal>53</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_start_date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[game_start_date]</local-name>
            <parent-name>[olympic_hosts.csv]</parent-name>
            <remote-alias>game_start_date</remote-alias>
            <ordinal>54</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_location]</local-name>
            <parent-name>[olympic_hosts.csv]</parent-name>
            <remote-alias>game_location</remote-alias>
            <ordinal>55</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_name]</local-name>
            <parent-name>[olympic_hosts.csv]</parent-name>
            <remote-alias>game_name</remote-alias>
            <ordinal>56</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[game_season]</local-name>
            <parent-name>[olympic_hosts.csv]</parent-name>
            <remote-alias>game_season</remote-alias>
            <ordinal>57</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>game_year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[game_year]</local-name>
            <parent-name>[olympic_hosts.csv]</parent-name>
            <remote-alias>game_year</remote-alias>
            <ordinal>58</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[medal_date (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>medal_date</remote-alias>
            <ordinal>59</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[medal_type (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>medal_type</remote-alias>
            <ordinal>60</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal_code</remote-name>
            <remote-type>5</remote-type>
            <local-name>[medal_code (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>medal_code</remote-alias>
            <ordinal>61</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>62</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>63</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>64</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>65</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_long</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_long (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>country_long</remote-alias>
            <ordinal>66</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality_code (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>nationality_code</remote-alias>
            <ordinal>67</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>nationality</remote-alias>
            <ordinal>68</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>nationality_long</remote-name>
            <remote-type>129</remote-type>
            <local-name>[nationality_long (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>nationality_long</remote-alias>
            <ordinal>69</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>team</remote-alias>
            <ordinal>70</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team_gender]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>team_gender</remote-alias>
            <ordinal>71</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discipline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[discipline (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>discipline</remote-alias>
            <ordinal>72</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>event</remote-alias>
            <ordinal>73</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event_type (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>event_type</remote-alias>
            <ordinal>74</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url_event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url_event (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>url_event</remote-alias>
            <ordinal>75</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[birth_date (medallists_2024.csv)]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>birth_date</remote-alias>
            <ordinal>76</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code_athlete</remote-name>
            <remote-type>20</remote-type>
            <local-name>[code_athlete]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>code_athlete</remote-alias>
            <ordinal>77</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code_team]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>code_team</remote-alias>
            <ordinal>78</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_medallist</remote-name>
            <remote-type>11</remote-type>
            <local-name>[is_medallist]</local-name>
            <parent-name>[medallists_2024.csv]</parent-name>
            <remote-alias>is_medallist</remote-alias>
            <ordinal>79</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[medal_type]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>medal_type</remote-alias>
            <ordinal>80</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[medal_code]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>medal_code</remote-alias>
            <ordinal>81</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[medal_date]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>medal_date</remote-alias>
            <ordinal>82</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name (medals_2024.csv)]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>83</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gender (medals_2024.csv)]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>84</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discipline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[discipline (medals_2024.csv)]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>discipline</remote-alias>
            <ordinal>85</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>event</remote-alias>
            <ordinal>86</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event_type]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>event_type</remote-alias>
            <ordinal>87</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url_event</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url_event]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>url_event</remote-alias>
            <ordinal>88</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[code (medals_2024.csv)]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>89</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (medals_2024.csv)]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>90</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country (medals_2024.csv)]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>91</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_long</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_long (medals_2024.csv)]</local-name>
            <parent-name>[medals_2024.csv]</parent-name>
            <remote-alias>country_long</remote-alias>
            <ordinal>92</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>discipline_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[discipline_title (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>discipline_title</remote-alias>
            <ordinal>93</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>slug_game</remote-name>
            <remote-type>129</remote-type>
            <local-name>[slug_game (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>slug_game</remote-alias>
            <ordinal>94</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event_title (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>event_title</remote-alias>
            <ordinal>95</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>event_gender</remote-name>
            <remote-type>129</remote-type>
            <local-name>[event_gender]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>event_gender</remote-alias>
            <ordinal>96</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>medal_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[medal_type (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>medal_type</remote-alias>
            <ordinal>97</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>participant_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[participant_type (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>participant_type</remote-alias>
            <ordinal>98</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>participant_title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[participant_title]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>participant_title</remote-alias>
            <ordinal>99</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athlete_url (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>athlete_url</remote-alias>
            <ordinal>100</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_full_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athlete_full_name (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>athlete_full_name</remote-alias>
            <ordinal>101</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>102</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>103</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_3_letter_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_3_letter_code (olympic_medals.csv)]</local-name>
            <parent-name>[olympic_medals.csv]</parent-name>
            <remote-alias>country_3_letter_code</remote-alias>
            <ordinal>104</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athlete_url (olympic_athletes.csv)]</local-name>
            <parent-name>[olympic_athletes.csv]</parent-name>
            <remote-alias>athlete_url</remote-alias>
            <ordinal>105</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_full_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athlete_full_name (olympic_athletes.csv)]</local-name>
            <parent-name>[olympic_athletes.csv]</parent-name>
            <remote-alias>athlete_full_name</remote-alias>
            <ordinal>106</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>games_participations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[games_participations]</local-name>
            <parent-name>[olympic_athletes.csv]</parent-name>
            <remote-alias>games_participations</remote-alias>
            <ordinal>107</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>first_game</remote-name>
            <remote-type>129</remote-type>
            <local-name>[first_game]</local-name>
            <parent-name>[olympic_athletes.csv]</parent-name>
            <remote-alias>first_game</remote-alias>
            <ordinal>108</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_year_birth</remote-name>
            <remote-type>20</remote-type>
            <local-name>[athlete_year_birth]</local-name>
            <parent-name>[olympic_athletes.csv]</parent-name>
            <remote-alias>athlete_year_birth</remote-alias>
            <ordinal>109</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>athlete_medals</remote-name>
            <remote-type>129</remote-type>
            <local-name>[athlete_medals]</local-name>
            <parent-name>[olympic_athletes.csv]</parent-name>
            <remote-alias>athlete_medals</remote-alias>
            <ordinal>110</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bio]</local-name>
            <parent-name>[olympic_athletes.csv]</parent-name>
            <remote-alias>bio</remote-alias>
            <ordinal>111</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1 (copy)' datatype='string' name='[Calculation1 (copy)_619807908195311635]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;NEXT&quot;' />
      </column>
      <column caption='First_Name' datatype='string' name='[Calculation_1131247938910908427]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='SPLIT([Calculation_1611444250085171201],&apos; &apos;,1)' />
      </column>
      <column caption='Filter_Medal_Type' datatype='boolean' name='[Calculation_1131247939063275533]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(UPPER([medal_type]),&#13;&#10;&#13;&#10;IFNULL( UPPER([medal_type (olympic_results.csv)]), UPPER([medal_type]))&#13;&#10;&#13;&#10;)' />
      </column>
      <column caption='Filter_Country_name' datatype='boolean' name='[Calculation_1131247939064029198]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(UPPER([country]),&#13;&#10;&#13;&#10;IFNULL( UPPER([country_name]), UPPER([country]))&#13;&#10;&#13;&#10;)' />
      </column>
      <column caption='Filter_Athlete_Name' datatype='boolean' name='[Calculation_1131247939065413647]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='CONTAINS(UPPER([athlete_full_name]),&#13;&#10;&#13;&#10;UPPER([Calculation_1131247938910908427])&#13;&#10;&#13;&#10;)&#13;&#10;AND&#13;&#10;&#13;&#10;CONTAINS(UPPER([athlete_full_name]),&#13;&#10;&#13;&#10;IFNULL( UPPER([First_Name (copy)_1131247938912247820]), UPPER([Calculation_1611444250085171201] ))&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;AND &#13;&#10;&#13;&#10;CONTAINS(UPPER([athlete_full_name]),&#13;&#10;&#13;&#10;IFNULL( UPPER(SPLIT([Calculation_1611444250085171201],&quot; &quot;,2)), UPPER([Calculation_1611444250085171201] ))&#13;&#10;&#13;&#10;)' />
      </column>
      <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
      </column>
      <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
      </column>
      <column caption='TeamGroup' datatype='string' name='[Calculation_1324339774528991235]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='{ FIXED [year],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],&#13;&#10;&#13;&#10;IFNULL([medal_type (olympic_results.csv)],[medal_type (olympic_medals.csv)])&#13;&#10;&#13;&#10;:&#13;&#10;MAX([participant_title])&#13;&#10;}' />
      </column>
      <column caption='Team member' datatype='integer' name='[Calculation_1352487272096469017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [year],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team] :&#13;&#10;&#13;&#10;COUNTD([Calculation_1611444250085171201])&#13;&#10;&#13;&#10;}' />
      </column>
      <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
      </column>
      <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Filter_Year' datatype='boolean' name='[Calculation_1611444250127069189]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  [Calculation_1611444250032074752] = &apos;2020&apos; or [Calculation_1611444250032074752] = &apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;IF [Calculation_1611444250032074752] = STR( YEAR(DATETIME([medal_date]))) THEN TRUE ELSE FALSE END&#13;&#10;ELSE&#13;&#10;&#13;&#10;TRUE&#13;&#10;END' />
      </column>
      <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='Rank Country' datatype='integer' name='[Calculation_1611444250204155919]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='RANK(SUM([Calculation_1131247939083292689]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='MEDAL' datatype='real' hidden='true' name='[Calculation_1611444250363723793]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='' />
      </column>
      <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
      </column>
      <column caption='rank of player medal category' datatype='integer' name='[Calculation_1995657593751044098]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='MAX(&#13;&#10;&#13;&#10;IF UPPER([Calculation_1611444250133389320])=&quot;GOLD&quot;&#13;&#10;THEN 1&#13;&#10;ELSEIF UPPER([Calculation_1611444250133389320])=&quot;SILVER&quot;&#13;&#10;THEN 2&#13;&#10;ELSEIF UPPER([Calculation_1611444250133389320])=&quot;BRONZE&quot;&#13;&#10;THEN 3&#13;&#10;END&#13;&#10;&#13;&#10;)' />
      </column>
      <column caption='player' datatype='string' name='[Calculation_519884291117338628]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF ISNULL([team])=FALSE THEN [team]&#13;&#10;ELSEIF ISNULL([Calculation_1324339774528991235])=FALSE THEN [Calculation_1324339774528991235]&#13;&#10;ELSE [Calculation_1611444250085171201] END' />
      </column>
      <column caption='Win Rate' datatype='real' name='[Calculation_519884291156197384]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_1131247939083292689])&#13;&#10;/[Calculation_1611444250374369306]&#13;&#10;&#13;&#10;*100' />
      </column>
      <column caption='Content_Value' datatype='real' name='[Calculation_519884291162824713]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;Number of Participants&quot;&#13;&#10;THEN [Calculation_1611444250374369306]&#13;&#10;ELSEIF [Parameters].[Parameter 3] = &quot;Most Medal&quot;&#13;&#10;THEN SUM([Calculation_1131247939083292689])&#13;&#10;ELSEIF [Parameters].[Parameter 3] = &quot;Win Rate&quot;&#13;&#10;THEN [Calculation_519884291156197384]&#13;&#10;END' />
      </column>
      <column caption='Count player' datatype='integer' name='[Calculation_519884291183235082]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
      </column>
      <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
      </column>
      <column caption='if' datatype='string' name='[Calculation_519884291206410252]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if [Calculation_519884291187683339]!=[gender]&#13;&#10;THEN&#13;&#10;&quot;1&quot;&#13;&#10;ELSE&#13;&#10;&quot;0&quot;&#13;&#10;END' />
      </column>
      <column caption='count event' datatype='integer' name='[Calculation_619807908083027968]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Calculation_1131247939082563600]&gt;0 THEN&#13;&#10;[player_discipline (copy)_1611444250128560134]&#13;&#10;ELSE NULL END&#13;&#10;&#13;&#10;)' />
      </column>
      <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
      </column>
      <column caption='player age group' datatype='string' name='[Calculation_619807908093800453]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_619807908091699204] &lt; 15&#13;&#10;THEN&#13;&#10;&quot;Below 16&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt;= 15 and [Calculation_619807908091699204] &lt;=20&#13;&#10;THEN&#13;&#10;&quot;16-20&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 20 and [Calculation_619807908091699204] &lt;=25&#13;&#10;THEN&#13;&#10;&quot;21-25&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 25 and [Calculation_619807908091699204] &lt;=30&#13;&#10;THEN&#13;&#10;&quot;26-30&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 30 and [Calculation_619807908091699204] &lt;=35&#13;&#10;THEN&#13;&#10;&quot;31-35&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 35&#13;&#10;THEN&#13;&#10;&quot;Above 35&quot;&#13;&#10;END' />
      </column>
      <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
      </column>
      <column caption='1' datatype='integer' name='[Calculation_619807908156243983]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total Athletes' datatype='integer' name='[Calculation_619807908177207312]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_519884291187683339]:&#13;&#10;&#13;&#10;[Calculation_1611444250374369306]&#13;&#10;&#13;&#10;}' />
      </column>
      <column caption='Calculation1' datatype='string' name='[Calculation_619807908194689041]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
      </column>
      <column caption='eventteam' datatype='string' name='[Calculation_619807908210577428]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;TEAM&quot;)= TRUE  or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MIXED&quot;)= TRUE &#13;&#10;THEN&#13;&#10;&quot;TEAM&quot;&#13;&#10;ELSE&#13;&#10;&quot;INDIVIDUAL&quot;&#13;&#10;END' />
      </column>
      <column caption='Last_Name ' datatype='string' name='[First_Name (copy)_1131247938912247820]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='SPLIT([Calculation_1611444250085171201],&apos; &apos;,-1)' />
      </column>
      <column caption='Bronze medal' datatype='integer' name='[Gold medal (copy)_1995657593757016068]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;) &#13;&#10;&#13;&#10;THEN 1 ELSE 0 END' />
      </column>
      <column caption='Silver medal' datatype='integer' name='[Gold medal Count (copy)_1995657593756839939]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;) &#13;&#10;&#13;&#10;THEN 1 ELSE 0 END' />
      </column>
      <column caption='medals_2020.csv' datatype='table' name='[__tableau_internal_object_id__].[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]' role='measure' type='quantitative' />
      <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
      <column caption='Athlete Full Name (Olympic Medals.Csv)' datatype='string' name='[athlete_full_name (olympic_medals.csv)]' role='dimension' type='nominal' />
      <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
      <column caption='Athlete Medals' datatype='string' name='[athlete_medals]' role='dimension' type='nominal' />
      <column caption='Athlete Url (Olympic Athletes.Csv)' datatype='string' name='[athlete_url (olympic_athletes.csv)]' role='dimension' type='nominal' />
      <column caption='Athlete Url (Olympic Medals.Csv)' datatype='string' name='[athlete_url (olympic_medals.csv)]' role='dimension' type='nominal' />
      <column caption='Athlete Url' datatype='string' name='[athlete_url]' role='dimension' type='nominal' />
      <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
      <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
      <column caption='Bio' datatype='string' name='[bio]' role='dimension' type='nominal' />
      <column datatype='string' name='[birth_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Birth Date (Medallists 2024.Csv)' datatype='date' name='[birth_date (medallists_2024.csv)]' role='dimension' type='ordinal' />
      <column caption='Code Athlete' datatype='integer' name='[code_athlete]' role='dimension' type='ordinal' />
      <column caption='Code Team' datatype='string' name='[code_team]' role='dimension' type='nominal' />
      <column caption='countmedal (events)' datatype='integer' name='[countmedal () (copy)_619807908135591946]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [player_discipline (copy)_1611444250128560134]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
      </column>
      <column caption='countmedal (by county)' datatype='integer' name='[countmedal (copy)_1611444250190127116]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706] : SUM([Calculation_1131247939082563600])&#13;&#10;&#13;&#10;}' />
      </column>
      <column caption='countmedal (disciplines)' datatype='integer' name='[countmedal (copy)_619807908100509702]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250124881924]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
      </column>
      <column caption='countmedal (player)' datatype='integer' name='[countmedal (season)  (copy)_619807908147552270]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1611444250085171201]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
      </column>
      <column caption='countmedal (season) ' datatype='integer' name='[countmedal (season) (copy)_619807908140052492]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_619807908131618825]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
      </column>
      <column caption='Country (Medallists 2024.Csv)' datatype='string' name='[country (medallists_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country 3 Letter Code (Olympic Medals.Csv)' datatype='string' name='[country_3_letter_code (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country 3 Letter Code' datatype='string' name='[country_3_letter_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code (Medallists 2024.Csv)' datatype='string' name='[country_code (medallists_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_code (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code (Olympic Medals.Csv)' datatype='string' name='[country_code (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code (Olympic Results.Csv)' datatype='string' name='[country_code (olympic_results.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Long (Medallists 2024.Csv)' datatype='string' name='[country_long (medallists_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_long (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[country_long]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Discipline (Medallists 2024.Csv)' datatype='string' name='[discipline (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
      <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
      <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
      <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
      <column caption='Event Gender' datatype='string' name='[event_gender]' role='dimension' type='nominal' />
      <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
      <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
      <column caption='Event Type (Medallists 2024.Csv)' datatype='string' name='[event_type (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
      <column caption='First Game' datatype='string' name='[first_game]' role='dimension' type='nominal' />
      <column caption='Game End Date' datatype='datetime' name='[game_end_date]' role='dimension' type='ordinal' />
      <column caption='Game Location' datatype='string' name='[game_location]' role='dimension' type='nominal' />
      <column caption='Game Name' datatype='string' name='[game_name]' role='dimension' type='nominal' />
      <column caption='Game Season' datatype='string' name='[game_season]' role='dimension' type='nominal' />
      <column caption='Game Slug' datatype='string' name='[game_slug]' role='dimension' type='nominal' />
      <column caption='Game Start Date' datatype='datetime' name='[game_start_date]' role='dimension' type='ordinal' />
      <column caption='Game Year' datatype='integer' name='[game_year]' role='dimension' type='quantitative' />
      <column caption='Games Participations' datatype='integer' name='[games_participations]' role='measure' type='quantitative' />
      <column caption='Gender (Medallists 2024.Csv)' datatype='string' name='[gender (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Is Medallist' datatype='boolean' name='[is_medallist]' role='dimension' type='nominal' />
      <column caption='Gold medal' datatype='integer' name='[medal? (copy)_1995657593699446785]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;) &#13;&#10;&#13;&#10;THEN [Calculation_1131247939083292689] ELSE 0 END' />
      </column>
      <column caption='Medal Code (Medallists 2024.Csv)' datatype='real' name='[medal_code (medallists_2024.csv)]' role='dimension' type='ordinal' />
      <column caption='Medal Date (Medallists 2024.Csv)' datatype='date' name='[medal_date (medallists_2024.csv)]' role='dimension' type='ordinal' />
      <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
      <column caption='Medal Type (Medallists 2024.Csv)' datatype='string' name='[medal_type (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
      <column caption='Medal Type (Olympic Results.Csv)' datatype='string' name='[medal_type (olympic_results.csv)]' role='dimension' type='nominal' />
      <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
      <column caption='Name (Medallists 2024.Csv)' datatype='string' name='[name (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
      <column caption='Nationality (Medallists 2024.Csv)' datatype='string' name='[nationality (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Nationality Code (Medallists 2024.Csv)' datatype='string' name='[nationality_code (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Nationality Long (Medallists 2024.Csv)' datatype='string' name='[nationality_long (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Participant Title' datatype='string' name='[participant_title]' role='dimension' type='nominal' />
      <column caption='Participant Type (Olympic Medals.Csv)' datatype='string' name='[participant_type (olympic_medals.csv)]' role='dimension' type='nominal' />
      <column caption='Participant Type' datatype='string' name='[participant_type]' role='dimension' type='nominal' />
      <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
      </column>
      <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='Rank Equal' datatype='boolean' name='[rank_equal]' role='dimension' type='nominal' />
      <column caption='Rank Position' datatype='integer' name='[rank_position]' role='measure' type='quantitative' />
      <column datatype='string' name='[residence_country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
      <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
      <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
      <column caption='Team Gender' datatype='string' name='[team_gender]' role='dimension' type='nominal' />
      <column caption='Url Event (Medallists 2024.Csv)' datatype='string' name='[url_event (medallists_2024.csv)]' role='dimension' type='nominal' />
      <column caption='Value Type' datatype='string' name='[value_type]' role='dimension' type='nominal' />
      <column caption='Value Unit' datatype='string' name='[value_unit]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_1131247939083292689]' derivation='Count' name='[cnt:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1995657593751044098]' derivation='Max' name='[max:Calculation_1995657593751044098:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1995657593751044098]' derivation='Max' name='[max:Calculation_1995657593751044098:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_619807908093800453]' derivation='None' name='[none:Calculation_619807908093800453:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_619807908131618825]' derivation='None' name='[none:Calculation_619807908131618825:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1995657593751044098]' derivation='Sum' name='[sum:Calculation_1995657593751044098:qk]' pivot='key' type='quantitative' />
      <column-instance column='[countmedal () (copy)_619807908135591946]' derivation='Sum' name='[sum:countmedal () (copy)_619807908135591946:qk]' pivot='key' type='quantitative' />
      <column-instance column='[countmedal (copy)_1611444250190127116]' derivation='Sum' name='[sum:countmedal (copy)_1611444250190127116:qk]' pivot='key' type='quantitative' />
      <column-instance column='[countmedal (copy)_619807908100509702]' derivation='Sum' name='[sum:countmedal (copy)_619807908100509702:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1995657593751044098]' derivation='User' name='[usr:Calculation_1995657593751044098:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_519884291156197384]' derivation='User' name='[usr:Calculation_519884291156197384:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_519884291162824713]' derivation='User' name='[usr:Calculation_519884291162824713:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_519884291183235082]' derivation='User' name='[usr:Calculation_519884291183235082:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_619807908083027968]' derivation='User' name='[usr:Calculation_619807908083027968:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Calculation1 (copy))' hidden='true' name='[Action (Calculation1 (copy))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation1 (copy)_619807908195311635]' />
        </groupfilter>
      </group>
      <group caption='Action (Season)' hidden='true' name='[Action (Season)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_619807908131618825]' />
        </groupfilter>
      </group>
      <group caption='Action (Year)' hidden='true' name='[Action (Year)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1611444250032074752]' />
        </groupfilter>
      </group>
      <group caption='Action (Year,player_country)' hidden='true' name='[Action (Year,player_country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1611444250032074752]' />
          <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
        </groupfilter>
      </group>
      <group caption='Action (player_country)' hidden='true' name='[Action (player_country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
        </groupfilter>
      </group>
      <group caption='Action (player_country,player_medal_category)' hidden='true' name='[Action (player_country,player_medal_category)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
          <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
        </groupfilter>
      </group>
      <group caption='Action (player_discipline)' hidden='true' name='[Action (player_discipline)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1611444250124881924]' />
        </groupfilter>
      </group>
      <group caption='Action (player_event)' hidden='true' name='[Action (player_event)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[player_discipline (copy)_1611444250128560134]' />
        </groupfilter>
      </group>
      <group caption='Action (player_name)' hidden='true' name='[Action (player_name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_1611444250085171201]' />
        </groupfilter>
      </group>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Hendy/OneDrive/Desktop/SC4024/olympic_results+.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='10/31/2024 02:06:27 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[athlete_full_name (olympic_athletes.csv)]' value='[Extract].[athlete_full_name]' />
            <map key='[athlete_full_name (olympic_medals.csv)]' value='[Extract].[athlete_full_name1]' />
            <map key='[athlete_full_name]' value='[Extract].[athlete_full_name2]' />
            <map key='[athlete_medals]' value='[Extract].[athlete_medals]' />
            <map key='[athlete_url (olympic_athletes.csv)]' value='[Extract].[athlete_url]' />
            <map key='[athlete_url (olympic_medals.csv)]' value='[Extract].[athlete_url1]' />
            <map key='[athlete_url]' value='[Extract].[athlete_url2]' />
            <map key='[athlete_year_birth]' value='[Extract].[athlete_year_birth]' />
            <map key='[athletes]' value='[Extract].[athletes]' />
            <map key='[bio]' value='[Extract].[bio]' />
            <map key='[birth_country]' value='[Extract].[birth_country]' />
            <map key='[birth_date (medallists_2024.csv)]' value='[Extract].[birth_date]' />
            <map key='[birth_date]' value='[Extract].[birth_date1]' />
            <map key='[birth_place]' value='[Extract].[birth_place]' />
            <map key='[coach]' value='[Extract].[coach]' />
            <map key='[code (medals_2024.csv)]' value='[Extract].[code]' />
            <map key='[code]' value='[Extract].[code1]' />
            <map key='[code_athlete]' value='[Extract].[code_athlete]' />
            <map key='[code_team]' value='[Extract].[code_team]' />
            <map key='[country (medallists_2024.csv)]' value='[Extract].[country]' />
            <map key='[country (medals_2024.csv)]' value='[Extract].[country1]' />
            <map key='[country]' value='[Extract].[country2]' />
            <map key='[country_3_letter_code (olympic_medals.csv)]' value='[Extract].[country_3_letter_code]' />
            <map key='[country_3_letter_code]' value='[Extract].[country_3_letter_code1]' />
            <map key='[country_code (medallists_2024.csv)]' value='[Extract].[country_code]' />
            <map key='[country_code (medals_2024.csv)]' value='[Extract].[country_code1]' />
            <map key='[country_code (olympic_medals.csv)]' value='[Extract].[country_code2]' />
            <map key='[country_code (olympic_results.csv)]' value='[Extract].[country_code3]' />
            <map key='[country_code]' value='[Extract].[country_code4]' />
            <map key='[country_long (medallists_2024.csv)]' value='[Extract].[country_long]' />
            <map key='[country_long (medals_2024.csv)]' value='[Extract].[country_long1]' />
            <map key='[country_long]' value='[Extract].[country_long2]' />
            <map key='[country_name (olympic_medals.csv)]' value='[Extract].[country_name]' />
            <map key='[country_name]' value='[Extract].[country_name1]' />
            <map key='[current]' value='[Extract].[current]' />
            <map key='[discipline (medallists_2024.csv)]' value='[Extract].[discipline]' />
            <map key='[discipline (medals_2024.csv)]' value='[Extract].[discipline1]' />
            <map key='[discipline_title (olympic_medals.csv)]' value='[Extract].[discipline_title]' />
            <map key='[discipline_title]' value='[Extract].[discipline_title1]' />
            <map key='[disciplines]' value='[Extract].[disciplines]' />
            <map key='[education]' value='[Extract].[education]' />
            <map key='[event (medallists_2024.csv)]' value='[Extract].[event]' />
            <map key='[event]' value='[Extract].[event1]' />
            <map key='[event_gender]' value='[Extract].[event_gender]' />
            <map key='[event_title (olympic_medals.csv)]' value='[Extract].[event_title]' />
            <map key='[event_title]' value='[Extract].[event_title1]' />
            <map key='[event_type (medallists_2024.csv)]' value='[Extract].[event_type]' />
            <map key='[event_type]' value='[Extract].[event_type1]' />
            <map key='[events]' value='[Extract].[events]' />
            <map key='[family]' value='[Extract].[family]' />
            <map key='[first_game]' value='[Extract].[first_game]' />
            <map key='[function]' value='[Extract].[function]' />
            <map key='[game_end_date]' value='[Extract].[game_end_date]' />
            <map key='[game_location]' value='[Extract].[game_location]' />
            <map key='[game_name]' value='[Extract].[game_name]' />
            <map key='[game_season]' value='[Extract].[game_season]' />
            <map key='[game_slug]' value='[Extract].[game_slug]' />
            <map key='[game_start_date]' value='[Extract].[game_start_date]' />
            <map key='[game_year]' value='[Extract].[game_year]' />
            <map key='[games_participations]' value='[Extract].[games_participations]' />
            <map key='[gender (medallists_2024.csv)]' value='[Extract].[gender]' />
            <map key='[gender (medals_2024.csv)]' value='[Extract].[gender1]' />
            <map key='[gender]' value='[Extract].[gender2]' />
            <map key='[height]' value='[Extract].[height]' />
            <map key='[hero]' value='[Extract].[hero]' />
            <map key='[hobbies]' value='[Extract].[hobbies]' />
            <map key='[influence]' value='[Extract].[influence]' />
            <map key='[is_medallist]' value='[Extract].[is_medallist]' />
            <map key='[lang]' value='[Extract].[lang]' />
            <map key='[medal_code (medallists_2024.csv)]' value='[Extract].[medal_code]' />
            <map key='[medal_code]' value='[Extract].[medal_code1]' />
            <map key='[medal_date (medallists_2024.csv)]' value='[Extract].[medal_date]' />
            <map key='[medal_date]' value='[Extract].[medal_date1]' />
            <map key='[medal_type (medallists_2024.csv)]' value='[Extract].[medal_type]' />
            <map key='[medal_type (olympic_medals.csv)]' value='[Extract].[medal_type1]' />
            <map key='[medal_type (olympic_results.csv)]' value='[Extract].[medal_type2]' />
            <map key='[medal_type]' value='[Extract].[medal_type3]' />
            <map key='[name (medallists_2024.csv)]' value='[Extract].[name]' />
            <map key='[name (medals_2024.csv)]' value='[Extract].[name1]' />
            <map key='[name]' value='[Extract].[name2]' />
            <map key='[name_short]' value='[Extract].[name_short]' />
            <map key='[name_tv]' value='[Extract].[name_tv]' />
            <map key='[nationality (medallists_2024.csv)]' value='[Extract].[nationality]' />
            <map key='[nationality]' value='[Extract].[nationality1]' />
            <map key='[nationality_code (medallists_2024.csv)]' value='[Extract].[nationality_code]' />
            <map key='[nationality_code]' value='[Extract].[nationality_code1]' />
            <map key='[nationality_long (medallists_2024.csv)]' value='[Extract].[nationality_long]' />
            <map key='[nationality_long]' value='[Extract].[nationality_long1]' />
            <map key='[nickname]' value='[Extract].[nickname]' />
            <map key='[occupation]' value='[Extract].[occupation]' />
            <map key='[other_sports]' value='[Extract].[other_sports]' />
            <map key='[participant_title]' value='[Extract].[participant_title]' />
            <map key='[participant_type (olympic_medals.csv)]' value='[Extract].[participant_type]' />
            <map key='[participant_type]' value='[Extract].[participant_type1]' />
            <map key='[philosophy]' value='[Extract].[philosophy]' />
            <map key='[rank_equal]' value='[Extract].[rank_equal]' />
            <map key='[rank_position]' value='[Extract].[rank_position]' />
            <map key='[reason]' value='[Extract].[reason]' />
            <map key='[residence_country]' value='[Extract].[residence_country]' />
            <map key='[residence_place]' value='[Extract].[residence_place]' />
            <map key='[ritual]' value='[Extract].[ritual]' />
            <map key='[slug_game (olympic_medals.csv)]' value='[Extract].[slug_game]' />
            <map key='[slug_game]' value='[Extract].[slug_game1]' />
            <map key='[sporting_relatives]' value='[Extract].[sporting_relatives]' />
            <map key='[team]' value='[Extract].[team]' />
            <map key='[team_gender]' value='[Extract].[team_gender]' />
            <map key='[url_event (medallists_2024.csv)]' value='[Extract].[url_event]' />
            <map key='[url_event]' value='[Extract].[url_event1]' />
            <map key='[value_type]' value='[Extract].[value_type]' />
            <map key='[value_unit]' value='[Extract].[value_unit]' />
            <map key='[weight]' value='[Extract].[weight]' />
            <map key='[year]' value='[Extract].[year]' />
          </cols>
          <refresh>
            <refresh-event add-from-file-path='olympic_results+' increment-value='%null%' refresh-type='create' rows-inserted='182819' timestamp-start='2024-10-31 02:06:20.571' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>code1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code1</remote-alias>
              <ordinal>0</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15494</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>current</remote-name>
              <remote-type>11</remote-type>
              <local-name>[current]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>current</remote-alias>
              <ordinal>1</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name2</remote-alias>
              <ordinal>2</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15494</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name_short</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name_short]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name_short</remote-alias>
              <ordinal>3</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15494</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name_tv</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name_tv]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name_tv</remote-alias>
              <ordinal>4</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>15494</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gender2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gender2</remote-alias>
              <ordinal>5</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>function</remote-name>
              <remote-type>129</remote-type>
              <local-name>[function]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>function</remote-alias>
              <ordinal>6</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_code4</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_code4</remote-alias>
              <ordinal>7</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country2</remote-alias>
              <ordinal>8</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_long2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_long2</remote-alias>
              <ordinal>9</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nationality1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nationality]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nationality1</remote-alias>
              <ordinal>10</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nationality_long1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nationality_long]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nationality_long1</remote-alias>
              <ordinal>11</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nationality_code1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nationality_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nationality_code1</remote-alias>
              <ordinal>12</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>268</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>height</remote-name>
              <remote-type>20</remote-type>
              <local-name>[height]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>height</remote-alias>
              <ordinal>13</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>303</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>weight</remote-name>
              <remote-type>20</remote-type>
              <local-name>[weight]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>weight</remote-alias>
              <ordinal>14</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>disciplines</remote-name>
              <remote-type>129</remote-type>
              <local-name>[disciplines]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>disciplines</remote-alias>
              <ordinal>15</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>172</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>events</remote-name>
              <remote-type>129</remote-type>
              <local-name>[events]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>events</remote-alias>
              <ordinal>16</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3590</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>birth_date1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[birth_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>birth_date1</remote-alias>
              <ordinal>17</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>15494</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>birth_place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[birth_place]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>birth_place</remote-alias>
              <ordinal>18</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12207</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>birth_country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[birth_country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>birth_country</remote-alias>
              <ordinal>19</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>334</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>residence_place</remote-name>
              <remote-type>129</remote-type>
              <local-name>[residence_place]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>residence_place</remote-alias>
              <ordinal>20</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2787</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>residence_country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[residence_country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>residence_country</remote-alias>
              <ordinal>21</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>346</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nickname</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nickname]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nickname</remote-alias>
              <ordinal>22</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3562</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hobbies</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hobbies]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hobbies</remote-alias>
              <ordinal>23</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6920</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>occupation</remote-name>
              <remote-type>129</remote-type>
              <local-name>[occupation]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>occupation</remote-alias>
              <ordinal>24</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>education</remote-name>
              <remote-type>129</remote-type>
              <local-name>[education]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>education</remote-alias>
              <ordinal>25</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7556</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>family</remote-name>
              <remote-type>129</remote-type>
              <local-name>[family]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>family</remote-alias>
              <ordinal>26</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8160</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lang</remote-name>
              <remote-type>129</remote-type>
              <local-name>[lang]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lang</remote-alias>
              <ordinal>27</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>416</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coach</remote-name>
              <remote-type>129</remote-type>
              <local-name>[coach]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coach</remote-alias>
              <ordinal>28</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5131</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>reason</remote-name>
              <remote-type>129</remote-type>
              <local-name>[reason]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>reason</remote-alias>
              <ordinal>29</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>8160</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hero</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hero]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hero</remote-alias>
              <ordinal>30</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4461</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>influence</remote-name>
              <remote-type>129</remote-type>
              <local-name>[influence]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>influence</remote-alias>
              <ordinal>31</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1603</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>philosophy</remote-name>
              <remote-type>129</remote-type>
              <local-name>[philosophy]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>philosophy</remote-alias>
              <ordinal>32</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2920</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sporting_relatives</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sporting_relatives]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sporting_relatives</remote-alias>
              <ordinal>33</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3357</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ritual</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ritual]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ritual</remote-alias>
              <ordinal>34</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>858</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_sports</remote-name>
              <remote-type>129</remote-type>
              <local-name>[other_sports]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_sports</remote-alias>
              <ordinal>35</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>377</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>129</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>36</ordinal>
              <family>athletes_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>discipline_title1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[discipline_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>discipline_title1</remote-alias>
              <ordinal>37</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>192</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_title1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_title1</remote-alias>
              <ordinal>38</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3407</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>slug_game1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[slug_game]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>slug_game1</remote-alias>
              <ordinal>39</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>participant_type1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[participant_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>participant_type1</remote-alias>
              <ordinal>40</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medal_type2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[medal_type (olympic_results.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>medal_type2</remote-alias>
              <ordinal>41</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athletes</remote-name>
              <remote-type>129</remote-type>
              <local-name>[athletes]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athletes</remote-alias>
              <ordinal>42</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9012</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rank_equal</remote-name>
              <remote-type>11</remote-type>
              <local-name>[rank_equal]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rank_equal</remote-alias>
              <ordinal>43</ordinal>
              <family>olympic_results.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rank_position</remote-name>
              <remote-type>20</remote-type>
              <local-name>[rank_position]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rank_position</remote-alias>
              <ordinal>44</ordinal>
              <family>olympic_results.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>325</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_name1</remote-alias>
              <ordinal>45</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>556</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_code3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_code (olympic_results.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_code3</remote-alias>
              <ordinal>46</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>555</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_3_letter_code1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_3_letter_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_3_letter_code1</remote-alias>
              <ordinal>47</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>556</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athlete_url2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[athlete_url]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athlete_url2</remote-alias>
              <ordinal>48</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>71213</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athlete_full_name2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[athlete_full_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athlete_full_name2</remote-alias>
              <ordinal>49</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>72687</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value_unit</remote-name>
              <remote-type>129</remote-type>
              <local-name>[value_unit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>value_unit</remote-alias>
              <ordinal>50</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>45207</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>value_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[value_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>value_type</remote-alias>
              <ordinal>51</ordinal>
              <family>olympic_results.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_slug</remote-name>
              <remote-type>129</remote-type>
              <local-name>[game_slug]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_slug</remote-alias>
              <ordinal>52</ordinal>
              <family>olympic_hosts.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_end_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[game_end_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_end_date</remote-alias>
              <ordinal>53</ordinal>
              <family>olympic_hosts.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_start_date</remote-name>
              <remote-type>135</remote-type>
              <local-name>[game_start_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_start_date</remote-alias>
              <ordinal>54</ordinal>
              <family>olympic_hosts.csv</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[game_location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_location</remote-alias>
              <ordinal>55</ordinal>
              <family>olympic_hosts.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[game_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_name</remote-alias>
              <ordinal>56</ordinal>
              <family>olympic_hosts.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_season</remote-name>
              <remote-type>129</remote-type>
              <local-name>[game_season]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_season</remote-alias>
              <ordinal>57</ordinal>
              <family>olympic_hosts.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>game_year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[game_year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>game_year</remote-alias>
              <ordinal>58</ordinal>
              <family>olympic_hosts.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>38</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medal_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[medal_date (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>medal_date</remote-alias>
              <ordinal>59</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>44</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medal_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[medal_type (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>medal_type</remote-alias>
              <ordinal>60</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medal_code</remote-name>
              <remote-type>5</remote-type>
              <local-name>[medal_code (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>medal_code</remote-alias>
              <ordinal>61</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name</remote-alias>
              <ordinal>62</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3143</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gender (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gender</remote-alias>
              <ordinal>63</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_code (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_code</remote-alias>
              <ordinal>64</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>65</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_long</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_long (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_long</remote-alias>
              <ordinal>66</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nationality_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nationality_code (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nationality_code</remote-alias>
              <ordinal>67</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nationality</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nationality (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nationality</remote-alias>
              <ordinal>68</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>nationality_long</remote-name>
              <remote-type>129</remote-type>
              <local-name>[nationality_long (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>nationality_long</remote-alias>
              <ordinal>69</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>64</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team</remote-alias>
              <ordinal>70</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>85</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>team_gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[team_gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>team_gender</remote-alias>
              <ordinal>71</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>discipline</remote-name>
              <remote-type>129</remote-type>
              <local-name>[discipline (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>discipline</remote-alias>
              <ordinal>72</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>81</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event</remote-alias>
              <ordinal>73</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event_type (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_type</remote-alias>
              <ordinal>74</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>url_event</remote-name>
              <remote-type>129</remote-type>
              <local-name>[url_event (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>url_event</remote-alias>
              <ordinal>75</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>630</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>birth_date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[birth_date (medallists_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>birth_date</remote-alias>
              <ordinal>76</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>3143</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>code_athlete</remote-name>
              <remote-type>20</remote-type>
              <local-name>[code_athlete]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code_athlete</remote-alias>
              <ordinal>77</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3143</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>code_team</remote-name>
              <remote-type>129</remote-type>
              <local-name>[code_team]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code_team</remote-alias>
              <ordinal>78</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2440</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>is_medallist</remote-name>
              <remote-type>11</remote-type>
              <local-name>[is_medallist]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>is_medallist</remote-alias>
              <ordinal>79</ordinal>
              <family>medallists_2024.csv</family>
              <local-type>boolean</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medal_type3</remote-name>
              <remote-type>129</remote-type>
              <local-name>[medal_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>medal_type3</remote-alias>
              <ordinal>80</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medal_code1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[medal_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>medal_code1</remote-alias>
              <ordinal>81</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medal_date1</remote-name>
              <remote-type>133</remote-type>
              <local-name>[medal_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>medal_date1</remote-alias>
              <ordinal>82</ordinal>
              <family>medals_2024.csv</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>617</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[name (medals_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>name1</remote-alias>
              <ordinal>83</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>617</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gender1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gender (medals_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gender1</remote-alias>
              <ordinal>84</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>discipline1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[discipline (medals_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>discipline1</remote-alias>
              <ordinal>85</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>617</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event1</remote-alias>
              <ordinal>86</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>617</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_type1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event_type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_type1</remote-alias>
              <ordinal>87</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>42</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>url_event1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[url_event]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>url_event1</remote-alias>
              <ordinal>88</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>617</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[code (medals_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>code</remote-alias>
              <ordinal>89</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>617</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_code1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_code (medals_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_code1</remote-alias>
              <ordinal>90</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country (medals_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country1</remote-alias>
              <ordinal>91</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_long1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_long (medals_2024.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_long1</remote-alias>
              <ordinal>92</ordinal>
              <family>medals_2024.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>discipline_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[discipline_title (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>discipline_title</remote-alias>
              <ordinal>93</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>180</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>slug_game</remote-name>
              <remote-type>129</remote-type>
              <local-name>[slug_game (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>slug_game</remote-alias>
              <ordinal>94</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>126</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event_title (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_title</remote-alias>
              <ordinal>95</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2931</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>event_gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[event_gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>event_gender</remote-alias>
              <ordinal>96</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>medal_type1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[medal_type (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>medal_type1</remote-alias>
              <ordinal>97</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>participant_type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[participant_type (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>participant_type</remote-alias>
              <ordinal>98</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>participant_title</remote-name>
              <remote-type>129</remote-type>
              <local-name>[participant_title]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>participant_title</remote-alias>
              <ordinal>99</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>690</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athlete_url1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[athlete_url (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athlete_url1</remote-alias>
              <ordinal>100</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29480</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athlete_full_name1</remote-name>
              <remote-type>129</remote-type>
              <local-name>[athlete_full_name (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athlete_full_name1</remote-alias>
              <ordinal>101</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>31545</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_name (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_name</remote-alias>
              <ordinal>102</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_code2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_code (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_code2</remote-alias>
              <ordinal>103</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>103</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_3_letter_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_3_letter_code (olympic_medals.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_3_letter_code</remote-alias>
              <ordinal>104</ordinal>
              <family>olympic_medals.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>114</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athlete_url</remote-name>
              <remote-type>129</remote-type>
              <local-name>[athlete_url (olympic_athletes.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athlete_url</remote-alias>
              <ordinal>105</ordinal>
              <family>olympic_athletes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>72532</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athlete_full_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[athlete_full_name (olympic_athletes.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athlete_full_name</remote-alias>
              <ordinal>106</ordinal>
              <family>olympic_athletes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>72532</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>games_participations</remote-name>
              <remote-type>20</remote-type>
              <local-name>[games_participations]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>games_participations</remote-alias>
              <ordinal>107</ordinal>
              <family>olympic_athletes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>15</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>first_game</remote-name>
              <remote-type>129</remote-type>
              <local-name>[first_game]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>first_game</remote-alias>
              <ordinal>108</ordinal>
              <family>olympic_athletes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>87</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athlete_year_birth</remote-name>
              <remote-type>20</remote-type>
              <local-name>[athlete_year_birth]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athlete_year_birth</remote-alias>
              <ordinal>109</ordinal>
              <family>olympic_athletes.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>332</approx-count>
              <contains-null>true</contains-null>
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>athlete_medals</remote-name>
              <remote-type>129</remote-type>
              <local-name>[athlete_medals]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>athlete_medals</remote-alias>
              <ordinal>110</ordinal>
              <family>olympic_athletes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>272</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bio</remote-name>
              <remote-type>129</remote-type>
              <local-name>[bio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bio</remote-alias>
              <ordinal>111</ordinal>
              <family>olympic_athletes.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29825</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <object-id>[medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout common-percentage='0.911142' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0888575' show-structure='true' user-set-layout-v2='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_1611444250124881924:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cycling Mountain Bike&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cycling Road&apos;, &apos;Cycling Mountain Bike&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fencing&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gymnastics Artistic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lacrosse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rhythmic Gymnastics&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;3x3 Basketball&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Archery&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Croquet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Synchronized Swimming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Weightlifting&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Boxing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cycling BMX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ice Hockey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Table Tennis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Biathlon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cycling BMX Freestyle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sailing&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Snowboard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cycling Road&apos;, &apos;Cycling Track&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Golf&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gymnastics Rhythmic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cycling Road&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Figure skating&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeu de Paume&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Karate&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equestrian&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equestrian  Vaulting&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marathon Swimming&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Speed skating&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Volleyball&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alpine Skiing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Athletics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trampoline&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trampoline Gymnastics&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wrestling&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Canoe Marathon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hockey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Softball&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Surfing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tennis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Baseball/Softball&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canoe Slalom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cycling Track&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Freestyle Skiing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Short Track Speed Skating&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bobsleigh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cycling BMX Racing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Football&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marathon Swimming&apos;, &apos;Swimming&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nordic Combined&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shooting&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Equestrian Eventing&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Polo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Skateboarding&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Swimming&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equestrian Jumping&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roque&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Triathlon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cricket&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Modern Pentathlon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rugby&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Water Polo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Basque Pelota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Judo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rugby Sevens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ski Jumping&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Baseball&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Canoe Sprint&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Diving&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Skeleton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Artistic Gymnastics&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Badminton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Basketball&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cross Country Skiing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tug of War&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Breaking&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Handball&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rackets&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sport Climbing&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taekwondo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Equestrian Dressage&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Military Patrol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rowing&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Artistic Swimming&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beach Volleyball&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Curling&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Short Track&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Water Motorsports&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:Calculation_1995657593751044098:ok]' type='palette'>
            <map to='#9c755f'>
              <bucket>3</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_1995657593751044098:ok]' type='palette'>
            <map to='#9c755f'>
              <bucket>3</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2</bucket>
            </map>
            <map to='#edc948'>
              <bucket>1</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_1611444250133389320:nk]' palette=':default' type='shape'>
            <map to='circle'>
              <bucket>&quot;GOLD&quot;</bucket>
            </map>
            <map to='plus'>
              <bucket>&quot;BRONZE&quot;</bucket>
            </map>
            <map to='square'>
              <bucket>&quot;SILVER&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_519884291187683339:nk]' type='shape'>
            <map to='Gender/1.png'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='Gender/2.png'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_619807908131618825:nk]' type='shape'>
            <map to='olympic/summer.jpeg'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='olympic/winter.jpeg'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[max:Calculation_1995657593751044098:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1995657593751044098:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (copy)_1611444250190127116:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1995657593751044098:ok]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291162824713:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_619807908083027968:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[cnt:Calculation_1131247939083292689:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal () (copy)_619807908135591946:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (copy)_619807908100509702:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291183235082:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_1611444250133389320:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BRONZE&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SILVER&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GOLD&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_519884291187683339:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_619807908093800453:nk]' type='palette'>
            <map to='#053661'>
              <bucket>&quot;Above 35&quot;</bucket>
            </map>
            <map to='#116985'>
              <bucket>&quot;31-35&quot;</bucket>
            </map>
            <map to='#27aab0'>
              <bucket>&quot;26-30&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#51d2bb'>
              <bucket>&quot;21-25&quot;</bucket>
            </map>
            <map to='#94e7a8'>
              <bucket>&quot;16-20&quot;</bucket>
            </map>
            <map to='#c7f296'>
              <bucket>&quot;Below 16&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Singapore&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='medal_type' />
        <field-sort-custom-order field='Calculation_1611444250085171201' />
        <field-sort-custom-order field='Calculation_1131247939082563600' />
        <field-sort-custom-order field='medal? (copy)_1995657593699446785' />
        <field-sort-custom-order field='Gold medal (copy)_1995657593757016068' />
        <field-sort-custom-order field='Gold medal Count (copy)_1995657593756839939' />
        <field-sort-custom-order field='medal_code' />
        <field-sort-custom-order field='medal_date' />
        <field-sort-custom-order field='athlete_short_name' />
        <field-sort-custom-order field='Calculation_1131247938910908427' />
        <field-sort-custom-order field='First_Name (copy)_1131247938912247820' />
        <field-sort-custom-order field='athlete_name' />
        <field-sort-custom-order field='athlete_sex' />
        <field-sort-custom-order field='athlete_link' />
        <field-sort-custom-order field='country_code' />
        <field-sort-custom-order field='Calculation_1131247939063275533' />
        <field-sort-custom-order field='Filter_Medal_Type (copy)_1995657593691549696' />
        <field-sort-custom-order field='discipline_code' />
        <field-sort-custom-order field='event' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='discipline' />
        <field-sort-custom-order field='name' />
        <field-sort-custom-order field='gender' />
        <field-sort-custom-order field='event_type' />
        <field-sort-custom-order field='url_event' />
        <field-sort-custom-order field='code' />
        <field-sort-custom-order field='country_long' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='discipline_title' />
        <field-sort-custom-order field='event_title' />
        <field-sort-custom-order field='slug_game' />
        <field-sort-custom-order field='participant_type' />
        <field-sort-custom-order field='medal_type (olympic_results.csv)' />
        <field-sort-custom-order field='Calculation_1611444250120126467' />
        <field-sort-custom-order field='Calculation_1611444250133389320' />
        <field-sort-custom-order field='Calculation_1995657593751044098' />
        <field-sort-custom-order field='athletes' />
        <field-sort-custom-order field='rank_equal' />
        <field-sort-custom-order field='Calculation_1131247939064029198' />
        <field-sort-custom-order field='rank_position' />
        <field-sort-custom-order field='country_name' />
        <field-sort-custom-order field='Calculation_1611444250119368706' />
        <field-sort-custom-order field='Calculation_1611444250204209168' />
        <field-sort-custom-order field='Calculation_1611444250204155919' />
        <field-sort-custom-order field='country_code (olympic_results.csv)' />
        <field-sort-custom-order field='country_3_letter_code' />
        <field-sort-custom-order field='athlete_url' />
        <field-sort-custom-order field='athlete_full_name' />
        <field-sort-custom-order field='Calculation_1131247939065413647' />
        <field-sort-custom-order field='value_unit' />
        <field-sort-custom-order field='value_type' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Win Rate' caption='Content' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Win Rate&quot;'>
          <calculation class='tableau' formula='&quot;Win Rate&quot;' />
          <aliases>
            <alias key='&quot;Most Medal&quot;' value='Most Medal' />
            <alias key='&quot;Number of Participants&quot;' value='Number of Participants' />
            <alias key='&quot;Win Rate&quot;' value='Win Rate' />
          </aliases>
        </column>
        <column caption='Parameter 4' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;BACK&quot;'>
          <calculation class='tableau' formula='&quot;BACK&quot;' />
        </column>
      </datasource-dependencies>
      <object-graph>
        <objects>
          <object caption='medals_2020.csv' id='medals_2020.csv_FC93941A62EE4AB5922A53DAB255D4E5'>
            <properties context=''>
              <relation join='left' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='IFNULL([olympic_results.csv].[athlete_full_name],[olympic_medals.csv].[athlete_full_name])' />
                    <expression op='[olympic_athletes.csv].[athlete_full_name]' />
                  </expression>
                </clause>
                <relation join='full' type='join'>
                  <clause type='join'>
                    <expression op='AND'>
                      <expression op='='>
                        <expression op='[olympic_results.csv].[discipline_title]' />
                        <expression op='[olympic_medals.csv].[discipline_title]' />
                      </expression>
                      <expression op='='>
                        <expression op='[olympic_results.csv].[slug_game]' />
                        <expression op='[olympic_medals.csv].[slug_game]' />
                      </expression>
                      <expression op='='>
                        <expression op='[olympic_results.csv].[country_name]' />
                        <expression op='[olympic_medals.csv].[country_name]' />
                      </expression>
                      <expression op='='>
                        <expression op='[olympic_results.csv].[event_title]' />
                        <expression op='[olympic_medals.csv].[event_title]' />
                      </expression>
                      <expression op='='>
                        <expression op='[olympic_results.csv].[athlete_full_name]' />
                        <expression op='[olympic_medals.csv].[athlete_full_name]' />
                      </expression>
                    </expression>
                  </clause>
                  <relation join='full' type='join'>
                    <clause type='join'>
                      <expression op='AND'>
                        <expression op='='>
                          <expression op='TRIM(STR([athletes_2024.csv].[code]))' />
                          <expression op='TRIM(STR([medals_2024.csv].[code]))' />
                        </expression>
                        <expression op='='>
                          <expression op='[medallists_2024.csv].[url_event]' />
                          <expression op='[medals_2024.csv].[url_event]' />
                        </expression>
                        <expression op='='>
                          <expression op='[athletes_2024.csv].[country]' />
                          <expression op='[medals_2024.csv].[country]' />
                        </expression>
                        <expression op='='>
                          <expression op='[athletes_2024.csv].[name_tv]' />
                          <expression op='[medals_2024.csv].[name]' />
                        </expression>
                      </expression>
                    </clause>
                    <relation join='left' type='join'>
                      <clause type='join'>
                        <expression op='AND'>
                          <expression op='='>
                            <expression op='[athletes_2024.csv].[code]' />
                            <expression op='[medallists_2024.csv].[code_athlete]' />
                          </expression>
                          <expression op='='>
                            <expression op='[athletes_2024.csv].[country]' />
                            <expression op='[medallists_2024.csv].[country]' />
                          </expression>
                        </expression>
                      </clause>
                      <relation join='left' type='join'>
                        <clause type='join'>
                          <expression op='='>
                            <expression op='[olympic_results.csv].[slug_game]' />
                            <expression op='[olympic_hosts.csv].[game_slug]' />
                          </expression>
                        </clause>
                        <relation join='full' type='join'>
                          <clause type='join'>
                            <expression op='AND'>
                              <expression op='='>
                                <expression op='UPPER([athletes_2024.csv].[country])' />
                                <expression op='UPPER([olympic_results.csv].[country_name])' />
                              </expression>
                              <expression op='='>
                                <expression op='UPPER(&#13;&#10;&#13;&#10;REPLACE( REPLACE(  REPLACE( REPLACE([athletes_2024.csv].[disciplines],&quot;[&quot;,&quot;&quot;) ,&quot;]&quot;,&quot;&quot;) ,&quot;&apos;&quot;,&quot;&quot;) , &apos;&quot;&apos;,&quot;&quot;)&#13;&#10;&#13;&#10;&#13;&#10;)' />
                                <expression op='UPPER([olympic_results.csv].[discipline_title])' />
                              </expression>
                              <expression op='='>
                                <expression op='[athletes_2024.csv].[name_tv]' />
                                <expression op='[olympic_results.csv].[athlete_full_name]' />
                              </expression>
                              <expression op='='>
                                <expression op='[athletes_2024.csv].[year]' />
                                <expression op='RIGHT([olympic_results.csv].[slug_game],4)' />
                              </expression>
                            </expression>
                          </clause>
                          <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='athletes_2024.csv' table='[athletes_2024#csv]' type='table'>
                            <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                              <column datatype='integer' name='code' ordinal='0' />
                              <column datatype='boolean' name='current' ordinal='1' />
                              <column datatype='string' name='name' ordinal='2' />
                              <column datatype='string' name='name_short' ordinal='3' />
                              <column datatype='string' name='name_tv' ordinal='4' />
                              <column datatype='string' name='gender' ordinal='5' />
                              <column datatype='string' name='function' ordinal='6' />
                              <column datatype='string' name='country_code' ordinal='7' />
                              <column datatype='string' name='country' ordinal='8' />
                              <column datatype='string' name='country_long' ordinal='9' />
                              <column datatype='string' name='nationality' ordinal='10' />
                              <column datatype='string' name='nationality_long' ordinal='11' />
                              <column datatype='string' name='nationality_code' ordinal='12' />
                              <column datatype='integer' name='height' ordinal='13' />
                              <column datatype='integer' name='weight' ordinal='14' />
                              <column datatype='string' name='disciplines' ordinal='15' />
                              <column datatype='string' name='events' ordinal='16' />
                              <column datatype='date' name='birth_date' ordinal='17' />
                              <column datatype='string' name='birth_place' ordinal='18' />
                              <column datatype='string' name='birth_country' ordinal='19' />
                              <column datatype='string' name='residence_place' ordinal='20' />
                              <column datatype='string' name='residence_country' ordinal='21' />
                              <column datatype='string' name='nickname' ordinal='22' />
                              <column datatype='string' name='hobbies' ordinal='23' />
                              <column datatype='string' name='occupation' ordinal='24' />
                              <column datatype='string' name='education' ordinal='25' />
                              <column datatype='string' name='family' ordinal='26' />
                              <column datatype='string' name='lang' ordinal='27' />
                              <column datatype='string' name='coach' ordinal='28' />
                              <column datatype='string' name='reason' ordinal='29' />
                              <column datatype='string' name='hero' ordinal='30' />
                              <column datatype='string' name='influence' ordinal='31' />
                              <column datatype='string' name='philosophy' ordinal='32' />
                              <column datatype='string' name='sporting_relatives' ordinal='33' />
                              <column datatype='string' name='ritual' ordinal='34' />
                              <column datatype='string' name='other_sports' ordinal='35' />
                              <column datatype='string' name='year' ordinal='36' />
                            </columns>
                          </relation>
                          <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='olympic_results.csv' table='[olympic_results#csv]' type='table'>
                            <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                              <column datatype='string' name='discipline_title' ordinal='0' />
                              <column datatype='string' name='event_title' ordinal='1' />
                              <column datatype='string' name='slug_game' ordinal='2' />
                              <column datatype='string' name='participant_type' ordinal='3' />
                              <column datatype='string' name='medal_type' ordinal='4' />
                              <column datatype='string' name='athletes' ordinal='5' />
                              <column datatype='boolean' name='rank_equal' ordinal='6' />
                              <column datatype='integer' name='rank_position' ordinal='7' />
                              <column datatype='string' name='country_name' ordinal='8' />
                              <column datatype='string' name='country_code' ordinal='9' />
                              <column datatype='string' name='country_3_letter_code' ordinal='10' />
                              <column datatype='string' name='athlete_url' ordinal='11' />
                              <column datatype='string' name='athlete_full_name' ordinal='12' />
                              <column datatype='string' name='value_unit' ordinal='13' />
                              <column datatype='string' name='value_type' ordinal='14' />
                            </columns>
                          </relation>
                        </relation>
                        <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='olympic_hosts.csv' table='[olympic_hosts#csv]' type='table'>
                          <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                            <column datatype='string' name='game_slug' ordinal='0' />
                            <column datatype='datetime' name='game_end_date' ordinal='1' />
                            <column datatype='datetime' name='game_start_date' ordinal='2' />
                            <column datatype='string' name='game_location' ordinal='3' />
                            <column datatype='string' name='game_name' ordinal='4' />
                            <column datatype='string' name='game_season' ordinal='5' />
                            <column datatype='integer' name='game_year' ordinal='6' />
                          </columns>
                        </relation>
                      </relation>
                      <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='medallists_2024.csv' table='[medallists_2024#csv]' type='table'>
                        <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                          <column datatype='date' name='medal_date' ordinal='0' />
                          <column datatype='string' name='medal_type' ordinal='1' />
                          <column datatype='real' name='medal_code' ordinal='2' />
                          <column datatype='string' name='name' ordinal='3' />
                          <column datatype='string' name='gender' ordinal='4' />
                          <column datatype='string' name='country_code' ordinal='5' />
                          <column datatype='string' name='country' ordinal='6' />
                          <column datatype='string' name='country_long' ordinal='7' />
                          <column datatype='string' name='nationality_code' ordinal='8' />
                          <column datatype='string' name='nationality' ordinal='9' />
                          <column datatype='string' name='nationality_long' ordinal='10' />
                          <column datatype='string' name='team' ordinal='11' />
                          <column datatype='string' name='team_gender' ordinal='12' />
                          <column datatype='string' name='discipline' ordinal='13' />
                          <column datatype='string' name='event' ordinal='14' />
                          <column datatype='string' name='event_type' ordinal='15' />
                          <column datatype='string' name='url_event' ordinal='16' />
                          <column datatype='date' name='birth_date' ordinal='17' />
                          <column datatype='integer' name='code_athlete' ordinal='18' />
                          <column datatype='string' name='code_team' ordinal='19' />
                          <column datatype='boolean' name='is_medallist' ordinal='20' />
                        </columns>
                      </relation>
                    </relation>
                    <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='medals_2024.csv' table='[medals_2024#csv]' type='table'>
                      <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                        <column datatype='string' name='medal_type' ordinal='0' />
                        <column datatype='string' name='medal_code' ordinal='1' />
                        <column datatype='date' name='medal_date' ordinal='2' />
                        <column datatype='string' name='name' ordinal='3' />
                        <column datatype='string' name='gender' ordinal='4' />
                        <column datatype='string' name='discipline' ordinal='5' />
                        <column datatype='string' name='event' ordinal='6' />
                        <column datatype='string' name='event_type' ordinal='7' />
                        <column datatype='string' name='url_event' ordinal='8' />
                        <column datatype='string' name='code' ordinal='9' />
                        <column datatype='string' name='country_code' ordinal='10' />
                        <column datatype='string' name='country' ordinal='11' />
                        <column datatype='string' name='country_long' ordinal='12' />
                      </columns>
                    </relation>
                  </relation>
                  <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='olympic_medals.csv' table='[olympic_medals#csv]' type='table'>
                    <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                      <column datatype='string' name='discipline_title' ordinal='0' />
                      <column datatype='string' name='slug_game' ordinal='1' />
                      <column datatype='string' name='event_title' ordinal='2' />
                      <column datatype='string' name='event_gender' ordinal='3' />
                      <column datatype='string' name='medal_type' ordinal='4' />
                      <column datatype='string' name='participant_type' ordinal='5' />
                      <column datatype='string' name='participant_title' ordinal='6' />
                      <column datatype='string' name='athlete_url' ordinal='7' />
                      <column datatype='string' name='athlete_full_name' ordinal='8' />
                      <column datatype='string' name='country_name' ordinal='9' />
                      <column datatype='string' name='country_code' ordinal='10' />
                      <column datatype='string' name='country_3_letter_code' ordinal='11' />
                    </columns>
                  </relation>
                </relation>
                <relation connection='textscan.19ea4n118yyoyt1fw1bzf1b55hfs' name='olympic_athletes.csv' table='[olympic_athletes#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_SG' separator=','>
                    <column datatype='string' name='athlete_url' ordinal='0' />
                    <column datatype='string' name='athlete_full_name' ordinal='1' />
                    <column datatype='integer' name='games_participations' ordinal='2' />
                    <column datatype='string' name='first_game' ordinal='3' />
                    <column datatype='integer' name='athlete_year_birth' ordinal='4' />
                    <column datatype='string' name='athlete_medals' ordinal='5' />
                    <column datatype='string' name='bio' ordinal='6' />
                  </columns>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.1yxdfkn163wzao17puqgt0p30fvp'>
      <datasources>
        <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
      </datasources>
      <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
        <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_1611444250119368706:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 7 (generated)' name='[Action10_EE0D48C799294D328C87CDEB1465DA75]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='summer n winter' />
      <command command='tsc:tsl-filter'>
        <param name='single-select' value='' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter1' name='[Action15_ACE5B6BD088D4B40BB5A9C4E442A5CD5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Gender distribution of participant over the year' />
      <link caption='Filter1' delimiter=',' escape='\' expression='tsl:Dashboard%203?%5Bfederated.1yxdfkn163wzao17puqgt0p30fvp%5D.%5BCalculation_1611444250032074752%5D~s0=&lt;[federated.1yxdfkn163wzao17puqgt0p30fvp].[Calculation_1611444250032074752]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Age Group by Medals ,Age group distribution of participant over the year,Back,Total Agegroup,summer n winter,Gender distribution of participant over the year,Medals by Gender ' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Filter2' name='[Action16_D2BE2BCDE2974CA9AE7D2397611C69EB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Age group distribution of participant over the year' />
      <link caption='Filter2' delimiter=',' escape='\' expression='tsl:Dashboard%203?%5Bfederated.1yxdfkn163wzao17puqgt0p30fvp%5D.%5BCalculation_1611444250032074752%5D~s0=&lt;[federated.1yxdfkn163wzao17puqgt0p30fvp].[Calculation_1611444250032074752]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Total Gender,Age Group by Medals ,Age group distribution of participant over the year,Back,summer n winter,Gender distribution of participant over the year,Medals by Gender ' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
    <action caption='Highlight 1 (generated)' name='[Action1_94EC2BA612384747A78284BF76147BFC]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Medals by Countries' />
      <command command='tsc:brush'>
        <param name='field-captions' value='player_medal_category' />
        <param name='target' value='Medals by Countries' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 1' name='[Action2_F7010387768C4FAE800F3BBADE15DE3D]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Most Medals Disciplines' />
      <command command='tsc:brush'>
        <param name='field-captions' value='player_medal_category' />
        <param name='target' value='Most Medals Disciplines' />
      </command>
    </action>
    <action caption='Highlight 1 (generated) 2' name='[Action4_8A809F39821C43F6B4E931FC614B2AC8]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Top Perfoming Country' />
      <command command='tsc:brush'>
        <param name='field-captions' value='player_medal_category' />
        <param name='target' value='Top Perfoming Country' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action4_E89E9C8DC43A45C28162F14F9EAFC44E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Medals by Countries' />
      <link caption='Filter 2 (generated)' delimiter=',' escape='\' expression='tsl:Dashboard%202?%5Bfederated.1yxdfkn163wzao17puqgt0p30fvp%5D.%5BCalculation_1611444250119368706%5D~s0=&lt;[federated.1yxdfkn163wzao17puqgt0p30fvp].[Calculation_1611444250119368706]~na&gt;&amp;%5Bfederated.1yxdfkn163wzao17puqgt0p30fvp%5D.%5BCalculation_1611444250133389320%5D~s0=&lt;[federated.1yxdfkn163wzao17puqgt0p30fvp].[Calculation_1611444250133389320]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action5_C9FFAF024A8348C3ACCDCC31466FD107]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Choropleth Map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action6_506D51C3ECC644C18848A77B30A7A94A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Medals by Countries' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action7_6F479A9892A844998A15A6A48C2CB824]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Medals by Disciplines' />
      <link caption='Filter 4 (generated)' delimiter=',' escape='\' expression='tsl:Dashboard%202?%5Bfederated.1yxdfkn163wzao17puqgt0p30fvp%5D.%5BCalculation_1611444250124881924%5D~s0=&lt;[federated.1yxdfkn163wzao17puqgt0p30fvp].[Calculation_1611444250124881924]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Medals by Countries,Medals by Disciplines' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action8_B02AA454C0A34F7AB61D282C5FD53072]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Medals by Events' />
      <link caption='Filter 5 (generated)' delimiter=',' escape='\' expression='tsl:Dashboard%202?%5Bfederated.1yxdfkn163wzao17puqgt0p30fvp%5D.%5Bplayer_discipline%20%28copy%29_1611444250128560134%5D~s0=&lt;[federated.1yxdfkn163wzao17puqgt0p30fvp].[player_discipline (copy)_1611444250128560134]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Medals by Countries,Medals by Events,Medals by Disciplines' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action9_1794EE2F10BF4C24BEA40B1499CAA14F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Medals by Athletes' />
      <link caption='Filter 6 (generated)' delimiter=',' escape='\' expression='tsl:Dashboard%202?%5Bfederated.1yxdfkn163wzao17puqgt0p30fvp%5D.%5BCalculation_1611444250085171201%5D~s0=&lt;[federated.1yxdfkn163wzao17puqgt0p30fvp].[Calculation_1611444250085171201]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Medals by Athletes,Medals by Countries,Medals by Events,Medals by Disciplines' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <datasources>
      <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
    </datasources>
    <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
      <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
      </column>
      <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
      </column>
      <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
      </column>
      <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
      </column>
    </datasource-dependencies>
    <nav-action caption='GoToD2' name='[Action11_FCB6DB9DDA0442CEA0ECB8D4DD8FD384]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Next' />
      <params>
        <param name='sheet' value='Dashboard 2' />
      </params>
    </nav-action>
    <nav-action caption='GoToSheet1' name='[Action12_4C8502A9966A4306A46B61EDFA2AC5EE]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Back' />
      <params>
        <param name='sheet' value='Dashboard 1' />
      </params>
    </nav-action>
    <nav-action caption='GoToD3' name='[Action13_487207F803554DE1840E5E89C9C8E52E]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Next' />
      <params>
        <param name='sheet' value='Dashboard 3' />
      </params>
    </nav-action>
    <nav-action caption='GoToSheet2' name='[Action14_47A31A14488548B09E5BD2DCB795CE86]'>
      <activation type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='Back' />
      <params>
        <param name='sheet' value='Dashboard 2' />
      </params>
    </nav-action>
  </actions>
  <worksheets>
    <worksheet name='Age Group Distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player age group' datatype='string' name='[Calculation_619807908093800453]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_619807908091699204] &lt; 15&#13;&#10;THEN&#13;&#10;&quot;Below 16&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt;= 15 and [Calculation_619807908091699204] &lt;=20&#13;&#10;THEN&#13;&#10;&quot;16-20&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 20 and [Calculation_619807908091699204] &lt;=25&#13;&#10;THEN&#13;&#10;&quot;21-25&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 25 and [Calculation_619807908091699204] &lt;=30&#13;&#10;THEN&#13;&#10;&quot;26-30&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 30 and [Calculation_619807908091699204] &lt;=35&#13;&#10;THEN&#13;&#10;&quot;31-35&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 35&#13;&#10;THEN&#13;&#10;&quot;Above 35&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908093800453]' derivation='None' name='[none:Calculation_619807908093800453:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <computed-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' direction='DESC' using='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_519884291187683339:nk]' />
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='&quot;16-20&quot;' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='&quot;21-25&quot;' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='&quot;26-30&quot;' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='&quot;31-35&quot;' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='&quot;Above 35&quot;' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='&quot;Below 16&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Below 16&quot;</bucket>
              <bucket>&quot;16-20&quot;</bucket>
              <bucket>&quot;21-25&quot;</bucket>
              <bucket>&quot;26-30&quot;</bucket>
              <bucket>&quot;31-35&quot;</bucket>
              <bucket>&quot;Above 35&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' value='54' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' value='10' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' value='102' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' value='113' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' value='107' />
            <format attr='vertical-align' value='top' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' value='172' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_brightblue' />
            <format attr='opacity' id='refline0' value='167' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='213' />
                <format attr='maxheight' value='213' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk] * [federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk])</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</cols>
      </table>
      <simple-id uuid='{B55C10B1-E7A2-47FF-BE4B-ED036080856B}' />
    </worksheet>
    <worksheet name='Age Group by Medals '>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player age group' datatype='string' name='[Calculation_619807908093800453]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_619807908091699204] &lt; 15&#13;&#10;THEN&#13;&#10;&quot;Below 16&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt;= 15 and [Calculation_619807908091699204] &lt;=20&#13;&#10;THEN&#13;&#10;&quot;16-20&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 20 and [Calculation_619807908091699204] &lt;=25&#13;&#10;THEN&#13;&#10;&quot;21-25&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 25 and [Calculation_619807908091699204] &lt;=30&#13;&#10;THEN&#13;&#10;&quot;26-30&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 30 and [Calculation_619807908091699204] &lt;=35&#13;&#10;THEN&#13;&#10;&quot;31-35&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 35&#13;&#10;THEN&#13;&#10;&quot;Above 35&quot;&#13;&#10;END' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='1' datatype='integer' name='[Calculation_619807908156243983]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
            <column datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_619807908156243983]' derivation='Min' name='[min:Calculation_619807908156243983:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908093800453]' derivation='None' name='[none:Calculation_619807908093800453:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]'>
            <groupfilter function='member' level='[Calculation_619807908131618825]' member='&quot;Summer&quot;' user:ui-action-filter='[Action10_EE0D48C799294D328C87CDEB1465DA75]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1611444250133389320:nk]' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SILVER&quot;</bucket>
              <bucket>&quot;GOLD&quot;</bucket>
              <bucket>&quot;BRONZE&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_619807908093800453:nk]' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Below 16&quot;</bucket>
              <bucket>&quot;16-20&quot;</bucket>
              <bucket>&quot;21-25&quot;</bucket>
              <bucket>&quot;26-30&quot;</bucket>
              <bucket>&quot;31-35&quot;</bucket>
              <bucket>&quot;Above 35&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='357' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <wedge-size column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <size column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk] + [federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk])</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</cols>
      </table>
      <simple-id uuid='{1D8061AC-C642-475B-878C-82FE387EE149}' />
    </worksheet>
    <worksheet name='Age group distribution of participant over the year'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player age group' datatype='string' name='[Calculation_619807908093800453]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_619807908091699204] &lt; 15&#13;&#10;THEN&#13;&#10;&quot;Below 16&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt;= 15 and [Calculation_619807908091699204] &lt;=20&#13;&#10;THEN&#13;&#10;&quot;16-20&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 20 and [Calculation_619807908091699204] &lt;=25&#13;&#10;THEN&#13;&#10;&quot;21-25&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 25 and [Calculation_619807908091699204] &lt;=30&#13;&#10;THEN&#13;&#10;&quot;26-30&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 30 and [Calculation_619807908091699204] &lt;=35&#13;&#10;THEN&#13;&#10;&quot;31-35&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 35&#13;&#10;THEN&#13;&#10;&quot;Above 35&quot;&#13;&#10;END' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908093800453]' derivation='None' name='[none:Calculation_619807908093800453:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908131618825]' derivation='None' name='[none:Calculation_619807908131618825:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]'>
            <groupfilter function='member' level='[Calculation_619807908131618825]' member='&quot;Summer&quot;' user:ui-action-filter='[Action10_EE0D48C799294D328C87CDEB1465DA75]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_619807908093800453:nk]' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Above 35&quot;</bucket>
              <bucket>&quot;31-35&quot;</bucket>
              <bucket>&quot;26-30&quot;</bucket>
              <bucket>&quot;21-25&quot;</bucket>
              <bucket>&quot;16-20&quot;</bucket>
              <bucket>&quot;Below 16&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_619807908131618825:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' value='46' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_brightblue' />
            <format attr='opacity' id='refline0' value='167' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='701' />
                <format attr='maxwidth' value='701' />
                <format attr='minheight' value='423' />
                <format attr='maxheight' value='423' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='330' />
                <format attr='maxheight' value='330' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='423' />
                <format attr='maxheight' value='423' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</cols>
      </table>
      <simple-id uuid='{F07814D4-279E-4902-8CDC-DEC73783E48E}' />
    </worksheet>
    <worksheet name='Back'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 4' datatype='string' name='[Parameter 4]' param-domain-type='list' role='measure' type='nominal' value='&quot;BACK&quot;'>
              <calculation class='tableau' formula='&quot;BACK&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='Calculation1' datatype='string' name='[Calculation_619807908194689041]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 4]' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908194689041]' derivation='None' name='[none:Calculation_619807908194689041:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]'>
            <groupfilter function='member' level='[Calculation_619807908131618825]' member='&quot;Summer&quot;' user:ui-action-filter='[Action10_EE0D48C799294D328C87CDEB1465DA75]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_E89E9C8DC43A45C28162F14F9EAFC44E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250124881924]' user:ui-action-filter='[Action7_6F479A9892A844998A15A6A48C2CB824]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]'>
            <groupfilter function='level-members' level='[player_discipline (copy)_1611444250128560134]' user:ui-action-filter='[Action8_B02AA454C0A34F7AB61D282C5FD53072]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_name)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250085171201]' user:ui-action-filter='[Action9_1794EE2F10BF4C24BEA40B1499CAA14F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='107' />
            <format attr='height' value='34' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dddddd' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908194689041:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{3F350DF3-3F47-48BC-9023-1BC750811759}' />
    </worksheet>
    <worksheet name='Box plot'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player age group' datatype='string' name='[Calculation_619807908093800453]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_619807908091699204] &lt; 15&#13;&#10;THEN&#13;&#10;&quot;Below 16&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt;= 15 and [Calculation_619807908091699204] &lt;=20&#13;&#10;THEN&#13;&#10;&quot;16-20&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 20 and [Calculation_619807908091699204] &lt;=25&#13;&#10;THEN&#13;&#10;&quot;21-25&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 25 and [Calculation_619807908091699204] &lt;=30&#13;&#10;THEN&#13;&#10;&quot;26-30&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 30 and [Calculation_619807908091699204] &lt;=35&#13;&#10;THEN&#13;&#10;&quot;31-35&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 35&#13;&#10;THEN&#13;&#10;&quot;Above 35&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908093800453]' derivation='None' name='[none:Calculation_619807908093800453:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' kind='hide'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_619807908093800453:nk]' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' value='104' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk] * ([federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk] + [federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]))</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</cols>
      </table>
      <simple-id uuid='{7672F969-F0AF-4609-BB24-9078814D5D95}' />
    </worksheet>
    <worksheet name='Check data'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250085171201]' derivation='None' name='[none:Calculation_1611444250085171201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250120126467]' derivation='None' name='[none:Calculation_1611444250120126467:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='None' name='[none:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]'>
            <groupfilter function='member' level='[none:Calculation_1611444250032074752:nk]' member='&quot;2024&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250085171201:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250124881924:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250133389320:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='59' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250120126467:nk]' value='132' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250120126467:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{B40ADD27-9496-4FF3-B6EE-AD975E75EBB1}' />
    </worksheet>
    <worksheet name='Choropleth Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Win Rate' caption='Content' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Win Rate&quot;'>
              <calculation class='tableau' formula='&quot;Win Rate&quot;' />
              <aliases>
                <alias key='&quot;Most Medal&quot;' value='Most Medal' />
                <alias key='&quot;Number of Participants&quot;' value='Number of Participants' />
                <alias key='&quot;Win Rate&quot;' value='Win Rate' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='Win Rate' datatype='real' name='[Calculation_519884291156197384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1131247939083292689])&#13;&#10;/[Calculation_1611444250374369306]&#13;&#10;&#13;&#10;*100' />
            </column>
            <column caption='Content_Value' datatype='real' name='[Calculation_519884291162824713]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 3] = &quot;Number of Participants&quot;&#13;&#10;THEN [Calculation_1611444250374369306]&#13;&#10;ELSEIF [Parameters].[Parameter 3] = &quot;Most Medal&quot;&#13;&#10;THEN SUM([Calculation_1131247939083292689])&#13;&#10;ELSEIF [Parameters].[Parameter 3] = &quot;Win Rate&quot;&#13;&#10;THEN [Calculation_519884291156197384]&#13;&#10;END' />
            </column>
            <column caption='Bronze medal' datatype='integer' name='[Gold medal (copy)_1995657593757016068]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;) &#13;&#10;&#13;&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Silver medal' datatype='integer' name='[Gold medal Count (copy)_1995657593756839939]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;) &#13;&#10;&#13;&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column caption='Gold medal' datatype='integer' name='[medal? (copy)_1995657593699446785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;) &#13;&#10;&#13;&#10;THEN [Calculation_1131247939083292689] ELSE 0 END' />
            </column>
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='None' name='[none:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gold medal (copy)_1995657593757016068]' derivation='Sum' name='[sum:Gold medal (copy)_1995657593757016068:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gold medal Count (copy)_1995657593756839939]' derivation='Sum' name='[sum:Gold medal Count (copy)_1995657593756839939:qk]' pivot='key' type='quantitative' />
            <column-instance column='[medal? (copy)_1995657593699446785]' derivation='Sum' name='[sum:medal? (copy)_1995657593699446785:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_519884291156197384]' derivation='User' name='[usr:Calculation_519884291156197384:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_519884291162824713]' derivation='User' name='[usr:Calculation_519884291162824713:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player (copy)_519884291146895365]' derivation='User' name='[usr:player (copy)_519884291146895365:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_506D51C3ECC644C18848A77B30A7A94A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250124881924:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250133389320:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:player_discipline (copy)_1611444250128560134:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]' field-type='quantitative' max='63066153.446383081' min='19053703.326466192' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' field-type='quantitative' max='18090069.267128877' min='-14861659.634654989' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:medal? (copy)_1995657593699446785:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2eeda</color>
                <color>#f3ecc3</color>
                <color>#f5e9ab</color>
                <color>#f6e793</color>
                <color>#f8e47c</color>
                <color>#f9e163</color>
                <color>#fadf4b</color>
                <color>#fcdc32</color>
                <color>#fdd919</color>
                <color>#ffd700</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' num-steps='5' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dadaf2</color>
                <color>#c3c3f3</color>
                <color>#ababf5</color>
                <color>#9393f6</color>
                <color>#7c7cf8</color>
                <color>#6363f9</color>
                <color>#4b4bfa</color>
                <color>#3232fc</color>
                <color>#1919fd</color>
                <color>#0000ff</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9e9d1</color>
                <color>#e1e1b4</color>
                <color>#d9d998</color>
                <color>#d1d17d</color>
                <color>#c9c964</color>
                <color>#c1c14d</color>
                <color>#b9b937</color>
                <color>#b1b123</color>
                <color>#a9a910</color>
                <color>#a2a200</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291162824713:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d9e5ee</color>
                <color>#c1d9ec</color>
                <color>#aaceea</color>
                <color>#94c3e7</color>
                <color>#7db8e5</color>
                <color>#68aee3</color>
                <color>#52a3e0</color>
                <color>#3d99de</color>
                <color>#298edc</color>
                <color>#1585da</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291162824713:qk]' value='Content Scale'>
              <formatted-text>
                <run>Content Scale</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='Country'>
              <formatted-text>
                <run>Country</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' value='Discipline'>
              <formatted-text>
                <run>Discipline</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' value='Event'>
              <formatted-text>
                <run>Event</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:medal? (copy)_1995657593699446785:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal Count (copy)_1995657593756839939:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal (copy)_1995657593757016068:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]' />
              <lod column='[Parameters].[Parameter 3]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:player (copy)_519884291146895365:ok]' />
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291162824713:qk]' />
              <geometry column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>player_country:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>countmedal:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Gold medal:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:medal? (copy)_1995657593699446785:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Silver medal:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal Count (copy)_1995657593756839939:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Bronze medal:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal (copy)_1995657593757016068:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>player_medal_category:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of participants:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>winning rates</run>
                <run bold='true' fontcolor='#787878'>:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]> %]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='10' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BD79171E-8FE0-44AF-A3F9-D8C447F5B163}' />
    </worksheet>
    <worksheet name='Gender distribution of participant over the year'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908131618825]' derivation='None' name='[none:Calculation_619807908131618825:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]'>
            <groupfilter function='member' level='[Calculation_619807908131618825]' member='&quot;Summer&quot;' user:ui-action-filter='[Action10_EE0D48C799294D328C87CDEB1465DA75]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_519884291187683339:nk]' />
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' filter-group='10'>
            <groupfilter function='level-members' level='[none:Calculation_619807908131618825:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' value='142' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' value='52' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='fill-color' id='refline0' value='#f0f0f0d9' />
            <format attr='palette' id='refline0' value='bp_brightblue' />
            <format attr='opacity' id='refline0' value='167' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <reference-line axis-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='701' />
                <format attr='maxwidth' value='701' />
                <format attr='minheight' value='423' />
                <format attr='maxheight' value='423' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='330' />
                <format attr='maxheight' value='330' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='701' />
                <format attr='maxwidth' value='701' />
                <format attr='minheight' value='448' />
                <format attr='maxheight' value='448' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</cols>
      </table>
      <simple-id uuid='{E7A34947-381B-4BE0-A642-D243C716F12A}' />
    </worksheet>
    <worksheet name='Geospatial (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='Bronze medal' datatype='integer' name='[Gold medal (copy)_1995657593757016068]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;) &#13;&#10;&#13;&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Silver medal' datatype='integer' name='[Gold medal Count (copy)_1995657593756839939]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;) &#13;&#10;&#13;&#10;THEN 1 ELSE 0 END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column caption='Gold medal' datatype='integer' name='[medal? (copy)_1995657593699446785]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF &#13;&#10;&#13;&#10;CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;) &#13;&#10;&#13;&#10;THEN [Calculation_1131247939083292689] ELSE 0 END' />
            </column>
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gold medal (copy)_1995657593757016068]' derivation='Sum' name='[sum:Gold medal (copy)_1995657593757016068:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gold medal Count (copy)_1995657593756839939]' derivation='Sum' name='[sum:Gold medal Count (copy)_1995657593756839939:qk]' pivot='key' type='quantitative' />
            <column-instance column='[medal? (copy)_1995657593699446785]' derivation='Sum' name='[sum:medal? (copy)_1995657593699446785:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;BRONZE&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;GOLD&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;SILVER&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' field-type='quantitative' fold='true' max='13544873.394215712' min='-4646661.0195718817' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]' field-type='quantitative' max='14199299.085492607' min='-17306149.814971671' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' field-type='quantitative' max='13544873.394215712' min='-4646661.0195718817' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:medal? (copy)_1995657593699446785:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2eeda</color>
                <color>#f3ecc3</color>
                <color>#f5e9ab</color>
                <color>#f6e793</color>
                <color>#f8e47c</color>
                <color>#f9e163</color>
                <color>#fadf4b</color>
                <color>#fcdc32</color>
                <color>#fdd919</color>
                <color>#ffd700</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' num-steps='5' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dadaf2</color>
                <color>#c3c3f3</color>
                <color>#ababf5</color>
                <color>#9393f6</color>
                <color>#7c7cf8</color>
                <color>#6363f9</color>
                <color>#4b4bfa</color>
                <color>#3232fc</color>
                <color>#1919fd</color>
                <color>#0000ff</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='false' />
            <format attr='omit-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' value='false' />
            <format attr='omit-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal (copy)_1995657593757016068:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal Count (copy)_1995657593756839939:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:medal? (copy)_1995657593699446785:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-transparency' value='254' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <size column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal (copy)_1995657593757016068:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal Count (copy)_1995657593756839939:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:medal? (copy)_1995657593699446785:qk]' />
              <geometry column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-transparency' value='254' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <shape column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal (copy)_1995657593757016068:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Gold medal Count (copy)_1995657593756839939:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:medal? (copy)_1995657593699446785:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='size' value='1.7471270561218262' />
                <format attr='mark-transparency' value='254' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='false' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)] + [federated.1yxdfkn163wzao17puqgt0p30fvp].[Latitude (generated)])</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{FC2B64C7-933E-4781-AA8F-82DA6026549B}' />
    </worksheet>
    <worksheet name='Medals by Athletes'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='Attribute' name='[attr:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
            <column caption='countmedal (events)' datatype='integer' name='[countmedal () (copy)_619807908135591946]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [player_discipline (copy)_1611444250128560134]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='countmedal (player)' datatype='integer' name='[countmedal (season)  (copy)_619807908147552270]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250085171201]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250085171201]' derivation='None' name='[none:Calculation_1611444250085171201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal () (copy)_619807908135591946]' derivation='Sum' name='[sum:countmedal () (copy)_619807908135591946:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal (season)  (copy)_619807908147552270]' derivation='Sum' name='[sum:countmedal (season)  (copy)_619807908147552270:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_E89E9C8DC43A45C28162F14F9EAFC44E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250124881924]' user:ui-action-filter='[Action7_6F479A9892A844998A15A6A48C2CB824]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]'>
            <groupfilter function='level-members' level='[player_discipline (copy)_1611444250128560134]' user:ui-action-filter='[Action8_B02AA454C0A34F7AB61D282C5FD53072]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1611444250085171201:nk]' />
              <groupfilter function='member' level='[none:Calculation_1611444250085171201:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]' direction='DESC' using='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GOLD&quot;</bucket>
              <bucket>&quot;SILVER&quot;</bucket>
              <bucket>&quot;BRONZE&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' scope='cols' value='Medals' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='164' />
            <format attr='width' value='641' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='52' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[attr:player_discipline (copy)_1611444250128560134:nk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal () (copy)_619807908135591946:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (season)  (copy)_619807908147552270:qk]' />
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='3' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]</cols>
      </table>
      <simple-id uuid='{E660FED0-F229-4846-8404-D08BF5922F92}' />
    </worksheet>
    <worksheet name='Medals by Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='countmedal (by county)' datatype='integer' name='[countmedal (copy)_1611444250190127116]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706] : SUM([Calculation_1131247939082563600])&#13;&#10;&#13;&#10;}' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='None' name='[none:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal (copy)_1611444250190127116]' derivation='Sum' name='[sum:countmedal (copy)_1611444250190127116:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250119368706]' user:ui-action-filter='[Action5_C9FFAF024A8348C3ACCDCC31466FD107]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250124881924:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;BRONZE&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;GOLD&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;SILVER&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GOLD&quot;</bucket>
              <bucket>&quot;SILVER&quot;</bucket>
              <bucket>&quot;BRONZE&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:player_discipline (copy)_1611444250128560134:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' scope='cols' value='Medals' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='128' />
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='31' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='128' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='7' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' value='Year Multiselection'>
              <formatted-text>
                <run>Year Multiselection</run>
              </formatted-text>
            </format>
            <format attr='title' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='Country'>
              <formatted-text>
                <run fontsize='10'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (copy)_1611444250190127116:qk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='1' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='224' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]</cols>
      </table>
      <simple-id uuid='{9CC5E914-4647-42A7-93E1-031E4613BC93}' />
    </worksheet>
    <worksheet name='Medals by Disciplines'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='countmedal (disciplines)' datatype='integer' name='[countmedal (copy)_619807908100509702]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250124881924]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal (copy)_619807908100509702]' derivation='Sum' name='[sum:countmedal (copy)_619807908100509702:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_E89E9C8DC43A45C28162F14F9EAFC44E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' direction='DESC' using='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (copy)_619807908100509702:qk]' />
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250133389320:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' scope='cols' value='Medals' />
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' value='56' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='164' />
            <format attr='width' value='641' />
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' value='25' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' value='8' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' value='204' />
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' value='8' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (copy)_619807908100509702:qk]' />
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='none' scope='per-cell' value-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (copy)_619807908100509702:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]</cols>
      </table>
      <simple-id uuid='{0D547DF9-0565-40D3-8014-16BD11A85DF3}' />
    </worksheet>
    <worksheet name='Medals by Events'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='countmedal (events)' datatype='integer' name='[countmedal () (copy)_619807908135591946]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [player_discipline (copy)_1611444250128560134]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='None' name='[none:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal () (copy)_619807908135591946]' derivation='Sum' name='[sum:countmedal () (copy)_619807908135591946:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_E89E9C8DC43A45C28162F14F9EAFC44E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250124881924]' user:ui-action-filter='[Action7_6F479A9892A844998A15A6A48C2CB824]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' direction='DESC' using='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal () (copy)_619807908135591946:qk]' />
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' scope='cols' value='Medals' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='164' />
            <format attr='width' value='641' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='52' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal () (copy)_619807908135591946:qk]' />
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]' />
            </encodings>
            <reference-line axis-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' enable-instant-analytics='true' formula='sum' id='refline0' label-type='none' scope='per-cell' value-column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal () (copy)_619807908135591946:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]</cols>
      </table>
      <simple-id uuid='{3A5123F6-72B3-413B-813C-D95D93C2FCCB}' />
    </worksheet>
    <worksheet name='Medals by Gender '>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='1' datatype='integer' name='[Calculation_619807908156243983]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_619807908156243983]' derivation='Min' name='[min:Calculation_619807908156243983:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]'>
            <groupfilter function='member' level='[Calculation_619807908131618825]' member='&quot;Summer&quot;' user:ui-action-filter='[Action10_EE0D48C799294D328C87CDEB1465DA75]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_1611444250133389320:nk]' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;SILVER&quot;</bucket>
              <bucket>&quot;GOLD&quot;</bucket>
              <bucket>&quot;BRONZE&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_519884291187683339:nk]' />
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='display' class='1' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='357' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='font-size' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <wedge-size column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <size column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3953038454055786' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.82359117269515991' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#ffffff' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk] + [federated.1yxdfkn163wzao17puqgt0p30fvp].[min:Calculation_619807908156243983:qk])</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</cols>
      </table>
      <simple-id uuid='{4FFC78F8-1ABD-4176-9FD1-453D66C89608}' />
    </worksheet>
    <worksheet name='Medals by Summer'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column caption='countmedal (events)' datatype='integer' name='[countmedal () (copy)_619807908135591946]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [player_discipline (copy)_1611444250128560134]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='countmedal (season) ' datatype='integer' name='[countmedal (season) (copy)_619807908140052492]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_619807908131618825]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908131618825]' derivation='None' name='[none:Calculation_619807908131618825:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal () (copy)_619807908135591946]' derivation='Sum' name='[sum:countmedal () (copy)_619807908135591946:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal (season) (copy)_619807908140052492]' derivation='Sum' name='[sum:countmedal (season) (copy)_619807908140052492:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_E89E9C8DC43A45C28162F14F9EAFC44E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250124881924]' user:ui-action-filter='[Action7_6F479A9892A844998A15A6A48C2CB824]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]'>
            <groupfilter function='level-members' level='[player_discipline (copy)_1611444250128560134]' user:ui-action-filter='[Action8_B02AA454C0A34F7AB61D282C5FD53072]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_name)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250085171201]' user:ui-action-filter='[Action9_1794EE2F10BF4C24BEA40B1499CAA14F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]'>
            <groupfilter function='member' level='[none:Calculation_619807908131618825:nk]' member='&quot;Summer&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_name)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='164' />
            <format attr='width' value='641' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' value='34' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' value='7' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#aaffff' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal () (copy)_619807908135591946:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (season) (copy)_619807908140052492:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]</rows>
        <cols>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk])</cols>
      </table>
      <simple-id uuid='{4FD957B5-1688-4522-A3D9-ACE6C02B5B89}' />
    </worksheet>
    <worksheet name='Medals by Winter'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column caption='countmedal (events)' datatype='integer' name='[countmedal () (copy)_619807908135591946]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [player_discipline (copy)_1611444250128560134]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='countmedal (season) ' datatype='integer' name='[countmedal (season) (copy)_619807908140052492]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_619807908131618825]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908131618825]' derivation='None' name='[none:Calculation_619807908131618825:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal () (copy)_619807908135591946]' derivation='Sum' name='[sum:countmedal () (copy)_619807908135591946:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal (season) (copy)_619807908140052492]' derivation='Sum' name='[sum:countmedal (season) (copy)_619807908140052492:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_E89E9C8DC43A45C28162F14F9EAFC44E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250124881924]' user:ui-action-filter='[Action7_6F479A9892A844998A15A6A48C2CB824]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]'>
            <groupfilter function='level-members' level='[player_discipline (copy)_1611444250128560134]' user:ui-action-filter='[Action8_B02AA454C0A34F7AB61D282C5FD53072]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_name)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250085171201]' user:ui-action-filter='[Action9_1794EE2F10BF4C24BEA40B1499CAA14F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250133389320:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]'>
            <groupfilter function='member' level='[none:Calculation_619807908131618825:nk]' member='&quot;Winter&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_name)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' value='60' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='164' />
            <format attr='width' value='641' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' value='53' />
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='52' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' value='8' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#aaffff' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal () (copy)_619807908135591946:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (season) (copy)_619807908140052492:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]</rows>
        <cols>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk])</cols>
      </table>
      <simple-id uuid='{FF511118-50EB-4D75-936B-74E0DE2A4EB9}' />
    </worksheet>
    <worksheet name='Medals by years'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Count' name='[cnt:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='countmedal (by county)' datatype='integer' name='[countmedal (copy)_1611444250190127116]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706] : SUM([Calculation_1131247939082563600])&#13;&#10;&#13;&#10;}' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column-instance column='[countmedal (copy)_1611444250190127116]' derivation='Sum' name='[sum:countmedal (copy)_1611444250190127116:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;BRONZE&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;GOLD&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;SILVER&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GOLD&quot;</bucket>
              <bucket>&quot;SILVER&quot;</bucket>
              <bucket>&quot;BRONZE&quot;</bucket>
              <bucket>&quot;&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' value='279' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[cnt:Calculation_1131247939083292689:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (copy)_1611444250190127116:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[cnt:Calculation_1131247939083292689:qk] + [federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk])</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</cols>
      </table>
      <simple-id uuid='{F94A3BF0-5034-4BB5-A6BA-7B61DCBD9BCA}' />
    </worksheet>
    <worksheet name='Most Medals Disciplines'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column-instance column='[Calculation_1131247939083292689]' derivation='Count' name='[cnt:Calculation_1131247939083292689:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Count' name='[cnt:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;BRONZE&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;GOLD&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;SILVER&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='128' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[cnt:Calculation_1131247939083292689:ok]' value='136' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Polygon' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[cnt:Calculation_1131247939083292689:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[cnt:Calculation_1131247939083292689:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{FFA3375D-A4DF-434D-81B8-E5D3CB69A9DF}' />
    </worksheet>
    <worksheet name='Next'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='Calculation1 (copy)' datatype='string' name='[Calculation1 (copy)_619807908195311635]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;NEXT&quot;' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation1 (copy)_619807908195311635]' derivation='None' name='[none:Calculation1 (copy)_619807908195311635:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250119368706]' user:ui-action-filter='[Action5_C9FFAF024A8348C3ACCDCC31466FD107]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4_E89E9C8DC43A45C28162F14F9EAFC44E]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250124881924]' user:ui-action-filter='[Action7_6F479A9892A844998A15A6A48C2CB824]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]'>
            <groupfilter function='level-members' level='[player_discipline (copy)_1611444250128560134]' user:ui-action-filter='[Action8_B02AA454C0A34F7AB61D282C5FD53072]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_name)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250085171201]' user:ui-action-filter='[Action9_1794EE2F10BF4C24BEA40B1499CAA14F]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_event)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_discipline)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='107' />
            <format attr='height' value='35' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dddddd' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation1 (copy)_619807908195311635:nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.7691160440444946' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{5757CDEA-20D0-4C36-A5FB-AC1A42AFF442}' />
    </worksheet>
    <worksheet name='Overall'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='count event' datatype='integer' name='[Calculation_619807908083027968]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD(&#13;&#10;IF [Calculation_1131247939082563600]&gt;0 THEN&#13;&#10;[player_discipline (copy)_1611444250128560134]&#13;&#10;ELSE NULL END&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column caption='countmedal (by county)' datatype='integer' name='[countmedal (copy)_1611444250190127116]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706] : SUM([Calculation_1131247939082563600])&#13;&#10;&#13;&#10;}' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='None' name='[none:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:ok]' pivot='key' type='ordinal' />
            <column-instance column='[countmedal (copy)_1611444250190127116]' derivation='Sum' name='[sum:countmedal (copy)_1611444250190127116:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_619807908083027968]' derivation='User' name='[usr:Calculation_619807908083027968:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250119368706]' user:ui-action-filter='[Action5_C9FFAF024A8348C3ACCDCC31466FD107]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action6_506D51C3ECC644C18848A77B30A7A94A]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_1611444250119368706]' />
              <groupfilter function='level-members' level='[Calculation_1611444250133389320]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250124881924:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:player_discipline (copy)_1611444250128560134:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country,player_medal_category)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='128' />
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='73' />
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]' value='82' />
            <format attr='text-align' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]' value='left' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='100' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]' value='164' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_619807908083027968:ok]' value='116' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]' value='136' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='7' />
            <format attr='text-align' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]' value='center' />
            <format attr='text-align' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_619807908083027968:ok]' value='center' />
            <format attr='text-align' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]' value='center' />
            <format attr='font-weight' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]' value='bold' />
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]' value='10' />
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_619807908083027968:ok]' value='10' />
            <format attr='font-weight' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_619807908083027968:ok]' value='bold' />
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]' value='10' />
            <format attr='font-weight' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]' value='normal' />
            <format attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]' value='#000000' />
            <format attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_619807908083027968:ok]' value='#000000' />
            <format attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]' value='#000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:countmedal (copy)_1611444250190127116:qk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='5' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='224' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_619807908083027968:ok] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]))</rows>
        <cols />
      </table>
      <simple-id uuid='{9A90F19F-5207-4CA7-86A4-BDEF57155630}' />
    </worksheet>
    <worksheet name='Participants'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250085171201]' derivation='None' name='[none:Calculation_1611444250085171201:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908131618825]' derivation='None' name='[none:Calculation_619807908131618825:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='None' name='[none:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_619807908091699204]' derivation='Sum' name='[sum:Calculation_619807908091699204:ok]' pivot='key' type='ordinal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]'>
            <groupfilter function='level-members' level='[none:player_discipline (copy)_1611444250128560134:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]' value='160' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' value='132' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='208' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' value='120' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' value='300' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' value='156' />
          </style-rule>
          <style-rule element='label'>
            <format attr='wrap' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_619807908091699204:ok] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]))))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{F7D00DC1-1B85-422F-9B53-640E24A4D954}' />
    </worksheet>
    <worksheet name='Participants by years'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]</rows>
        <cols>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</cols>
      </table>
      <simple-id uuid='{24324945-4137-4FD4-9656-40B9306691BF}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]'>
            <groupfilter function='member' level='[none:Calculation_1611444250032074752:nk]' member='&quot;2024&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' direction='DESC' using='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
          <computed-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' direction='DESC' using='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GOLD&quot;</bucket>
              <bucket>&quot;SILVER&quot;</bucket>
              <bucket>&quot;BRONZE&quot;</bucket>
              <bucket>&quot;&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='20' />
            <format attr='cell-h' value='20' />
            <format attr='cell' value='20' />
            <format attr='cell-q' value='100' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='164' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' value='204' />
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='52' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <size column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.7999999523162842' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</rows>
        <cols>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk])</cols>
      </table>
      <simple-id uuid='{5CD95C1D-8BA4-469E-A54D-1887D2839EE4}' />
    </worksheet>
    <worksheet name='Top Perfoming Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Rank Country' datatype='integer' name='[Calculation_1611444250204155919]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='RANK(SUM([Calculation_1131247939083292689]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250133389320]' derivation='None' name='[none:Calculation_1611444250133389320:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='None' name='[none:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250204155919]' derivation='User' name='[usr:Calculation_1611444250204155919:ok]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250119368706]' user:ui-action-filter='[Action5_C9FFAF024A8348C3ACCDCC31466FD107]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' filter-group='5'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250032074752:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Calculation_1611444250124881924:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;BRONZE&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;GOLD&quot;' />
              <groupfilter function='member' level='[none:Calculation_1611444250133389320:nk]' member='&quot;SILVER&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;GOLD&quot;</bucket>
              <bucket>&quot;SILVER&quot;</bucket>
              <bucket>&quot;BRONZE&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' filter-group='4'>
            <groupfilter function='level-members' level='[none:player_discipline (copy)_1611444250128560134:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250204155919:ok]'>
            <groupfilter function='member' level='[usr:Calculation_1611444250204155919:ok]' member='1' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250204155919:ok]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (player_country)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='128' />
            <format attr='height' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='111' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='192' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='10' />
            <format attr='font-weight' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='bold' />
            <format attr='text-align' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' value='center' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250204155919:ok]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='5' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='224' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{DE130BE7-88A7-4856-B91B-5E69646B81BD}' />
    </worksheet>
    <worksheet name='Total Agegroup'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player age group' datatype='string' name='[Calculation_619807908093800453]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_619807908091699204] &lt; 15&#13;&#10;THEN&#13;&#10;&quot;Below 16&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt;= 15 and [Calculation_619807908091699204] &lt;=20&#13;&#10;THEN&#13;&#10;&quot;16-20&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 20 and [Calculation_619807908091699204] &lt;=25&#13;&#10;THEN&#13;&#10;&quot;21-25&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 25 and [Calculation_619807908091699204] &lt;=30&#13;&#10;THEN&#13;&#10;&quot;26-30&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 30 and [Calculation_619807908091699204] &lt;=35&#13;&#10;THEN&#13;&#10;&quot;31-35&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 35&#13;&#10;THEN&#13;&#10;&quot;Above 35&quot;&#13;&#10;END' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908093800453]' derivation='None' name='[none:Calculation_619807908093800453:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]'>
            <groupfilter function='member' level='[Calculation_619807908131618825]' member='&quot;Summer&quot;' user:ui-action-filter='[Action10_EE0D48C799294D328C87CDEB1465DA75]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Year)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250032074752]' user:ui-action-filter='[Action16_D2BE2BCDE2974CA9AE7D2397611C69EB]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_619807908093800453:nk]' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' value='false' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='color' scope='cols' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2f2da</color>
                <color>#f3f3c3</color>
                <color>#f5f5ab</color>
                <color>#f6f693</color>
                <color>#f8f87c</color>
                <color>#f9f963</color>
                <color>#fafa4b</color>
                <color>#fcfc32</color>
                <color>#fdfd19</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{659DE992-CD33-40CE-82D5-74834FC29D79}' />
    </worksheet>
    <worksheet name='Total Gender'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player age group' datatype='string' name='[Calculation_619807908093800453]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_619807908091699204] &lt; 15&#13;&#10;THEN&#13;&#10;&quot;Below 16&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt;= 15 and [Calculation_619807908091699204] &lt;=20&#13;&#10;THEN&#13;&#10;&quot;16-20&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 20 and [Calculation_619807908091699204] &lt;=25&#13;&#10;THEN&#13;&#10;&quot;21-25&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 25 and [Calculation_619807908091699204] &lt;=30&#13;&#10;THEN&#13;&#10;&quot;26-30&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 30 and [Calculation_619807908091699204] &lt;=35&#13;&#10;THEN&#13;&#10;&quot;31-35&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 35&#13;&#10;THEN&#13;&#10;&quot;Above 35&quot;&#13;&#10;END' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column caption='eventteam' datatype='string' name='[Calculation_619807908210577428]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;TEAM&quot;)= TRUE  or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MIXED&quot;)= TRUE &#13;&#10;THEN&#13;&#10;&quot;TEAM&quot;&#13;&#10;ELSE&#13;&#10;&quot;INDIVIDUAL&quot;&#13;&#10;END' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908093800453]' derivation='None' name='[none:Calculation_619807908093800453:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908210577428]' derivation='None' name='[none:Calculation_619807908210577428:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:qk]' pivot='key' type='quantitative' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]'>
            <groupfilter function='member' level='[Calculation_619807908131618825]' member='&quot;Summer&quot;' user:ui-action-filter='[Action10_EE0D48C799294D328C87CDEB1465DA75]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Year)]'>
            <groupfilter function='level-members' level='[Calculation_1611444250032074752]' user:ui-action-filter='[Action15_ACE5B6BD088D4B40BB5A9C4E442A5CD5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_619807908093800453:nk]' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Season)]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[Action (Year)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2f2da</color>
                <color>#f3f3c3</color>
                <color>#f5f5ab</color>
                <color>#f6f693</color>
                <color>#f8f87c</color>
                <color>#f9f963</color>
                <color>#fafa4b</color>
                <color>#fcfc32</color>
                <color>#fdfd19</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' />
              <lod column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908210577428:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{97697413-98AE-4DF3-9607-802B67D2F3EC}' />
    </worksheet>
    <worksheet name='Total Gender (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='medal?' datatype='integer' name='[Calculation_1131247939082563600]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF (ISNULL([Calculation_1611444250120126467])=FALSE OR [Calculation_1611444250120126467]=&quot;&quot;) THEN &#13;&#10;1&#13;&#10;ELSE 0 END&#13;&#10;&#13;&#10;&#13;&#10;//{ FIXED [year],[player_country],[player_discipline],[player_event],[Team]: COUNT([player_name]) }' />
            </column>
            <column caption='countmedal' datatype='integer' name='[Calculation_1131247939083292689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_1611444250119368706],[Calculation_1611444250124881924],[player_discipline (copy)_1611444250128560134],[team],[Calculation_1611444250133389320]&#13;&#10;: &#13;&#10;SUM(&#13;&#10;[Calculation_1131247939082563600]&#13;&#10;) &#13;&#10;}' />
            </column>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_name' datatype='string' name='[Calculation_1611444250085171201]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;[name_tv]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;//IF ISNULL([Athlete Full Name]) AND ISNULL([Athletes])=FALSE&#13;&#10;//THEN&#13;&#10;&#13;&#10;//IF CONTAINS([Athletes],[Athlete Url (Olympic Athletes.Csv)]) or CONTAINS([Athletes],[Athlete Full Name (Olympic Athletes.Csv)])&#13;&#10;//THEN&#13;&#10;//[Athlete Full Name (Olympic Athletes.Csv)]&#13;&#10;//END&#13;&#10;&#13;&#10;//ELSE&#13;&#10;//[Athlete Full Name]&#13;&#10;//END&#13;&#10;&#13;&#10;&#13;&#10;IFNULL([athlete_full_name (olympic_athletes.csv)],&#13;&#10;&#13;&#10;IFNULL([athlete_full_name],&#13;&#10;[athletes]&#13;&#10;&#13;&#10;)&#13;&#10;)&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal' datatype='string' name='[Calculation_1611444250120126467]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;//IFNULL([Medal Type],[Medal Type (Medallists 2024.Csv)])&#13;&#10;IFNULL([medal_type],NULL)&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;[medal_type (olympic_medals.csv)]&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='player_medal_category' datatype='string' name='[Calculation_1611444250133389320]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='if CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;GOLD&quot;)&#13;&#10;THEN&#13;&#10;&quot;GOLD&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;SILVER&quot;)&#13;&#10;THEN&#13;&#10;&quot;SILVER&quot;&#13;&#10;ELSEIF CONTAINS(UPPER([Calculation_1611444250120126467]),&quot;BRONZE&quot;)&#13;&#10;THEN&#13;&#10;&quot;BRONZE&quot;&#13;&#10;ELSE&#13;&#10;&quot;&quot;&#13;&#10;END' />
            </column>
            <column caption='Number of participants' datatype='integer' name='[Calculation_1611444250374369306]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[player (copy)_519884291146895365]' />
            </column>
            <column caption='Win Rate' datatype='real' name='[Calculation_519884291156197384]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_1131247939083292689])&#13;&#10;/[Calculation_1611444250374369306]&#13;&#10;&#13;&#10;*100' />
            </column>
            <column caption='player_gender' datatype='string' name='[Calculation_519884291187683339]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([gender],&#13;&#10;&#13;&#10;IF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;WOMAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;FEMALE&quot;)&#13;&#10;THEN &quot;Female&quot;&#13;&#10;&#13;&#10;ELSEIF CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MEN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MAN&quot;) or CONTAINS(UPPER([player_discipline (copy)_1611444250128560134]),&quot;MALE&quot;)&#13;&#10;THEN &quot;Male&quot;&#13;&#10;&#13;&#10;ELSE&#13;&#10;NULL&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player_age' datatype='integer' name='[Calculation_619807908091699204]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INT([Calculation_1611444250032074752]) -&#13;&#10;INT(&#13;&#10;IFNULL( YEAR([birth_date]) , &#13;&#10;&#13;&#10;IFNULL(([athlete_year_birth]), NULL)&#13;&#10;&#13;&#10;)&#13;&#10;&#13;&#10;)' />
            </column>
            <column caption='player age group' datatype='string' name='[Calculation_619807908093800453]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_619807908091699204] &lt; 15&#13;&#10;THEN&#13;&#10;&quot;Below 16&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt;= 15 and [Calculation_619807908091699204] &lt;=20&#13;&#10;THEN&#13;&#10;&quot;16-20&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 20 and [Calculation_619807908091699204] &lt;=25&#13;&#10;THEN&#13;&#10;&quot;21-25&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 25 and [Calculation_619807908091699204] &lt;=30&#13;&#10;THEN&#13;&#10;&quot;26-30&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 30 and [Calculation_619807908091699204] &lt;=35&#13;&#10;THEN&#13;&#10;&quot;31-35&quot;&#13;&#10;ELSEIF [Calculation_619807908091699204] &gt; 35&#13;&#10;THEN&#13;&#10;&quot;Above 35&quot;&#13;&#10;END' />
            </column>
            <column caption='Total Athletes' datatype='integer' name='[Calculation_619807908177207312]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Calculation_1611444250032074752],[Calculation_519884291187683339]:&#13;&#10;&#13;&#10;[Calculation_1611444250374369306]&#13;&#10;&#13;&#10;}' />
            </column>
            <column caption='Athlete Full Name (Olympic Athletes.Csv)' datatype='string' name='[athlete_full_name (olympic_athletes.csv)]' role='dimension' type='nominal' />
            <column caption='Athlete Full Name' datatype='string' name='[athlete_full_name]' role='dimension' type='nominal' />
            <column caption='Athlete Year Birth' datatype='integer' name='[athlete_year_birth]' role='measure' type='quantitative' />
            <column caption='Athletes' datatype='string' name='[athletes]' role='dimension' type='nominal' />
            <column datatype='date' name='[birth_date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[discipline (medals_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title (Olympic Medals.Csv)' datatype='string' name='[discipline_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Discipline Title' datatype='string' name='[discipline_title]' role='dimension' type='nominal' />
            <column caption='Disciplines' datatype='string' name='[disciplines]' role='dimension' type='nominal' />
            <column caption='Event (Medallists 2024.Csv)' datatype='string' name='[event (medallists_2024.csv)]' role='dimension' type='nominal' />
            <column caption='Event' datatype='string' name='[event]' role='dimension' type='nominal' />
            <column caption='Event Title (Olympic Medals.Csv)' datatype='string' name='[event_title (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Event Title' datatype='string' name='[event_title]' role='dimension' type='nominal' />
            <column caption='Events' datatype='string' name='[events]' role='dimension' type='nominal' />
            <column datatype='string' name='[gender]' role='dimension' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column caption='Medal Type (Olympic Medals.Csv)' datatype='string' name='[medal_type (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Medal Type' datatype='string' name='[medal_type]' role='dimension' type='nominal' />
            <column caption='Name Tv' datatype='string' name='[name_tv]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_519884291187683339]' derivation='None' name='[none:Calculation_519884291187683339:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908093800453]' derivation='None' name='[none:Calculation_619807908093800453:nk]' pivot='key' type='nominal' />
            <column caption='player count' datatype='integer' name='[player (copy)_519884291146895365]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='COUNTD([Calculation_1611444250085171201])' />
            </column>
            <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1131247939083292689]' derivation='Sum' name='[sum:Calculation_1131247939083292689:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_619807908177207312]' derivation='Sum' name='[sum:Calculation_619807908177207312:ok]' pivot='key' type='ordinal' />
            <column caption='Team' datatype='string' name='[team]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_1611444250374369306]' derivation='User' name='[usr:Calculation_1611444250374369306:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_519884291156197384]' derivation='User' name='[usr:Calculation_519884291156197384:qk]' pivot='key' type='quantitative' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Calculation_519884291187683339:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_619807908093800453:nk]' />
              <groupfilter function='member' level='[none:Calculation_619807908093800453:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='109' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' value='188' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' value='136' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]' value='232' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]' value='180' />
            <format attr='width' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_619807908177207312:ok]' value='128' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2f2da</color>
                <color>#f3f3c3</color>
                <color>#f5f5ab</color>
                <color>#f6f693</color>
                <color>#f8f87c</color>
                <color>#f9f963</color>
                <color>#fafa4b</color>
                <color>#fcfc32</color>
                <color>#fdfd19</color>
                <color>#ffff00</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_619807908177207312:ok] / ([federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok] / [federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok])))))</rows>
        <cols />
      </table>
      <simple-id uuid='{3413F57A-FE14-4C05-8C75-3A196CDB3B82}' />
    </worksheet>
    <worksheet name='summer n winter'>
      <table>
        <view>
          <datasources>
            <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
          </datasources>
          <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
            <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
            </column>
            <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
            </column>
            <column caption='Season' datatype='string' name='[Calculation_619807908131618825]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF (INT([Calculation_1611444250032074752])-4) % 4 = 0&#13;&#10;THEN&#13;&#10;&quot;Summer&quot;&#13;&#10;ELSE&#13;&#10;&quot;Winter&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[country (medals_2024.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name (Olympic Medals.Csv)' datatype='string' name='[country_name (olympic_medals.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Count' caption='Medal Date' datatype='date' name='[medal_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_619807908131618825]' derivation='None' name='[none:Calculation_619807908131618825:nk]' pivot='key' type='nominal' />
            <column caption='Slug Game (Olympic Medals.Csv)' datatype='string' name='[slug_game (olympic_medals.csv)]' role='dimension' type='nominal' />
            <column caption='Slug Game' datatype='string' name='[slug_game]' role='dimension' type='nominal' />
            <column datatype='string' name='[year]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_619807908131618825:nk]' />
          </filter>
          <slices>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</column>
            <column>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='250' />
            <format attr='width' value='367' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <shape column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' />
              <text column='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Current  Season:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'>Click  to change season</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='5.3785600662231445' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Winter&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='0.563636' y='-12' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{5B1375B5-F115-43E2-B079-00D5A2BAFBAC}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1000' maxwidth='1600' minheight='1000' minwidth='1600' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Win Rate' caption='Content' datatype='string' datatype-customized='true' name='[Parameter 3]' param-domain-type='list' role='measure' type='nominal' value='&quot;Win Rate&quot;'>
          <calculation class='tableau' formula='&quot;Win Rate&quot;' />
          <aliases>
            <alias key='&quot;Most Medal&quot;' value='Most Medal' />
            <alias key='&quot;Number of Participants&quot;' value='Number of Participants' />
            <alias key='&quot;Win Rate&quot;' value='Win Rate' />
          </aliases>
          <members>
            <member alias='Number of Participants' value='&quot;Number of Participants&quot;' />
            <member alias='Most Medal' value='&quot;Most Medal&quot;' />
            <member alias='Win Rate' value='&quot;Win Rate&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
        <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
        </column>
        <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
        </column>
        <column caption='player_discipline' datatype='string' name='[Calculation_1611444250124881924]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;IF ISNULL([disciplines]) = TRUE&#13;&#10;THEN&#13;&#10;&#13;&#10;[discipline (medals_2024.csv)]&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IF FIND([disciplines], &quot;[&apos;&quot;) &gt; 0&#13;&#10;THEN MID([disciplines], FIND([disciplines], &quot;[&apos;&quot;)+2,LEN([disciplines])-4)&#13;&#10;ELSE [disciplines]&#13;&#10;END&#13;&#10;&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([discipline_title],[discipline_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1611444250124881924]' derivation='None' name='[none:Calculation_1611444250124881924:nk]' pivot='key' type='nominal' />
        <column-instance column='[player_discipline (copy)_1611444250128560134]' derivation='None' name='[none:player_discipline (copy)_1611444250128560134:nk]' pivot='key' type='nominal' />
        <column caption='player_event' datatype='string' name='[player_discipline (copy)_1611444250128560134]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Calculation_1611444250032074752]=&apos;2024&apos; &#13;&#10;THEN&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;//IFNULL([Event (Medallists 2024.Csv)], &#13;&#10;//SPLIT( &#13;&#10;//REPLACE( REPLACE( REPLACE( REPLACE([Events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;//,&quot;,&quot;,1)  &#13;&#10;//)&#13;&#10;IF ISNULL([events]) and ISNULL([event (medallists_2024.csv)])&#13;&#10;THEN [event]&#13;&#10;ELSEIF ISNULL([events]) and ISNULL([event])&#13;&#10;THEN [event (medallists_2024.csv)]&#13;&#10;ELSEIF  CONTAINS([events],[event])&#13;&#10;THEN [event]&#13;&#10;ELSEIF CONTAINS([events],[event (medallists_2024.csv)])&#13;&#10;THEN   [event (medallists_2024.csv)]&#13;&#10;ELSE&#13;&#10;REPLACE( REPLACE( REPLACE( REPLACE([events],&quot;[&quot; , &quot;&quot;) ,&quot;]&quot;,&quot;&quot;)  ,&apos;&quot;&apos; ,&quot;&quot;) , &quot;&apos;&quot;,&quot;&quot;)&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([event_title],[event_title (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='65' param='horz' type-v2='layout-flow' w='99000' x='500' y='800'>
            <zone h='98400' id='23' type-v2='layout-basic' w='99000' x='500' y='800'>
              <zone h='86702' id='16' name='Choropleth Map' show-title='false' w='72185' x='500' y='12498'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5849' id='22' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='13408' x='72685' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7302' id='26' mode='checkdropdown' name='Choropleth Map' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' type-v2='filter' values='relevant' w='26815' x='72685' y='71798'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20100' id='32' mode='checkdropdown' name='Choropleth Map' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' type-v2='filter' values='relevant' w='26815' x='72685' y='79100'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7798' id='35' mode='slider' name='Choropleth Map' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type-v2='filter' values='all' w='13407' x='72685' y='64000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11698' id='39' is-centered='0' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/images.png' type-v2='bitmap' w='14060' x='500' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='11698' id='40' type-v2='text' w='58125' x='14560' y='800'>
                <formatted-text>
                  <run bold='true' fontsize='15'>Olympic Data Visualisation</run>
                  <run>Æ&#10;</run>
                  <run bold='true'>This dashboard contains data from 1896 to 2024 olympics</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7798' id='50' mode='checkdropdown' name='Medals by Countries' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type-v2='filter' values='database' w='13408' x='86092' y='64000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='51502' id='41' name='Medals by Countries' w='26815' x='72685' y='12498'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5849' id='56' mode='checkdropdown' name='Choropleth Map' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type-v2='filter' values='database' w='13408' x='72685' y='6649'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11698' id='66' type-v2='empty' w='13407' x='86093' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='7700' id='21' name='Choropleth Map' pane-specification-id='2' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291162824713:qk]' type-v2='color' w='8750' x='62375' y='15500' />
        <zone h='8200' id='46' name='Overall' w='26000' x='46500' y='4200' />
        <zone h='6400' id='45' name='Medals by Countries' pane-specification-id='5' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' show-title='false' type-v2='color' w='8688' x='90250' y='11300' />
        <zone forceUpdate='true' h='5000' id='47' type-v2='text' w='6750' x='48000' y='700'>
          <formatted-text>
            <run fontcolor='#000000'>Total Medals</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5000' id='48' type-v2='text' w='6750' x='55188' y='800'>
          <formatted-text>
            <run bold='true'>Total Events</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='5000' id='49' type-v2='text' w='9313' x='62875' y='800'>
          <formatted-text>
            <run bold='true'>Total Participants</run>
          </formatted-text>
        </zone>
        <zone h='5500' id='63' name='Next' show-title='false' w='9188' x='88250' y='4000' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='80' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='79' param='vert' type-v2='layout-flow' w='99000' x='500' y='800'>
                <zone forceUpdate='true' h='5000' id='47' type-v2='text' w='6750' x='48000' y='700'>
                  <formatted-text>
                    <run fontcolor='#000000'>Total Medals</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='109' h='11698' id='39' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/images.png' type-v2='bitmap' w='14060' x='500' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='11698' id='40' type-v2='text' w='58125' x='14560' y='800'>
                  <formatted-text>
                    <run bold='true' fontsize='15'>Olympic Data Visualisation</run>
                    <run>Æ&#10;</run>
                    <run bold='true'>This dashboard contains data from 1896 to 2024 olympics</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5000' id='48' type-v2='text' w='6750' x='55188' y='800'>
                  <formatted-text>
                    <run bold='true'>Total Events</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='5000' id='49' type-v2='text' w='9313' x='62875' y='800'>
                  <formatted-text>
                    <run bold='true'>Total Participants</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5849' id='22' mode='compact' param='[Parameters].[Parameter 3]' type-v2='paramctrl' w='13408' x='72685' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='55' h='5500' id='63' is-fixed='true' name='Next' show-title='false' w='9188' x='88250' y='4000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='82' h='8200' id='46' is-fixed='true' name='Overall' w='26000' x='46500' y='4200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7302' id='26' mode='checkdropdown' name='Choropleth Map' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' type-v2='filter' values='relevant' w='26815' x='72685' y='71798'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='20100' id='32' mode='checkdropdown' name='Choropleth Map' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' type-v2='filter' values='relevant' w='26815' x='72685' y='79100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7798' id='35' mode='slider' name='Choropleth Map' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type-v2='filter' values='all' w='13407' x='72685' y='64000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5849' id='56' mode='checkdropdown' name='Choropleth Map' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type-v2='filter' values='database' w='13408' x='72685' y='6649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86702' id='16' is-fixed='true' name='Choropleth Map' show-title='false' w='72185' x='500' y='12498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7700' id='21' name='Choropleth Map' pane-specification-id='2' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291162824713:qk]' type-v2='color' w='8750' x='62375' y='15500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7798' id='50' mode='checkdropdown' name='Medals by Countries' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type-v2='filter' values='database' w='13408' x='86092' y='64000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51502' id='41' is-fixed='true' name='Medals by Countries' w='26815' x='72685' y='12498'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6400' id='45' name='Medals by Countries' pane-specification-id='5' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' show-title='false' type-v2='color' w='8688' x='90250' y='11300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AA84F732-9EC8-482E-8F7F-ABA00D13251A}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size maxheight='1000' maxwidth='1600' minheight='1000' minwidth='1600' sizing-mode='fixed' />
      <datasources>
        <datasource caption='olympic_results+' name='federated.1yxdfkn163wzao17puqgt0p30fvp' />
      </datasources>
      <datasource-dependencies datasource='federated.1yxdfkn163wzao17puqgt0p30fvp'>
        <column caption='Year' datatype='string' name='[Calculation_1611444250032074752]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF  ISNULL([slug_game])=TRUE and ISNULL([slug_game (olympic_medals.csv)])=TRUE&#13;&#10;THEN &#13;&#10;&#13;&#10;IF ISNULL([year])=TRUE&#13;&#10;THEN&#13;&#10;STR(YEAR(DATETIME([medal_date])))&#13;&#10;&#13;&#10;ELSE&#13;&#10;STR([year])&#13;&#10;END&#13;&#10;&#13;&#10;&#13;&#10;&#13;&#10;ELSE &#13;&#10;str((RIGHT( IFNULL([slug_game],[slug_game (olympic_medals.csv)]) ,4))) &#13;&#10;END' />
        </column>
        <column caption='player_country' datatype='string' name='[Calculation_1611444250119368706]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
          <calculation class='tableau' formula='IF [Calculation_1611444250032074752] = &apos;2024&apos;&#13;&#10;THEN&#13;&#10;&#13;&#10;IFNULL(&#13;&#10;&#13;&#10;IF [country]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country] END&#13;&#10;,IF [country (medals_2024.csv)]=&quot;United States&quot; THEN &quot;United States of America&quot; ELSE [country (medals_2024.csv)] END&#13;&#10;)&#13;&#10;&#13;&#10;ELSE&#13;&#10;&#13;&#10;IFNULL([country_name],[country_name (olympic_medals.csv)])&#13;&#10;&#13;&#10;END' />
        </column>
        <column-instance column='[Calculation_1611444250032074752]' derivation='None' name='[none:Calculation_1611444250032074752:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_1611444250119368706]' derivation='None' name='[none:Calculation_1611444250119368706:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='57' param='horz' type-v2='layout-flow' w='99000' x='500' y='800'>
            <zone h='98400' id='55' type-v2='layout-basic' w='99000' x='500' y='800'>
              <zone h='90900' id='31' param='horz' type-v2='layout-flow' w='99000' x='500' y='8300'>
                <zone h='90900' id='29' type-v2='layout-basic' w='99000' x='500' y='8300'>
                  <zone h='90900' id='26' param='horz' type-v2='layout-flow' w='99000' x='500' y='8300'>
                    <zone h='90900' id='21' type-v2='layout-basic' w='99000' x='500' y='8300'>
                      <zone h='50400' id='13' param='horz' type-v2='layout-flow' w='99000' x='500' y='8300'>
                        <zone h='50400' id='11' type-v2='layout-basic' w='99000' x='500' y='8300'>
                          <zone h='50400' id='7' param='horz' type-v2='layout-flow' w='22749' x='500' y='8300'>
                            <zone h='50400' id='5' type-v2='layout-basic' w='22749' x='500' y='8300'>
                              <zone h='50400' id='3' name='Medals by Countries' w='22749' x='500' y='8300'>
                                <zone-style>
                                  <format attr='border-color' value='#000000' />
                                  <format attr='border-style' value='none' />
                                  <format attr='border-width' value='0' />
                                  <format attr='margin' value='4' />
                                </zone-style>
                              </zone>
                            </zone>
                          </zone>
                          <zone h='50400' id='10' name='Medals by Disciplines' w='26751' x='23249' y='8300'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='50400' id='28' name='Medals by Events' w='26124' x='50000' y='8300'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='50400' id='35' name='Medals by Athletes' w='23376' x='76124' y='8300'>
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                      </zone>
                      <zone h='40500' id='20' name='Medals by Summer' w='67561' x='500' y='58700'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='40500' id='24' name='Medals by Winter' w='31439' x='68061' y='58700'>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                  </zone>
                </zone>
              </zone>
              <zone h='7500' id='14' mode='slider' name='Medals by Disciplines' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type-v2='filter' values='relevant' w='11438' x='11812' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='42' type-v2='empty' w='28407' x='51655' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='47' name='Next' show-title='false' w='9751' x='89749' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='49' name='Back' show-title='false' w='9687' x='80062' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='true' h='7500' id='50' type-v2='text' w='28405' x='23250' y='800'>
                <formatted-text>
                  <run bold='true' fontsize='15'>Medals Perfomance Drilldown</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7500' id='58' mode='pattern' name='Medals by Countries' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type-v2='filter' values='database' w='11312' x='500' y='800'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8600' id='39' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/summer.jpg' type-v2='bitmap' w='6000' x='61438' y='59100' />
        <zone h='8600' id='40' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/winter.jpg' type-v2='bitmap' w='6000' x='93063' y='58600' />
        <zone h='5800' id='43' is-scaled='1' param='C:/Users/Hendy/AppData/Local/Temp/TableauTemp/1grtjp80fj6m2813caqgo0hli3e4/Sheets5/Image/world.jpg' type-v2='bitmap' w='4500' x='18000' y='8100' />
        <zone h='5000' id='44' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/sports.png' type-v2='bitmap' w='3625' x='44438' y='7500' />
        <zone h='5600' id='45' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/stick3.png' type-v2='bitmap' w='5125' x='70063' y='7600' />
        <zone h='5300' id='46' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/macho man.png' type-v2='bitmap' w='5188' x='93625' y='7700' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2550' minheight='2550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='68' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='67' param='vert' type-v2='layout-flow' w='99000' x='500' y='800'>
                <zone forceUpdate='true' h='7500' id='50' type-v2='text' w='28405' x='23250' y='800'>
                  <formatted-text>
                    <run bold='true' fontsize='15'>Medals Perfomance Drilldown</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='67' h='7500' id='49' is-fixed='true' name='Back' show-title='false' w='9687' x='80062' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='67' h='7500' id='47' is-fixed='true' name='Next' show-title='false' w='9751' x='89749' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='50' h='5000' id='44' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/sports.png' type-v2='bitmap' w='3625' x='44438' y='7500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='5600' id='45' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/stick3.png' type-v2='bitmap' w='5125' x='70063' y='7600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='53' h='5300' id='46' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/macho man.png' type-v2='bitmap' w='5188' x='93625' y='7700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='58' h='5800' id='43' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/AppData/Local/Temp/TableauTemp/1grtjp80fj6m2813caqgo0hli3e4/Sheets5/Image/world.jpg' type-v2='bitmap' w='4500' x='18000' y='8100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7500' id='58' mode='pattern' name='Medals by Countries' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type-v2='filter' values='database' w='11312' x='500' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50400' id='3' is-fixed='true' name='Medals by Countries' w='22749' x='500' y='8300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7500' id='14' mode='slider' name='Medals by Disciplines' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type-v2='filter' values='relevant' w='11438' x='11812' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50400' id='10' is-fixed='true' name='Medals by Disciplines' w='26751' x='23249' y='8300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50400' id='28' is-fixed='true' name='Medals by Events' w='26124' x='50000' y='8300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50400' id='35' is-fixed='true' name='Medals by Athletes' w='23376' x='76124' y='8300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='86' h='8600' id='40' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/winter.jpg' type-v2='bitmap' w='6000' x='93063' y='58600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40500' id='20' is-fixed='true' name='Medals by Summer' w='67561' x='500' y='58700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40500' id='24' is-fixed='true' name='Medals by Winter' w='31439' x='68061' y='58700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='86' h='8600' id='39' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/summer.jpg' type-v2='bitmap' w='6000' x='61438' y='59100'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{259E56FD-0061-4890-B5B3-EFA60A1B5FFB}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 3'>
      <style />
      <size maxheight='1000' maxwidth='1600' minheight='1000' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='49' param='horz' type-v2='layout-flow' w='99000' x='500' y='800'>
            <zone h='98400' id='28' type-v2='layout-basic' w='99000' x='500' y='800'>
              <zone h='98400' id='25' param='horz' type-v2='layout-flow' w='99000' x='500' y='800'>
                <zone h='98400' id='7' type-v2='layout-basic' w='99000' x='500' y='800'>
                  <zone h='54195' id='5' name='Gender distribution of participant over the year' w='73002' x='26498' y='800'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32498' id='14' name='Medals by Gender ' w='25998' x='500' y='800'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='21101' id='18' name='Age Group by Medals ' w='25998' x='500' y='54995'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='44205' id='23' name='Age group distribution of participant over the year' w='73002' x='26498' y='54995'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='12297' id='27' name='Total Gender' show-title='false' w='14310' x='12188' y='42698'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5802' id='32' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/Female.png' type-v2='bitmap' w='11688' x='500' y='42698'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='6495' id='33' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/Male.png' type-v2='bitmap' w='11688' x='500' y='48500'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9400' id='34' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/3 m.jpg' type-v2='bitmap' w='25998' x='500' y='33298'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='10104' id='35' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/3 m.jpg' type-v2='bitmap' w='25998' x='500' y='76096'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13000' id='39' name='Total Agegroup' show-title='false' w='25998' x='500' y='86200'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='15900' id='20' name='Age Group by Medals ' pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' show-title='false' type-v2='color' w='8063' x='31875' y='63700' />
        <zone h='6400' id='16' name='Medals by Gender ' pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' show-title='false' type-v2='color' w='6125' x='32500' y='9800' />
        <zone h='11300' id='44' name='summer n winter' show-title='false' w='9000' x='88750' y='1300' />
        <zone h='5600' id='47' name='Back' show-title='false' w='8375' x='79625' y='1600' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2000' minheight='2000' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='63' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='62' param='vert' type-v2='layout-flow' w='99000' x='500' y='800'>
                <zone fixed-size='280' h='32498' id='14' is-fixed='true' name='Medals by Gender ' w='25998' x='500' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6400' id='16' name='Medals by Gender ' pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' show-title='false' type-v2='color' w='6125' x='32500' y='9800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='54195' id='5' is-fixed='true' name='Gender distribution of participant over the year' w='73002' x='26498' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='113' h='11300' id='44' is-fixed='true' name='summer n winter' show-title='false' w='9000' x='88750' y='1300'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='5600' id='47' is-fixed='true' name='Back' show-title='false' w='8375' x='79625' y='1600'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='86' h='9400' id='34' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/3 m.jpg' type-v2='bitmap' w='25998' x='500' y='33298'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='50' h='5802' id='32' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/Female.png' type-v2='bitmap' w='11688' x='500' y='42698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='115' h='12297' id='27' is-fixed='true' name='Total Gender' show-title='false' w='14310' x='12188' y='42698'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='6495' id='33' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/Male.png' type-v2='bitmap' w='11688' x='500' y='48500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='203' h='21101' id='18' is-fixed='true' name='Age Group by Medals ' w='25998' x='500' y='54995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15900' id='20' name='Age Group by Medals ' pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' show-title='false' type-v2='color' w='8063' x='31875' y='63700'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44205' id='23' is-fixed='true' name='Age group distribution of participant over the year' w='73002' x='26498' y='54995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='93' h='10104' id='35' is-fixed='true' is-scaled='1' param='C:/Users/Hendy/OneDrive/Desktop/SC4024/Images/3 m.jpg' type-v2='bitmap' w='25998' x='500' y='76096'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='122' h='13000' id='39' is-fixed='true' name='Total Agegroup' show-title='false' w='25998' x='500' y='86200'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2DBB169A-2E23-4831-B812-36103FD1FBC9}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Check data'>
      <cards>
        <edge name='left'>
          <strip size='129'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8F3421E5-FA56-4FE9-AF0E-47BB4795341E}' />
    </window>
    <window class='worksheet' name='Medals by years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6B157667-8678-4158-B48D-29E8048A1723}' />
    </window>
    <window class='worksheet' name='Participants by years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8F16F494-47D7-4508-BAEE-72614A3DB786}' />
    </window>
    <window class='worksheet' name='Participants'>
      <cards>
        <edge name='left'>
          <strip size='102'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='19'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='checkdropdown' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:name (medals_2024.csv):nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:team:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_619807908091699204:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5152CE35-A9B7-4915-8A0D-24C57BF36224}' />
    </window>
    <window class='worksheet' name='Most Medals Disciplines'>
      <cards>
        <edge name='left'>
          <strip size='161'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='22'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='172'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{E6E80149-F345-4DC8-9F85-B0F9CE6AD99F}' />
    </window>
    <window class='worksheet' name='Geospatial (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='color' />
            <card pane-specification-id='3' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EA2DE3B8-9ABF-4A96-ABE1-5EB21627626E}' />
    </window>
    <window class='worksheet' name='Box plot'>
      <cards>
        <edge name='left'>
          <strip size='208'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{074522B3-59E1-414B-9DD8-93C0CA8057C1}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='slider' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8FD9600-DC0B-46CD-87D5-CD6730B5E302}' />
    </window>
    <window class='worksheet' name='Choropleth Map'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='29'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='37'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='193'>
            <card mode='compact' param='[Parameters].[Parameter 3]' type='parameter' />
            <card mode='checkdropdown' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]' type='filter' />
            <card mode='slider' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291162824713:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{DE12EC51-B890-4CD4-92A5-5984101F7AB2}' />
    </window>
    <window class='worksheet' name='Medals by Countries'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='216'>
            <card mode='checkdropdown' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{E4847D80-C4D9-49D2-BD0D-D6EBED6E8CA3}' />
    </window>
    <window class='worksheet' name='Top Perfoming Country'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='216'>
            <card mode='checkdropdown' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
            <card pane-specification-id='5' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250204155919:nk:2]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{B3E24910-FC23-4798-8D62-E6987ADD681A}' />
    </window>
    <window class='worksheet' name='Overall'>
      <cards>
        <edge name='left'>
          <strip size='202'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='30'>
            <card type='columns' />
          </strip>
          <strip size='30'>
            <card type='rows' />
          </strip>
          <strip size='28'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='216'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_619807908083027968:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{D553389D-E4A2-421D-A8C7-BD119AA38667}' />
    </window>
    <window class='worksheet' name='Medals by Disciplines'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='filter' />
            <card mode='slider' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1131247939082563600:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF6457E4-D1A8-42E4-92DE-06F246C86CE1}' />
    </window>
    <window class='worksheet' name='Medals by Events'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card mode='slider' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1131247939082563600:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B4D2E44-7C6E-40ED-9C55-017E4D69C56A}' />
    </window>
    <window class='worksheet' name='Medals by Athletes'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]' type='filter' />
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card mode='slider' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1131247939082563600:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B41D7F6F-F68F-4615-A1C4-CAFA327911C8}' />
    </window>
    <window class='worksheet' name='Medals by Summer'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' type='filter' />
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card mode='slider' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1131247939082563600:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{19014E98-5D99-43A4-A406-C97EACBAE1A5}' />
    </window>
    <window class='worksheet' name='Medals by Winter'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' type='filter' />
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]' type='filter' />
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]' type='filter' />
            <card mode='slider' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1131247939082563600:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1939E42-1A25-4F69-9663-B6098F3E9E5B}' />
    </window>
    <window class='worksheet' name='Gender distribution of participant over the year'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='radiolist' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
                  <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</field>
                  <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]</field>
                  <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;1952&quot;</value>
                <value>&quot;Female&quot;</value>
                <value>90</value>
                <value>409</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73F9AC1C-6299-4053-903D-E1DB2FD654E9}' />
    </window>
    <window class='worksheet' name='Age group distribution of participant over the year'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='radiolist' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' type='filter' />
            <card pane-specification-id='3' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73E8E20A-90E6-4D0A-81C8-A905DB24E8A7}' />
    </window>
    <window class='worksheet' name='Age Group Distribution'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250085171201:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{76829111-48EE-4C14-9DB2-5C18CD7655CE}' />
    </window>
    <window class='worksheet' name='Medals by Gender '>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2C8F0D79-BF06-4D7F-B19A-E5370A16ABB3}' />
    </window>
    <window class='worksheet' name='Age Group by Medals '>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]' type='color' />
            <card pane-specification-id='1' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[:Measure Names]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D6533537-BAD3-4F65-B084-F1944D7647F2}' />
    </window>
    <window class='worksheet' name='Total Gender'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908210577428:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:participant_type:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_619807908177207312:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A762AE0-CAC8-4571-AA05-DDADD9056A38}' />
    </window>
    <window class='worksheet' name='Total Agegroup'>
      <cards>
        <edge name='left'>
          <strip size='263'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:participant_type:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_619807908177207312:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F616ACD8-4D86-4A64-A188-31E1EE2ADBD4}' />
    </window>
    <window class='worksheet' name='Total Gender (2)'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250032074752:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250119368706:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250124881924:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:participant_type:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:player_discipline (copy)_1611444250128560134:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_1131247939083292689:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[sum:Calculation_619807908177207312:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_1611444250374369306:ok]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[usr:Calculation_519884291156197384:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4588459-3C8C-410B-BD44-B748BBB1C0DC}' />
    </window>
    <window class='worksheet' name='Next'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation1 (copy)_619807908195311635:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;NEXT&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation1 (copy)_619807908195311635:nk]</field>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908194689041:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A39BCDD-C3E2-44A4-AD24-C0E337A826A0}' />
    </window>
    <window class='worksheet' name='Back'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card mode='compact' param='[Parameters].[Parameter 4]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908194689041:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;BACK&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908194689041:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1B36EDEE-87B2-481E-8347-9B2B76AF00DB}' />
    </window>
    <window class='worksheet' name='summer n winter'>
      <cards>
        <edge name='left'>
          <strip size='128'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='24'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='128'>
            <card param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{120D0B98-70DB-4C2A-8225-768D04520E3A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Choropleth Map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Medals by Countries'>
          <highlight field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='1' />
        </viewpoint>
        <viewpoint name='Next'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation1 (copy)_619807908195311635:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;NEXT&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Overall'>
          <zoom type='entire-view' />
          <floating-toolbar-visibility value='2' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{FF33A9F9-F4AE-4576-B0AC-E3EAF77587D9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Back'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908194689041:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;BACK&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Medals by Athletes' />
        <viewpoint name='Medals by Countries'>
          <highlight field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]'>
            <bucket-selection />
          </highlight>
          <floating-toolbar-visibility value='2' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Medals by Disciplines' />
        <viewpoint name='Medals by Events' />
        <viewpoint name='Medals by Summer'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Medals by Winter'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Next'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='49' />
      <simple-id uuid='{9C3ADBDD-DF2F-418A-8993-AE3FEF4CD583}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Age Group by Medals '>
          <zoom type='entire-view' />
          <highlight field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908093800453:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Age group distribution of participant over the year'>
          <zoom type='fit-height' />
          <highlight>
            <color-one-way>
              <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_1611444250133389320:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Back'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908194689041:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;BACK&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Gender distribution of participant over the year'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Medals by Gender '>
          <zoom type='entire-view' />
          <highlight field='[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_519884291187683339:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Total Agegroup'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Gender'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='summer n winter'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1yxdfkn163wzao17puqgt0p30fvp].[none:Calculation_619807908131618825:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Summer&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='47' />
      <simple-id uuid='{13369593-A102-4CBD-B831-DE799403ED1D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age Group Distribution' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Age Group by Medals ' width='192'>
      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
      LveUOqkr4v8DeE0Q1AUAj+kAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Age group distribution of participant over the year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2daWykyXnff+/R993sg/dw7pm9d3ZHh3VYsqwgie0YNuDAiZMAQWAk3/3J
      yBd9CBIHCAJLEYI4iBM7VmwBii3LlrSKDq9WuzOzc5+ck5yD15Bskn332+9VlQ9Nzg6Hszs9
      syRnNF0/otFNdr9VT7HrX1XPU8erSSklCkWPoj9tAxSKp4kSgKKnUQJQ9DRKAIqeRglA0dMo
      ASh6GiUARU+jBKDoaZQAFD2NEoCip3lmBOD7/tM2QdGDPDMCEEI8bRMUPcgzIwCF4mmgBKDo
      aZQAFD2NEoCip1ECUPQ0SgCKnkYJQNHTKAEoeholAEVPowSg6GmUABQ9jRKAoqdRAlD0NEoA
      ip5GCUDR0ygBKHoaJQBFT6MEoOhplAAUPY0SgKKn2RIBSClYWSrhCQBJdWmeOzPz+FJiW3Uc
      HzzHotawtiJ7haJrtkQAExdP8e7RozQdaFfmOX99hvbyNJdvL7A0fY0VS3L13Cka7lbkrlB0
      j7kVie595RNY9jsALC2vsHPPfkaykvfPzpCOudy+dJxoZjeDmQhCCKSUSCnV2UCKbeep+ABr
      lV6heNpsQQ/gs7RQYqVcJbwwz2Amy5mr12jFJLHcCLrbYu8rb1C+epRbiwnGCkl0OqIwDGPz
      zVEoPgJt8+8S6TF7a4qW56NpJiM7x2iXF6i0YXioiNduoAUTmNKh1nJIJeNogOu6BAKBzTVF
      oXgEWyCAJ0MJQPE0UPMAip5GCUDR0ygBKHoaJQBFT6MEoOhplAAUPY0SgKKnUQJQ9DRKAIqe
      RglA0dMoASh6GiUARU+jBKDoaZQAFD2NEoCip1ECUPQ0SgCKnkYJQNHTKAEoeholAEVPowSg
      6GmUABQ9jRKAoqfp6mQ433XwNQOnWYVgnHgk2HUGwrO5cvE85Ta88PKrGFYJPTmMbi1QtsMM
      F1NPbLxC8XHpqge4dOodphfn+ZP/9l/55t/83WNlsDw9iRcf5vCBQS5evUWjPE/TcTh//hrp
      TOKJjFYoNouuegCrXmbynR+w58v/jNbtC4+VQSpf4MKxM7x3G0YOvolfXuTdt77LG7/494gH
      dXzfRwiBEALHcZ6kDArFE9OVAMb2vYg7Z3P4xRzjxr7HyqA0P8fg/kPs7hOcuDjLzmyUT33m
      U0xNTrCz8BqmYWAYhjoaUfFUeOQQyG03OXvmFPmhYWorK4xfHn+sDJLpNHPXz3P0+AXimQy6
      bhJJD7J/MMiVm3d5Jg4mVfQsj+wBavOTnL14nVvLgng0wuuf/sJjZZDIjfKlXx697y/DnafY
      CxQfKyWFYvPp6nTo+vIsVyam8YUkki7y2sFdm26IGgIpngZd+QAXjv8d87KfdFiHiHJUFc8P
      XQkgnswSdaKkU2HC8ehW26RQbBtdzQP0FYbArrG4uMhypb7VNikU20ZXPUAqk6E8f5Ka7ZMW
      sa22SaHYNrrqAc6fep/+XIjXfunXSYa35M6qCsVToavanEj3EYiGeeut7xBOq+Cl4vmhqzCo
      77ZZXlpiqdxgaGwnqWho0w1RYVDF06CrHuDK8R/y0/Fl0iGPszeX+Z1f/cxW26VQbAtdCcAm
      wD/8R79BManzg7d+RKtlEY5E0LWtNk+h2Fq6EkDQd/jLP/9jTF3DshwWa3/FP/mnv0M6vNXm
      KRRbyyMFcPrdtxDhHEMDTQCSg3v51S8c3nLDFIrt4JECGBjdi+16aME4IV3gmMntsEuh2BYe
      OQ8wuGMPy3M3Gdr1Ai+9/AJ3b9/YDrsUim2hKx8gGoCfvv02I0mXshPZapsUim2jq3kA6TtM
      XL9CpaVz4MUDJMKbH69X8wCKp8Eje4D3fvAtRDjN5auTAEzOl/ntX/n8lhumUGwHj+wByqV5
      lpdLEEoRNCQrVYvXXj6w6YaoHkDxNHikExyNhDh36giVpoPTrnPmwuPtCVYonmUeOQSyqgvM
      zq9gXTpHIhbl81/4wjaYpVBsD105wePH3yG57zAjma3bDaaGQIqnQVf7AeJh+MF3f8D1iQnu
      zJW22iaFYtvoSgC+HiAiGxx//33OX7211TYpFNtGVxNhpq5Tmp3ENlPUjL7HzsSqrzA9v8LA
      8A6Csg2hBIZv0bQhlVATa4qnR1c9wPTsDJ/95Mt88bf+FTvTjzdO91ornL44STwWxnE9lmau
      UbYkV86douk/kc0KxabRVQ8wNLoHLRzmO3/1P8jsebyVoKXZaax2ixsTt9h5IIHmudy8cIxE
      bg+D6QhCCKSUSCnxfaUIxfbSVQ8wsnMXk5evMrDrBX7lS596rAyklAzsPMhnP/Uq0xM3QdMw
      dP1eZdc0DU1TO2sUT4euwqBHvvdnWLlDjMWb/OTMXf71P//1rjNw6ov87NR1do9kWGwEGY5W
      MQbfoHLtKMHhl9hZTKGhwqCKp0NXQ6BIPE3ba9HyTbTWIuNXr7Nnzz5CXVwdTBT4hUMGi9U2
      r780AG4LghqFVw9Tt9yPa79C8bHoqgcQvocvOh+TEnRdwzBMNnPkonoAxdPgkW34wsI8AV0S
      zw4QNLbDJIVi+3ikAN798fcQ+Ow99GXSYQhEEgz357bDNoViy3lkFOiLv/h56rUm07dvcvPm
      Tabnl7bDLoViW+jKB7CbZY4feY/FlsnnvvgFiqnNn71VPoDiadDdbVJPvI2b2smhA0Xe+sHj
      3SZVoXiW6SoMKnwfMxAkHNIQarZW8RzRXRjUaXLknbdZaBh8/ktfpJDc/CPh1BBI8TTo7lSI
      1Y9s5ZIFJQDF06A7H+DYT7hZamy1LQrFttOVAJKJEG99+9ucOneOK5PTW22TQrFtdCUAPRij
      mDKZuTPNzMLyVtukUGwbXQlAuDazN8fZ88lfwrStrbZJodg2uhLA7N1Z3nz9RZqWzezczFbb
      pFBsG10J4MWXXuP6zVl++pffYPiFQ1ttk0KxbXQ1ERaKJsgVhwl5YfaMFrbaJoVi2+iqBzhz
      7Cdk9xzmc2/u5gff//FW26RQbBuP7AGuXzjOnYUmYXEbP6YTDKrJKsXzwyMFoGkaw7s+OA36
      xZcObqlBCsV28sgh0N6XP0FSLHHs+EnOnDnD+I0722GXQrEtdOUEG5E0v/Hb/4JCIoBuBrfa
      JoVi2+hKAFZlnrdPT5CIBEgO7ec3v/zprbZLodgWuhJAIJ7lC1/+HIVEACOozvJUPD90JYCw
      qfPO330fQ9dJDR/kt/7+Z7baLoViW+hqHiCazDLQ30+hUCCbSjx2Jr5d5Vv/58+4U2oxd+MM
      Cw2Yunqa6zPlx05LodhMuuoB4uk8Y2MBEBaXbi0+Xg7SZ/zcOPteOoBAIqWgXZ1luhbhFw5k
      nsRmhWLT6EoArXqZubm7ID0qtcdbDVqaukYrlCXmLFJvNEnZLY6dO86hz/0yOuD7PkIIhBA4
      jvMkZVAonpjufIBoglzOBTRe+cS+x8ogEEkSq5Upza+gG1X6YlG+8A9+jdtnjrCS+izZqIlh
      GGpLpOKp8Mg9wd//869z9lYVAM+xMAde4d/+m3/82BlVluaQkRyGVUJLDhFyK9ytOIwOFdTp
      0IqnRleb4h2rxtkT7zMxs8yulw/z6Vf2bLohSgCKp8EjBXDix9/izG2LNz75KfbvHCYYMAmH
      Nn82WAlA8TR4pA+wvLREq2bx7o++y7tAZuxV/uVvfmkbTFMotp6uhkDbgeoBFE+DribCFIrn
      FSUARU+jBKDoaZQAFD2NEoCip1ECUPQ0SgCKnkYJQNHTKAEoeholAEVPowSg6GmUABQ9jRKA
      oqdRAlD0NF3tCVYofh6ZmZlhYmLiIz+jBKB4bnFdl2azCcDE9AInx28hkfSl4nz6lT0kYxG1
      IUbxfOO4Hm8ducBbRy8gpUTTNDzPJ5WI8sU3DyoBKJ5PpJRMzS/zP7/zLneXyui6vuF9IaQa
      AimePzzf560jF/j+kfNIyYbKD50bvxiGpgSgeH6QUjJbKvOnf/set+8uYdxX8X0hKNVbtD2P
      bCRMLBzE0PWtF4DXbnDp4kUqLZedB14h4S+jZXejVW9TEWnGBtJbbYKiB3A9nx8fv8Tf/Ows
      Qsh1lb/WalMRgv5d/UQjIUqlKjPLVQzX33ofwHUs2q5GRKvz/qUSO9Mt9MJBJs6f5/BnP03Y
      0DqfUz6A4gm5u1ThT//2PSZnFze0+nPVBvFimnwxu+49KSVt29keJ9hurHDm3GXGXjyEO3OK
      9y7N88kv/xq7c5F1h+NqmrbVpiieIzxf8M6Za/z1T88ghFj3Xrlp0TR1RsYGCAY/fKCz5QLw
      rArHz13n1ddfJx4OMHv9FDKzi4nx6/zC5z9JUFc9wPPAV7/6VWZmZu79LkSnWkk6z7qm8fu/
      //v09fV97LyklKzUmvzxX7/DjekFdE1D0zSklLiez1y9RW4kT6Yvif6IRnXLBbB05wonLk8T
      i4bIjewlb1Yxcgcx67eZaYZ4YdeAOhz3OcIXgm/96AQ/OXEZTdOwXRdN0xgpZBkbzLFvRz8j
      xT4K2SSRUOCxe33fF/z09FX+749PIFbj+mv5Ljct3EiQHWMDGMbGsGfD9Wj7PhFDJ2yamLqu
      5gEUm4fn+3zrxyd5++QVXN/HNPR1424hJJ7vo+sayViEfCbB3tF+dg8X2DfaTywS+sj0lysN
      vvH9I1ycmME0jXt/b7YdSo5N/2iRVCq+4TrH81l0HdIDWWKxEI1mm1ajjd1sKwEoNgfX8/jf
      3z3C8UuTVCybdsjEFxK32SakaSRDQaLBwLqWea3qOa6PlJJcOs7ukSJ7RwrsGiqQyySIR8II
      KTh2YYJv/r/38fwPfEXP91lstAhkEgwN5zf0Jp4QLDkOZjrK2Ehh3XzAWt5KAIqPje24/O/v
      HeXk+CTLzTahfIp8sXP7KyklrZZNtdqgVWvitmxihkFfIoppGBvSEm6b8sQpNE0jn0mQScTw
      heD23BJr9VsPxfCye6nrMDBaJBYLr0tDSslSu42IhxkazhENf3jPogSg+Fi0bZc/+qu3uTQ5
      Q6lpkRrOkUrFabgupqYTMo17jmhn+YGg3myzUqrQrrcIo5EKhwgHTUzD6LTMwv/Q/FzP527T
      IjOUJ5dPr2v1O+N8l5qhMThSIBkPP9LHUAJQPDFNy+a/f/unXJqYYaFlMbB7iEgkyIJjk+zP
      4Ho+jUoTo+2SDgUJmxvDka1Wm2q1SaPawLccorpOOhoh9EDoUkpJqd7EDQcY3tFPMLi+rliu
      R1n6pPszFPpS6Hp3zrUSgOKJaFo2X/vmD5mYXmTethnZPQimwQqC0V0DRMKdm6gIIWk7LotL
      FRorDSICUsEAAV3f0Hr7vqBl2awsVWhVWwSlJB0Jo+saJcumuKNIKhVbd50nBCXbJpxPMlTM
      rnOOu0EJQPHY1JoWX/uLH3Ftap6qJhnZPUjD8xCpKMPDeUzj4RsNpZTUmhbLy3XsWougJ8mE
      g5gPWawG0LYdyit1PM9jcDC/zoEWUrLUtiEZZng4Tzj4ZHVHCWCbaLVaG2YrHyQajT505eKz
      RLVh8Z+/8RY3ZktYIZOh0SJLrkNqqI98X7LruL7vCxqWTWmxQrvWIqHpJIOBe5NaH4aUkprj
      0jA1hkYLJGKPHud/FEoA28TXv/51lpeXkVIyMb2ALyRCSqSQDBezpOIRfu/3fo94fGMc+1lh
      qVLnD//8h9yYKyESEfr6s6xogpFdA0TDT37fOCklS5UG5eUaftMmhkYiGMTQ1w+RWp5HVQr6
      hvrIZ5OPlYeQkrrn4khBUNMxNZ2gmgjbPqSU3J5b4ls/PsmNqXl0Xbu3KSMcDrKjv49DB8Z4
      4+AYyVj4mesJFldqfPUvfsj49DzxgT5CySjtWJCR0QKBxxx3fxSO61Gtt1hZquE1LLKBIAFD
      p2Q7JPvTFPPprsf5UnYWYlRcB4KS/lSYSMDA8QVNx8NytmE1aLc8rwKQUjJXqvDdd8/x/qVJ
      gqaBpmk4rodp6Osquuf5eL5g51CeV/eN8PKeEUb7swQeEj3ZTmYWV/jqn/+QawvLZEcKOGGT
      SH+awUJmS/P1fMHichWr7TA6mHssoTlC0BAORlBjKB0hEXp43VIC2EKals233z7N0Qs38Dwf
      XddxPZ/Zah0zHkH4ArvVJiQhEQmRjkXuLeryhQA0cqk4B3YO8MmXdrNvtH/DGpetZmp+mf/y
      zR9xeX6J/Fg/zZDB4M5+kvHIR17X9n0Cuo6xzSt8HSEoezaJuEkxESL+COf4uRPA9PQ0X/va
      1/B9wcJKFc8X6JqG5wui4SC5TIID+/fzu7/7u5tg9cNptNq8feoK3333HJLOSsi247LUakM0
      xOhY/7pu3PMFKys1atUGbssmICGk68SCAULBzqIt23EJBgK8um+EQwfG2DtaJJuMdx3vfhIm
      phf4T994i+lGi8KuAaxYkF07Ny40W0NISdP3sHWfVNzE9gRW20f3NcKaSdjQMbTNF7CUkpbv
      Y2ku8ZjJaCr6SGd6jedOALWGxbGLExy7MMFsqQwSDKPT8gZMg5FilkMHxjj84k5y6cQmWP4B
      Qgh+dvY63z9ynpVqE9PQcTyP+VqTQCpGcTB3Lz7edFxMvTNT+iCu59Fq2jQaLayGhWs56J5P
      LBggFTaxKwtEQgHGBnMcOjC2wQFNpVK8/vrrH6ssV2/f5Q//4ofM2TbRwSyxwQz9heyHCq7q
      OnimTz4ZJhcL3Wv5pZRYnk+17VKzXFptn4A0SJmBDw1/dotcdWxtwyeXCJGPhQg8Zg/5XAig
      0Wpz9fZd3jt3nYsTM+i6hq5p+EJiOS626xEPBwkFOmNpsTrpMjrQx+GDu3j9wCiFTPKxJ1HW
      8HyfCzem+cufnGJhpYqh69iux1KrjRYLMzxaIBAw8YSk5rq0TI1kNoHwBVbbwW07GL7AkBBA
      I2IYGLpGQNfRNQ0JCF9QrTdprlShPEu92sSQkngoSNAwMAwdKSSO55HJZPjSF7/AYD5DIZMg
      FY8QDYcIhwIEVn2Qj2J8coZ//yffoxEyCA72MbCzSDIe2XCdLyUN38UzfAYzETLh4CNDmBJo
      uB6lhk3D8tB9jYhmEtL1rgXhS0HD9/AMQX86TDYSfOS6/w/j51YAQkgmZxc5slrpy7UmAdNA
      SEm5YVF3XYxIiHgmTigUoFZpYNctTF+QiUaIrbaanuej6RpD+QyHDoxx6MAOhgqZrmPL16fm
      +c5Pz3D19l0CpoHteiw2WpjJKMXBPiLhEC3XZcV1Caai9OVSZJKxDelIKWk7Hm3bwbZdmpaN
      33bxHA/hegQEBHWdiGkQCZid4UazTbNh0WpYCM9H+j6+54Mn0GXn3MuAoRMJBehLxkknosSj
      YfKZBMVskr5UnEI2SS6dIBmLoOsa567d4Q/+7C1a8RDR0TyjO4uEHvhehJRUPAc9CIVkiL7o
      Ry9j/igs16Nqu1RbLm1bYAidhGESfMhCOV9Kyq5NIKJRTIRJhx9/P8GD/FwJwBeC5UqD45cm
      OXr+BqVyHU3XcH2fqmXT9HwCsTCZXIpkMopEwxY+rpDETBNT03Bdj6VShVqlTtATpMIhoqEA
      hq4jVsOSxWySN1/YyeEXd1HMJgkGNq5LmStV+M47Zzhz9Q6GruF4PqVGCy0RYXA4jxkwqbsu
      DSTJfIpiLrUhnUchpURKEFLcmzhqNtu02w625aC5PqYEAzB1DVPTMNBASpBg2y5t28GzXTzH
      xXU8XNtFEwITjbC1SKi1gI6GrmsYmoYrBC4QCgfRdY3sJz5F6qWXAfCkoO65EJIMp6Mkguam
      bWOVUiIkWJ5HqWlTb3lovkZEMzA0nYZwCUV0htMRIl30Yt3ycyGApmVz7todjl6Y4MbUPL6Q
      tF2PqtXGNw0C8TDpbBIzFMTyfWwNjLCJGQmRiEcwTYNavYXdaCPaLlFNIxEMIHxBuVynXq4j
      2g4x3SAdixAwDTy/s095MJ/h1b0jHDq4g52DeSr1Ft8/coF3z15D0lmdWGq00BMR+ofy6KbB
      iuOgxUJk8ymy6fgTd8/dYLselu3iez6+3wmjep5/7yF9Ab5ECoEUnWchBNIXuLaLb3v4bufh
      Oh6JYoadL4ySuW/NjScEVd8hGNEYSH54SHHTy+b5VNoObU9QjIcJb+J8wxrPjAAcx8GyrHV/
      m1+u8s7pq5y9NoXjurR8qFoOjqkTy8QJJ6P4ho5r6oRiIaLxCJlkjGDAfOhYd23PaKNlU6k0
      aNaamK4gYZoENI12q83KUhW73iKmG0StBfzKHADBgEksHMLxPFqWjS8lumEgB/eQ2r0f39Co
      CJ9YNkExnyb8Idv9pJR4UtLyPQAMTSOg6fdEogGaBhra6uvNa2E7vYlcff3BTLTn+ziej+v5
      ZBIxQkGzE4qVkorvbEnL+6zwzAigVqvx7/7Df+TO3c5yAdMwcDyPpu0QjoURuk59x6vEC1lC
      sRCBaKd1TyWi95zbh+EKgS8loQdWH67huB4r1Sb1WhOvZaO7PlHdQDoelZXaPb8hGQqSiISw
      PZ+lpoUeD5Mb6KOlSfyQSTqfJp9NrNsCuIZYrfCW9NFNiIR1UuEAoOELgSdk5+F3XvtCIgUg
      V0czq8MDKegMV+gMdXStE2LV1l7TGcboq48nxfZ96tIlEtUZTkW3pOV9VtjyKUYpBTMTl5mr
      a7z2ykHc2iJavB/DWaFsGQzkU53PaQa1xF4Eg1Qtm4YUOJEgif4M8UKaZCbO7niUYMDENDYu
      pRV0nKSW31nv4WuSYEAjEjYxdCjbLrYjMKVO1DAJ6wY6nZa9P5eiP5dCCIHteFTqLerVJlpA
      I5lLEpYarXqLO5U6gVCQzK5+moaGlYow0J8hGgmtq3BrrWfdd7HxiYQNUokAw5EIIUPvunKu
      RU3Eamst7hODLyWOL/CEwPUFQnSiI57ovC/kqpCkxBdrLT9w30NHu9fb6HSePU2QjJvsS8Yf
      GqJ93thyATQW7zBnRTjQLzh/fZohs4QR6OPO2Ysc+MRn733OFYKzrQaxYoricI7d6QSZZHRD
      iyqkpC18XCFwEEhNohsaZkAjGjAohkIkQp315g/D8jwqlkvddnEcgfAkptQJaQZhwyASDhIJ
      BxnIp5ESWrbDSrkOtRDxvjgYOkY2wf5CZt2yX18KLN+nLX00EyIRg8FomNQTnHywhqZ1hkFb
      5UNIudrzSIm32lPGA+bHjs//PLHlQ6CZyXG05BhDWcmJM1MUw0ucuFHhlU99nv2DHxyLWLXa
      /MGFcQzD6PT7dBqqlu9h+T4eojN8CBqEgwbxoEnYNAiaOmaXs34PIqXEFQLL9anZHk3bo2V3
      Zi4jukHcDLCWqqZpnRMN7svLl5Kq5+BogljYIB0Nkgx17HrexsrPOpJO5Ov+3x3p40qBkD4C
      gYGPpq3VLQ0pt6EHMDQNy3MRrsDXNcxQlDfeHGVuZo49A2lWT0ZEIikLF026oEs0A8IBg3jI
      ZCgU3hIHTNM0goZB0DBI3Teb6gpBxXKotl0s2wcf9NVeQkpBW/pgSmIRkx3xKIkn3Izx805n
      6Lk6PEN2fqRE0Klwq278Bz/ammvPuue1Xu5Rjr+QEl+Ke3n50kci0BBomkTHx9QFQQ1COvTp
      GhEdwoZOSDfoBIzXs/Unw7XK/OzoKZCw4+XDhGsTGINv4s2eoxwo8tLqwVh1u80f3b1B0Oh+
      RnC7WOslGo6HqWskQgEiTzA+7kSABD6dLxK494XfPw7XtNXX91WY7UZIiSt9PCkQUrD2oyMw
      NEFAh4AGhgZBTRLQJUFNI6jrmKt/7/gvHzyv+WmdR+e1Bwiprb6v3fc5Vn2djj0BHYIaBHRJ
      SIewrhHUNUwNAlpnDuRJhorbEAXqTC6tLQpbzZa1Q/PWxrl1u83/Kk3e68rkfdfff8ievK8F
      kJ2ODO3+vk9b+73zrGud11Jq931aX81gdb3K6hVr1fCDSrjWgt1LfJ1Ngk7l6LjgH+SLBtpq
      ZdE1ialx7xHQNQJap/Kw1n6tfunrK4vk/gok73sWqxaI1W58M79AY9W2gK4R1CCsQ0jXOksV
      tI1y3Oxe+SOr40Py/7hsw0Jz7UMWUD1YGAHMo2urcXBNYqBhrLYmhtZ5rd8L+XHf8/r36OLf
      tBY5EvdFkNYq4QcVUuLDuhZLQ7tXkc01u/jAxidtiZ4d5ENf+6v/C7ivkmoSTayJfq3RWbtO
      bnpl3VSlr/LU5wHWTocG8KT32NcLKTelwgkhNm0X1rOYlhBy05ZOP8ymJ/0KhC/QN2GPgxAC
      XdO7afvW8dQF8HHoHKXhY27CjinP8zCMzXG0N2tp9/Nevs1M60nL93MvANiccehmp/Us2rSZ
      aW3mEo2nWb5nKtziOy1uXL3CwkoDgHZjhStXrtFyBSCYu32DqxN38MQHhb2/wPWVeapWZ6Ta
      KC9y+fI1Ws7q8MpusLBUATrnT05ev8Kt6QXE2nD2vrSk9Jmf7yy6Qwrmpya5cXu2c5KDZ3Pz
      xlVuTs0jJNiNcsdG54Pj/O63yXct5hdX7r2euHaFu8u1TvnqK1wZH2ex0rmXLVIwOzWF5foP
      LV+zvECl1RkmtqpLXL58lYbtAZLlu3cYv3IDy/FX87nMnbtL94bN68snWFyYx/U75VucucX1
      m9N4QmI3q1y7PM7N6U752o0yV8bHWSg3Hlo+4bWZW1i693+9ef0Ks6UqAOXFGcbvK59VW2L8
      8hWqTeehabWqJcqr77Xry1y+fJWa5a7+byTzM1M0bA/hdb6/27OlDymfpLRwF8cTICVLc3e4
      NnkHV0jcdp0rFy9ycfwK9bb3DAlA+pw/fYZQKsON88dZbtqcOXWWdDrC8eNnWZq8yJ2mQYIV
      To3PbLh8eXaSM+//jJtLNnh1Tp6doC8T5sixk7itMieOn+T8jVsA3J25QyCepXZ3ktmVxoa0
      blw8w3snTuN4koVbV5htgFad5vzNBRZm7qBH07QWbzFVqnL61BlS6SjHT5zb4KP5Vo1TJ09x
      9up1kIJLZ05jJLLcvniChbrL7TtTZAsFrpw+hQ3US1Mcff/UvUpwP5X5W5x+/6r7tR0AAAa+
      SURBVGfcWLTAb3DizDX6MlGOHj2JVVtmoe6RS8Lpc9e5evYkIpqlPHWF6VJzQ1o3L5/lyPGT
      tBzB0vQN7pRdAtY8Z6/P0mo2SPYVsBZvMjlX4c7tO2QLBa6ePk37wfK1G5w+dZaz41cAuHLu
      NDKaYfbKSWarNk3LoVjMM378BC1rhVOXblHIZ/H9jb5efXGKU8fe5drdOvhNjp+6Ql82zrFj
      JxBAuzrH0fdPsVBucePcKZxQmsbda9y8W9+Q1u1r5zh64iS1tqBy9yaTCy3C7gqnL9+mvHAH
      O5BmcKCfkKk/SwIQOMKgkC8w3JekVJ7BjIwyMDBKzvCQ8QReo8py1SKZjG64vG9oN4de3NX5
      xWuiR/vIF4eJ2Q3saIZPHj5ELNgp7tDO/Qz2xbB97d7GmPvZ98phdhQ7a5Salk0+X2Bs307K
      swsMjO1jJJ+g7UniEQsjNMLgwAh5w6P1QDpGJMnhw4dJhDr52r5GMZ9ntL+PpeUKB156laju
      YsaSGG6L8cklXtq/46F+XLp/J2++vKfzntdCC2fIF4dIOC3cZI6De3fiNJukMini8Ti1lWXa
      fmct1IPsfvENdg1mAWi122T78ozu2UltfpFUNodVW6Ta1simoux/6VWiuocZT2wIGRrhOG9+
      4hMkw53ytVxJsZBnbKRIaX6FfDbN/NwswWyO6vQULbvF5ctXqTTtDTYlCqMcfnV/Z2LUb6OF
      0+QLg6TdNjWvzfkrs7y2Wv5YIk69vEzLhWhko/+w88Dr7B3OAWDZbdLZPMO7xmgtLuG0LeZn
      bnL1xi1csS1h0C7RTQ7sHeL0sSO0Wy1Gczmk7AwFhJQ0GxaJdJpMIEip0QA+4lY74QKjqXmO
      HD1Ore1vULldL3Hy/AQHXn2NTOyjD3Qa3bOPi+cuMCddhJbFbixz8uxVDrx6iL5Em4nVCS3x
      KFdK0ziwbwdn3z+CY1v07xuldOcaE0seh954hVvnf8bcisvMrQVijQADn3nlw9MK5dnZN897
      R9+nZrkY0ufy6ePofWO8sKOfa+dmSOeK2KKJZTmQ+PAdW0Nje7h0/iInphw8EmiaQTKZpV6p
      UWtYyPItbiw4HHrj1UdWloMHdnHhxFE8t016pIgeCJHJZKncnKGdiDE4dpAXRxIcPXGJXQOH
      PzyhYJbd+XneO3KMasMmcfUsU4tl5mcqeJk2L+Ugnckh9DaW1YZ0+EOTKgzvYunCBY7POThE
      GNz3BsP7YfH2OBO3FjG+8pWvfOUR5doWLFfDaVYxQmHarmT/3hdYvHOeRttixQmQD3osWwJT
      2DTdAMP92fuullSXFpi6PcHdhkYuncK26kRCJloix1AywNTUFLdm5kmk0kxeOE2kMAR2m3As
      /sBGasHc1G0mb93CCEaJhII4Avx2i6G9+5m+dJJg3zCaYxGK5liavki9bbFkm+wZLq5rvd12
      g+mpKW7dmSaeymFIFyMYxmq77N+/g2PvnmDH2BBWy2HHwZd5cd9ugtJjdO8BEuHAuvLVVhaZ
      vjXBTFWSyyRxrAbhcABiWfrcEpeXJIVEAE/q1BZnEYEw7VqVULpAJh5eV7756TtM3rqJNMLE
      ohEcz0c6bfp37cVenqXa9nGsOlokxvjZi4yODdNq2cRTiXWNiWc3mZ6e5uat28RTfQQ0HwIh
      LMtm38Expm7cQuoa1eUVdhzYx43xKwivha0lGO5f34A1yiWmb08yU3bpy6RwrCaRcAARS/PG
      a4d48cBe4gFJYWQP9vIsrhHGaVQx4zn6kpF15VuYmeLWrZs4BEnE453bNHkOudFdOEvTzC5V
      WJyfJzs49OxEgdoeaE6NpZU6qVyBeDiA226wuFwjV+wnZMBKaYG2MCkUcpjrYtqSenmZSqOz
      oSbVV0RaFRqOpFgsIJ0mC6UyEghGE4SkTd1yAJ1cf5HIuv0EgsW5OWxfoukG+UKeytIieihB
      LpOgtlKi1rIBnb5ikYCwWVyudmw01/c1nt1iobSMkBCIxMnGApSWKyT7CiQiOvMz87hSopth
      +gfyGIBttdCD4QdEKWlUVijXO4OsZLaA5tSoW4JCMY90WiwudcoXSWTIxAKUSiWMcJJcJvlA
      jF5QunuXtifQNJ18sUh1eRECMXLZJF67SWm5ghmOke9LUJqdx5ES3QjRP1hYt5rGcywWFpcQ
      EsxwjL5EiNJSmUQ2TzIaXP1O2iQzOVLxMO1GheVam3yhQPCB/1WrtsJyteOvJDI5TK9JteWt
      +6xjW0g9SEDzKS2W0EJxctkU+gPlW16Y7wQlNI18oZ/6yiLCjJLvSyM9u/O/iSTJZWL8fwog
      LnAB1BJVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='38' name='Back' width='111'>
      iVBORw0KGgoAAAANSUhEUgAAAG8AAAAmCAYAAADKksXEAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEQElEQVR4nO2bbUiVVxzAf3kvOjXRlS/5mrq5m1Y4dZm74qa1xGCYU4rN0ujFDTazZcPK
      sPSDY32xIkKwUnC+rMJgsSCyuzZldudauSHM22UX614ldTBFNyfodR/UnI86uWbagfP79pzz
      Py/P87vnfw4Pz102Ojo6ikRI7JZ6ApL5I+UJjJQnMGplgclkWop5SOaBXHkCI+UJjJQnMNP2
      PCUmB4/FmIdkHsiVJzBSnsBIeQIj5QmMlCcwUp7ASHkCI+UJjJQnMFKewMz5emxpaeLytuM8
      UJTau3qz6vXtbN2bTJCbauamxot88Vk1vZ47yb6wH79ZRrD2/oq+vIzv7xno+2sYlbMHvm+8
      x+ZdO9B4jvXdU5dFDSc4mOavaN3P/eJUdD5nOLRn7aI/zBdcHkAimV8fI+zp9QhDfY9oqyzi
      4kEL+8oPEDyDP4teh2tWMZE3ztFq3I9fyPQY6+PrVBSU0r8xj32X3sLTUYV1sIuOpmp+aO5E
      865S1lR6b56krmc3OUcXXxwImTZVOLgGE34gnzj769xvmSnGQGuDB+ExWtbFqWnRG2aIMdNQ
      co7B5FJyPk7A03HsF2Dn6IX/5lzen0McHVeoKh9kS+4HeM2y+J83AsqbwImXnIcZGZmhythI
      i3sCYe7g8+YmVA2NWBQh1uYq6ofSSU0LtP0hjLTz3ekKSM8nPmCJzCGyvD8e8LAzgtXB06ss
      eh2usbG4AQS9wwZnHa3GqTEPf/wW94QEfGweeISuumLqX85lb8ocq/M5I5y84YFOzLoSzuRU
      s+LTAqLdlRETKdNz/NqftXHLp6XOJ78P4xMYaPP4VmMFlTeC2ZmzBaf53MACIpw8tb0LTv6R
      hIWqMTXdo0+RNi1fFvI4rRDtf6R6pJ0g5udCbipW33z4588ehp69mwVBgNOmAnsXVr4WT2JB
      FO7FqVytj+LDpBXjlQZaG55g6k7jaOn0pm56A0khGgBWvaLmF7MZom1LfU7ReWSZszlfVMsn
      p5busAIiynuKC/5rArnS1gZJ2rEiYyMtXoc4fiEZF2V4Ry1nCxuxZGjwA4LCtXTX3qYzbY+N
      +54Kr5QjbLqbRWVNJIczNEuWvoRLm5P8TYexHW//yZVj0etwjYmZLg7AdwOh6smDi0NsOnHU
      cK2uHautQ6sCiT9ZRMDtfK42989z/s+OkPKGB0z8VnGEaz+tZ+PbE/IMtDYsJzTCc5ZWrxKm
      ZfLgotKQeCwL1eXDVNTcpXtwbPO0DnZh1pXw1Tfm/5+Ei5aUnBiMp/Jo6FiQ27IZAdLmLSq3
      3ZpSonL2wHfdVraXZrJ+/GBibbtDi1pLpu/sPflFaBk6e4dH6RpWq8AuYAcfla1BX15G2e58
      BoYm+47JWDnnzByicslKz+b86SpCPt+Ft/2z3KftLFP+xUv5ubv89O/FRci0KRlDyhMYKU9g
      pDyBkfIERsoTmH8B5Ecz06xpONsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Box plot' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Choropleth Map' width='192'>
      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
      /j+vnRY5v8m8swAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      jP6hUdbnbCVR5UlF4RUSE5O4WnCNsbExhkdH0Wi0XG9oITUl5a7a+UuBIAjk5OQsaKm5E7U6
      jDdf/zI6nY78ggIsFgsmoxEnuZy4xCTeeustPDw8WLduHTEx8x1js0nyhYWFnD5/kZDQMBQK
      BXGZ2VgtFgqvXiIgOBSmJ/jCkX2Affaora11JLo/Kku+B5BKpbS0tHxmEkQeBpvNxm9+8xu2
      7tyzYAd4++c/o1XTzoUL52lpsdva3T3szhtB6sSVvKsMjowxPD6Ff1gUOpuM7bv38+vf/n65
      H+WuVFRUoNVq5xyz2WxMT0/j4+3N9//Hf6emuorXXvkCDXU1pKWlExQUtGDjvx1PLy8iIqNI
      TEpG6eaCcWYasUTC+s07CYuIQS6xf6darZbGxsaH9vouxLIsNO+MKPysUVZWjqenyjFi3cnl
      y5fJyt7Etfw8RGIx7h5K1qTZlQoMBgMWm8DuA4fp7upk3GBg5/5bldXTstYvGB06ONDPe796
      h/TUZLKyslY8erSyshJN/xgnz1zgr7/3F47jDQ0NxMfHc62oiM+/8ioJCYkIAqxJScbV1ZXT
      p0/f9bpms5kWTQdbttsVO3rHDAQsIDuv1Wpxc3MjJSVl3muPwqof4D4YHBygtbUFT0/PeW53
      m83GxJSeRF9fduzchdls5ve/+TUGvZ7sjZtwdnZ2xN8EBc+PuQcWbNwSiYR/eft9Pjn+H2h7
      h7GZpkmIjVowaG05UKvVlFTWEBV+K5bIaDQSGxuLzWZDb5gme2MiNpsNXz8/WlpacHd3v+fo
      39nZSUnRNSbHx5BIJIyPTDEzPe2IzAUYGBlDoVAsGJn6qDySFWj2rSs9Oq00/+/f/h37Dz7D
      5NQkA329bN++nfq6Ojq7e9DrdBhtYrbv2X/vCy3A7KbaarXyu/feJiEuFieJCDc3N7IyMx3y
      4ytNdU0NNkHMudOf4OHhwaFDBykqKmLnzrsXLv/tb39LXf0N/vzP/tThL7l05Sq9U1YSMzbQ
      392Bl2hqntL04+KR9gBm88Lai4sx675+mtDpdIyMDKPX67GYjGzfvh2AhMRENmTbPcCSRzAG
      zFqURCIRB599iTXrtxCfmUNw7BouFpZRf6Nhzvl3an0uF8lJSVwvLyM9PY1t27bS09PjSCi6
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Gender distribution of participant over the year' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Geospatial (2)' width='192'>
      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
      o4eKkXkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Medals by Athletes' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Medals by Countries' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Medals by Disciplines' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Medals by Events' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Medals by Gender ' width='192'>
      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
      9cQwc6urAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Medals by Summer' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Most Medals Disciplines' width='192'>
      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
      XQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='39' name='Next' width='111'>
      iVBORw0KGgoAAAANSUhEUgAAAG8AAAAnCAYAAAABzhZhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADG0lEQVR4nO2ba0hTYRiAn3YEKRCC0qA00pIgFDRk2azQYDoCMQySrTRHUd5AUbqA0Z8y
      SqGbdL9od0ztwoqCClfUKskstKuxgogo+xFERT+29aOLc14qXW0vfM/P9/14946H7z3fOZwz
      wuPxeFCIRBfoBhRDR8kTjJInmBDfgNPpDEQfiiGgdp5glDzBKHmC6XPN88UZGv4/+lAMAbXz
      BKPkCUbJE4ySJxglTzBKnmCUPMEoeYJR8gSj5Anmt4/HAouDhqxK2kNSWFi/gelhvvlX2Mvy
      eGtpIUffE320LY0jLQOUjF5OxTYzbYVGnmccomR+VN81X+7QVFCNq7ienAnn2V60jzeD9jkF
      0679pE74m/82fIJcHkA6JouTq2efkpA79Y9HRWJlb6F9qpbn0LFmK7dnbSF5rHfGhfNoNU8S
      KyjXhwFmSs+ZvfIOGrLqGBcAWb6IGJsR86xMvLKX1vf+q6mLtWKe341t72U+e8XdXXU030wi
      e6mBUf77uX+CCHmMNJBhhitNbbj9VlQj0lKB/lktttYf+lwvse+8yMTiEqb1GdHBhwx5wGhj
      HvG39nD9tR+LaglkrjTStfMgThd02zbjiCwlUy/AHILkoSVgtI7jRqODr34sq4srwpJip7m2
      hjNnxpO1Yk7Qj8ufCDiw9DBqdi5JDRu49sJAevTga9ur0mjvL5FWxaYyg1dAI8a8jDGLq/mU
      f4x4GZsOECYPbSqm3Ruxl+VyqbgeU+zAS3932vyJu7OWjTVgOd1CmK2QdVXZrKk0ith9csbm
      L6KYaZnG3cMX+DDcUq772GrsxK8sIkaD8MzVpHZX02j/6I9G/zkC5UGofilzXQdoeeAaRhUX
      zoPr6UhahSlO+x7SJpFanMO72s3cE+BPpDyIIHmRkYd1J3k7xAruzl2cuJlEdv4MQr3iulgr
      CzIe07yj9/1fMCLrmueFLi6feeHZnGqFxH7yAx5Yfjweu1FzmckrjvdzP6cRk7uKxIK1NNqT
      WZIavCeYEb6fePm+7q5e/QtehI5NBSh5olHyBKPkCUbJE4ySJxglTzDfAFinzhtwwaHGAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='86' name='Overall' width='192'>
      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
      AyDVfgAcl5l3WgGX+AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Participants' width='192'>
      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
      VQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
    </thumbnail>
    <thumbnail height='115' name='Top Perfoming Country' width='192'>
      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
    </thumbnail>
    <thumbnail height='130' name='Total Agegroup' width='144'>
      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
      qhEepgroxf8HkjhLsOm1FY8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='88' name='Total Gender' width='164'>
      iVBORw0KGgoAAAANSUhEUgAAAKQAAABYCAYAAAB75VwjAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAQOElEQVR4nO2de1hU1d7HPwYliQLKyVCU5CIhYDAMF8WjpUlmviia2qnsFfUEb0SvmOgJ
      PSb5Zlp5ATMNCrNSHzGPGZqklnctBWZAVAZF8ZKGFQkqF2vI949BLjN7mBkM2PSsz/PwPLD3
      b/9+e+DL+q219lr71+H27du3EQhkwj1tfQMCQUOEIAWyQghSICuEIAWyQghSICuEIAWyQghS
      ICusTRlkZ2e3xn0IBAB0EBPj7Yvs7Gx8fPa39W20GCJlC2SFEKRAVghBCmTFXQoyl7ToNHIb
      HCnJXEB0dDwbNDWG1mnRpOU2OkB0dHTdV0zcv1j02SEuVUhEanRtMVsSlrCvXOqeaji1Lp5V
      R6uN3qP5cSWubfA5F2SWSJzRsGFGNNEJWyiWur3cNKLTpDz+WWgpzshk/IBEHDvF08kxkQGR
      33PyVmOrsuwDRCrn0alTPD2U61mZXWXCbRlfzXqfPo46n8NnneQHbTNsALQ3ObryUx5x3MxO
      vVMt0kIGRzzO+e0H+dUs45dISUkhJSWF5IWv8JRdNsnz08iVEGU9riiCSslWSyiyphBVrhtK
      P5sWiGsGGhUq30hecM5CLanIluXY/CWMSb+P6M/mcLVyCZVXXmWpp4rhLx3n5h2js4eZGH4C
      /zXzuF75DkVrnMkI/5gPzhr3u2fW+7xaNYTvr+h8/m/VVh6fdbreJ7fMsPmDX44e4PmAJcy+
      0ImHJP4HWiZl9xjKU11380VutWnbBtxr2wu/Ma/wekQVaR9/R1PacFUEUZqtxkCSZ3LJdVNi
      So/NjWsKjUpFP2UwgUpnstpAkY7PT0W1/nHC+t6nm9PraMegOcN4euNpDgPwBwdT9+H03hTi
      /O7Dmnuw9XuMTe/ZsTz1LFINGsCyw0GkJ/XHqaPO5+ikSCYf3kf6lVqDK2rTNhTxwQqI2fVv
      9r/ry0MScVqoD2mD/9hh/JKxF6mk1jRW2P19FEMvHyZLMiXX4qogqPQEp/Q0r1Fl0UfhhwV6
      tCxuk2hQqfqh7G+FjUKJs+o4F5vrqpm4e3Y3nFwuq6TU044HAfiRgzsfYvST9zcycXjSl5Cd
      ZzlhxO8PET74N3Rs7cxTEWXsP6LrC9w8UmTSBjz59/ohDHIyPv3dcoOabo8xxmMfW45a1krq
      cMXN4wxnm2xgXPHuf5YcdUP/xZzKd0epsFyO5sdtAo0KVT8l/a0AGwVKpyzUra1Ifcou8dbE
      XTi+PRh/AG5wpdyBnp317Drb07v8OleNuHHrZW9wrGcvRy6V3ADgask1kzbm0IKjbCu8nhxJ
      5Y4dFBuOb0zi1NPZpI1XQBBnc9TUSbJYTZazkmbr0cy4xtCl6/5YAWCDt68DWW2myD/4ZW8m
      j/pvpiIhlqQRDVrEPnday4Z0oUcf4956PqivYOj+oL3FNqZo2WmfboN52i+Pr45Z3isruXLZ
      tJFXAEHn1eTVKrJYnYWzUtGMdG1hXEk0qFRu+HpZ1R2xVwTikKVu9bSN9iZ75yYTmAiJ2dNZ
      OLRz4zR+XqolvMGP5427vHL1psGxn66WW2xjCpPPsu8OK1xHPAkLvkQT/JwF1xVzrqgv7uNN
      2XkREPARe/KqCQn5ieMqZ5T/vhs5mhtXAo2KrBt57J8ezZpGJx5AfXEMLi53cVsWUcXOuJUs
      7fk8uft742Bwvgs97cu4chNo2KDdLOeSvVTLqePcD+V6F8CVH0rp7dkFgAedunLudNM25tDy
      E+O2AxkdWsj2g2ZNAgFQkbObI70HM8CM1r6vvz/nTmiouagmy8EX77vQo2FcV9z7FnGmSL/P
      UUHR6Wt4uDrVHdGosnCPTK6bSrrztWhil1ZN22Wb/8MsItg0R0qMAD0YPOICGV83nnMp+/oE
      R0e442vEb6+tJ8ltOATXXmbHVgceDe0IQOdQD5M25tAqT2pcRoyl6+4dnDDRl6ypLqUgcwUL
      NlkxaXKIWanX6uEA/Aty2HU8D4dABZb1WEzFtSdouAdHP0jh0I/V1AD8fo2CLcmkV4xkmNcd
      Ow2qLOnBVDdFIF1aLW3fJGPDNaJmeBkRI8A9DI56jJJXPiYp7ze0/EFF3j4mvnKdGVHuRlPm
      q4OyeCYun5JbwK3rZMSt5ZNBj/FMz1qDngrTNmbQwim7Fht/xg7bScImCA7WO3dsNdHHdN9a
      3d8dj4GjmflmEN3vNdO31cME+H9I8jZnnn3HAjmaGdfWP5LXajbw4dJZfHbjN7C6n+4+I5g+
      /QnutI81p7LJclcyTuo/qJuCwC7LGqftBrF1BPNSyrTaUfDdcAX1/guk9I9ntsG5AXxROZ4R
      AO6D2LSthrip/4ddQRX2/RTM3TaF/3Gvt9YezKDvP+8lvXAkwcCwd19mWcJ6BvT8hJ/oTOjU
      CXy7yLNBgu5o2mbnZjqN/b7RXa3pVPtzyGjy9w4Ry8/aG62z/KycT8etpjB+NgtDW3e5Q+u0
      kIJ2hTb3KPuGTCW1lcUIQpACCaz9n2DN3fcfmoVYfiaQFUKQAlkhUnY75PffX2zrW2gxRAsp
      kBVCkAJZIQQpkBVCkAJZ0exBTW5aNKuPGTvrTMQbrzPSqYTMBfPZKrGiyzniDV4f6dT4oGYD
      M5bvx2bEaywa52okZicGT1/CJG8rg/M1p9YRn3yQSucI3nh9JE4GFoLmkrNqGtOXfUX+z1Xc
      /0B/Rr2azNIYpfQz8x/XMUHxMrv6L0K9OwY3C2yaLUj/aSmkTKv9oSSTBakQJSkC85/TalQq
      fCNfoCpDTfE4Vwwl6UzEsx4cUhVS4+1NY0nWUKgqQDkxnHOHm/GBBE2gZfIhJamHVhHq1JFb
      JUdIe3UyT11fz4HX/PREVMaWOct4aEECwZ8b82fcRkYpu3Y/SnAgyqZ27HkF4JP7Hfn6K4dq
      ClEV9COgn2HLKbhbTjJzaQyhTrplZB2dQolZOpPumzM5qWdZtmUGbzouJXG4nVFvTdnIR5B1
      +1FsUCidUR03tmDLi4GhxeToKbKmUEWBTyDe8vlEfyG6UKW/ZbWqioqudjRaelu2hRlvOrI0
      cSiGmxnMs5HNn6/hfhQbhRKnJtYQuioCKM7Jp16SunTtE+Bl5ArB3eHGR7GLOVKi2z14q+QI
      i2M/wnv2cw36h2Vkzl2O49JEhhpXo0mbVnhSc4zV0Yajn+CXUphW17GsTdfP1KZbG298Hb4y
      vvTfVUFA8R7ya/zxtwI4Q26BDwGToBn7bgVmsHdWFf8V2p3jpYDjI8Sl7SV5aP3607LMubx1
      /wIyjavRLJtWEKQZgxqNCpWbL+Pqun/2KAIdeFd9kTHSiiQw6CLbs6vxD7EBjYqTPgFYsmtH
      YAlaRn3uw0fqn/Cy78itcg1fJoxi/Jk1bIzyxLpsN/Pf7cY7u5pK1WbYIJNn2RpVFjfy9jM9
      uvH2KB5Qc3GMC1KSdFEEcHV7HtUhIZxXFaEcKOTYYvy8keQVk/CqVUtHey8mrkjm9IC5bBz7
      OUO+WM7anMOsdVxhcKnCPgEiN5PvY9qmPDlMDoLU7UeJTI5lYKMtAL/y7dvLjKdtFwUBV7eT
      V23P2SJfhB5bkKpKrB/QO2ZtjTUVVFaBS9QOyqP0zp9bRVg0pNTNMYaZYSOHQY1GRZa71Ob+
      bigCm9qx50LIgDJyNh6myFchMWcp+NNwCSc2fhtFFbothdqKIrbFx7LK9TnC/+TtvW02qNE9
      qXmAU9lZuCvHSe4w7KYIpMsy42nbSaHgl/kH8H1tmsRZwZ9HD2bbrSPS78W6JzWP/ve/OLAu
      nB5/ciSxyaudkZ2djaenZ1vfRovR9ilbIGiAEKRAVghBCmSFEKRAVshgHlJgKXZ2zXmDUftA
      tJACWSEEKZAVQpACWSEKJ/3lCic14DKMsoUOoVCkdyq6A3TQ/4o27kr7M6S+CC5ddbZdXWDu
      NzQqI1KUJOGzAyTpB6/l0Gzd+ejM+mOicNJfrHBSQ9JnguvbMFD/RBHkPwUlt+F2w68U474m
      9IdTj8HRH3W2l76BC/+Ed/Lrbc4UwKyDej5vQ5yHoT+tGuKOwnK9BReicJKFcU3R1oWT7nAt
      Heb9DRY9KXHyDBT7YPR94lIsKoCk56FH7e+1syckxsH2b+ttCvPBq68ZzrSw8EWITIOH9U6J
      wkmWxm2Sti+cBMA1eGkevL8IpF43X1QIjyotc+nV1fDYr6Xg0mB1RcGvoDBD5eqFsCcSYiVa
      TlE4yeK4TSCTwkkZM+Fv70OYkeIHxUWQ/o/6Pp5TX4hbD9csiHExHSYdgMSnaw+cB00hBNzp
      O3aF4OfgW73Pr9VA3B5Ii5X2KwonNSOuMeRQOOlaBiR2gkVhxm3CVjbu42m+BO1SiEjCaK3D
      OqohdQIM3whbdlK3ipw+sL+Bz98vwZJgmDYEMu8oXQtJ0TAhDSQaR0AUTmpeXElkUDjpGry2
      EFYkSadqYzh4w8pt0HEu7G3CrvoEjH0EdofB8S/At4lftHVnGBIHn4yDxet1xzQr4fBk6VRd
      d50F990MROGk1iycdH49pB6DVIkKFn07AFFNjKSdwbXSeAup1cCIcRDzDTxjwWdxdoHfa52u
      nAtbK6GD/nrqVEgFlp8RhZNMxG1fhZP6xBpOudw+AwMHwpkG0zrXpDqLl6HYyXjLunASjM0w
      LsYb16TFfPkidK19QcXKCsP72xEFUTvqp4dE4aQm47a3wknmMa+fbhBzqbY04c3TEBsOt+bC
      341c87ESYpt4D0PpevCeADtPoevTV8OBJJi8BeImmH9vonCSibjtq3CSeSTlw5o5MCgWLpWB
      Q28Y/xbsnFRvo90PvSfD1vMQAlxIhXtTDX0NXA5H4nSt89fOMP15GJcLlZ3Afxh8lAXDLejQ
      ij017Yzs7GwCA4NaPM6aUaBJgHeMNZkthFgPKTBAq4Y9Q2FtK4sRhCAFElgrYJ2ibWKL5WcC
      WSEEKZAVImW3Q65fb/bqD9kjWkiBrBCCFMgKIUiBrBCCFMgKUThJYBamCieVFWxiReJq0r9T
      8UM5YN+LIc8t5r03wunTsbGvW+e3MX/qy+SM38fumMZllUThJIEZmCqcpEW9dSe2Uas5sMYD
      R1trtBVFZM6fwpDY25z6cLTuveK3zrNt/lRm7OpFhF93yUgyStmicJJ8MVU4yZqhCWnMfNwL
      R1tdG2dt60H44jmEb/qW72q9nNuwjMODUsk79ikxQRKbdJCTIEXhJBljZuEkPbQn81AP9ce3
      9me3KStYHO6BbRN5WTZ/PlE4Sc6YUzjpDloqSjV8tzaeJ6IuEr/yBYte+ywKJwnMwlThJIBz
      q8JQJOj+1m4RyazdNQk/e8skJgonCczAROGkWiu3mN2Ux4C2opSi79NZNdaPC//4gv80sDGF
      LJ5li8JJMsdE4aRJejVsrG0d8Xo8hhWPhvCmERtjyECQonCS7DFROMko1l2w63yZqz8BZgqy
      7Qc1onCS/DFZOGkvi8YtYFPuBcp14x60FZc5siqR1N9GM1z/BT5NIAonCczAVOGkUJ6dksOC
      eRHMyTrHz1XontRExPPJjin4WQOcY1WYgoRGUlBgn6D7LnJzOclhYpNXu0MUThIIWpH/By/D
      dT9Gz2sZAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total Gender (2)' width='192'>
      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
      TaQ9yO8OFwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='summer n winter' width='192'>
      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
      0rme89K/ZetQdLNeG4XUSvrzhnI5msZZ2r6V0gvOZCmw7EWX879e94Ijb3f0br76z3dTOnF7
      bp1gRxgKMcydN9zNKW/7GO88fzEuAZPjo9ScAiAEdR+VSOCoqFgRBH40Z1cZAj9AMASBQTse
      nqsIfJ/QgJtI4DkOSEgQGjAGPwxRjkvCdQgadUJROF6ChKubHyUcUG/40efwTt8v+A2D42rC
      oEGIQ9JzD9Of0MlZm9LctmWIVy3upVrcxtjy13Jx5QB7K2VW4rLjiQHOPP3FaGDnf32Jn+tL
      ueLlpzOx+d/594E+Mptv5Pt3PY235jL+8Ut/hdx/PZ/6wpe4ZTNse/zreCtex403fIDuqd3c
      dP3XuOEnj5E769V88IN/zgWndHDggdu4r97O+uROrv7Gvbz8PR/isvOXMd9D/Ky5OUIA0vQs
      M/z20W3sWZ5jWXeeQlcf0WJtB7j+vZ9m1ee/yR/2QnXkGf7PNZ9lw/+8gfXeI/zzlV9nYlmG
      bQ8+jdNzBi9/6RqevutOHtpb4ezXX8FH3/4qUvvv4Rvf+zHliQYPP76FRsc6/vRVG9j6i5vZ
      sqdM+0vezXVXXopXGeaeW/8v/3rjbezzPVad/8d85ANvZlluF9d84nbOe9NyfvXd77Jz2Z9y
      9btfSzZ5aAAU/edcROWWzUy+7FWMPngfmU0f58J9X+MH24u8qL/Kgzt62PjCLgCqY7sZcCoA
      BKUhfvr9e7niA5/kxo91se1bf8nXfv4Gvnjpu7jhm2284wtw9f9+A12A1Ia45Yc309jwl/zH
      +1ex797vcvV1N7H6b95GY3KYLQ/ezubKci7/7Gc5Z0k2JhWwhe0IAchz4VvfwUPf+B5f+/ub
      yXSt5jVvfAMXre46wh/PELptvPgtH+VTV6a45Ruf5rZdBT5y9fX0jt3PV27ZztiUTz9QD5Kc
      98YP8PH1aW7/ymf44Q7NVV/+Lot4mI9/+F5GEfjtPfymsoov/tv3aQtHufe6q/nWPZdw1SuA
      qa389I46F7/5M7z3nOVk3MPvWab3dHrKd3KgsonHH01x7h9lWdZxGgO37qdxZpKBjjQvzGUP
      +9pNl13Oa86NVsM7a8N6qvvrh31ebewAjz72S7Y/NMCjtwEyzrZbNU9+9M0soc5wscAVH/kL
      1rbPz8Qe6/gdcTRoYvH5XPGR5ezauYOnHr+Xb3/+w+x6z9W8aeNzvcqjp38dZ65ZRDIok+s5
      hbOWr6WvkCJZzZLOZKcXy+pduZb1q/rxvDK5fC9nrT+X/jYPaKPH9TCUefrhu/jJv93Jj675
      u2goWmkfzpteB69YDCbPBZe+kVec0fucxYlMto+OxWX2bL2f3+h1fCoPbmo9K7bfzsODK2lv
      z1DIp+bwq3u2Rr0K6QIvuehSVrVH9136P9pZl0kwQZq1F17Aipz33BuxTqojBCBa1S2R62HN
      hh7WbLiAdSuu59rv3cnIxotPzh4iBI0+/uzT13H5qzegDyrf74C2paxdVjhiWdrL5Olo7+aJ
      H/0niQs+QBbAW8ML13yF7/8qx7rFqylk5lgo8RLo8hCVhqHDETKFLlLZRUiml00XrcYJqwwN
      lkhqAI3jaLtCxAJzhL/4OA/87A4e2jmMH0LYKPLk49vQ/b2kSZJITjJRrOE3Jtl+/x08PnAi
      djHLmrOz/Oa/bmP7eANjAiYGHuaB7eNz24yXYUVXhnt/vYvTV7dN373ijCX85o57SPevIDXX
      Y7NzA+uTv+bLV32Ov73mVspti3nF+WvYcvM1fP7Tn+Fzf/9VvvPTBykFz7Nm4xg5whUgQZoB
      rvnM13lyYALS3Zx9yWW8/S0byZFg48tO55PvvZRrvV7OvvB8socvQh8nTf8Fr+et+77F37zt
      dQz5imVrLuJdH/rgHLfjsurCV/LXXzyfZSs7p+/t3PjnfPkTYyw7o3f6bLDikvfyDvoAKGy4
      jLcEM59J4Kz7M953Wnd0wzuFt3/yw2x7ZpQgu4SUk+GMS97A+1aew46BcSSZp/+UU+nyHNrO
      eymvMR4JW/NdUI4wGrT5odetxWtbE+CJVlNofUieND8SSCHNBa6a8wG0Qs1aCwh1yO2Z3UCp
      1gK5rWHRgjQ/ATV6r6ipNdqN1kR8Zj3HFi2subPDoa1YsxdkK9ZsAKxYswGwYs0GwIo1GwAr
      1mwArFizAbBizQbAijUbACvWbACsWLMBsGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwA
      rFizAbBizQbAijUbACvWbACsWLMBsGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwArFiz
      AbBizQbAijUbACvWbACsWLMBsGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwArFizAbBi
      zQbAijUbACvWbACsWLMBsGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwArFizAbBizQbA
      ijUbACvWbACsWLMBsGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwArFizAbBizQbAijUb
      ACvWbACsWLMBsGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwArFizAbBizQbAijUbACvW
      bACsWLMBsGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwArFizAbBizQbAijUbACvWbACs
      WLMBsGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwArFizAbBizQbAijUbACvWbACsWLMB
      sGLNBsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1mwArFizAbBizQbAijUbACvWbACsWLMBsGLN
      BsCKNRsAK9ZsAKxYswGwYs0GwIo1GwAr1v4f3McAauDpGkMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name='olympic/3 m.jpg'>
        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
      </shape>
      <shape name='olympic/Female.png'>
        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
      </shape>
      <shape name='olympic/Male.png'>
        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
      </shape>
      <shape name='olympic/bronze.png'>
        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
      </shape>
      <shape name='olympic/e1.png'>
        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
      </shape>
      <shape name='olympic/gold.png'>
        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
      </shape>
      <shape name='olympic/images.png'>
        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
      </shape>
      <shape name='olympic/macho man.png'>
        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
      </shape>
      <shape name='olympic/silver.png'>
        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
        NMhsBkD+fZ4AAAAASUVORK5CYII=
      </shape>
      <shape name='olympic/sports.png'>
        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
      </shape>
      <shape name='olympic/stick.png'>
        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
      </shape>
      <shape name='olympic/stick2.png'>
        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
      </shape>
      <shape name='olympic/stick3.png'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAD6CAYAAAAbbXrzAAAACXBIWXMAABJ0AAASdAHeZh94
        AAAgAElEQVR4nOy9ebhcV3nm+/vWWnvvqjrz0WzJs2UbDzjGEBMzJE6gCaEDNyR2AmHIBGQi
        CTRj0smxbocANwRo90PfAKGTCze5XNMNHTohI9ghCSbgGXmUbMvWrDOfU1V7Wmt9/ceuI8k2
        GFm2LBvrfZ4j+5SO6tS3q+qtb3i/dwkn8D2LrVNb0/PPX7IwGuTKC6rj/XhO4AQeL+R4P4AT
        ODooKlx7nb39ujXm/JMKvX2iJetuWMjM7h3nhzJMlIYfToP+SBKjSGopYvhEnGh9iw3DN23c
        8sr+8X78J3ACR4MThPU0xNKnvnlOua/7prh7cVQWcyu5V1PWksz0R8NS/yXdpYV2XuY2jdhU
        nIixlE4qNo73h84+6W/b55/6/uHfefFtj/X3Kip73vy/2qmftr11wy+SmpdmWfu6hW9Nf2V8
        LInrPvP6viB6LGI+gROAE4T1tMTuqRs6bdf7eb93/mV+x4EX6p7FCaYXyQ7kWF/R04olaiKC
        w9LGkKCITbEnr1d90eY7wylr3njS+y6/4Uh+n15xjd1/evuH6ntnLtCi/4ZyZm5TXYWOWjdk
        Av0sy3pucmxGh1sfH77olDsnN//gV+RKCcf6OpzAMw8nCOtpCp261s2Rd6oHFy4OM4unm351
        dst13mxDsqoyjgUNLC4vowt9RhYr1vUipt9nWfssbBhW89wzbx4655TfPPWDL/2X7/Q7lv7g
        a+f27rz/DL9U/ELct/BCv3t+ws8tuKruGcXhJCWJgjOgiVOdHK3TszYsJ+ND7+PUyb9c/9F/
        f9+TeU1O4HsfJwjraYBtV38pa+8thjtj3k+8+4olkYeWXTqlZg//qzU6ueGVsdX6vyu1472q
        YnHvHH7PIkN7+qze00X2HWBufh9zFGSbTorrLrng5lUXnPaL6X+69NaH3N8f3jq0tH3Hi+q5
        pQ9Xd+1fFw7Mj8VubrUQiAYFjAYSDJnNEMCHktIGfMdhJ0f66SmTt7hz1vxFubH9pyd6Zifw
        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
        Tj6q1bVnPGFd+rq5pIjpz5dhxxoklyztkCSOUPcJqhgZx8ooUSGEJYwErEkPqsC/MwayBwxI
        C4ke7xfRuAwxxTBEO93AxPA5u9zo2r1PUrgPgYDuO/OM203Pf7pV1b8kd+7uaFlAGQipoW9T
        QCk0ICGSIJjGL6ZpMsvgvSeKxkdeC1VdmULgUTw1vbwn9W7n3CljT6iAUi7Ysr17y+v+qpL4
        wkBFasBpH8Qjkg2cJxLwEcEjxqDOEVttpOUQX6O9Ps328pFl0QeNCw9321mJ/eAtevBnDtsZ
        OKZQVbnqX3dumO7mr949m//Mvip/zn2Vax+IGVVIIBpyr2zvmaHhOf98iH/yW9c/8M69c/3p
        4ZF1/27rQvW6bcs8Z7rnnIYxsKO04ghj0eAI5CKUtgZXQJpgfIcspIi1VElCJRmqNf3KU/Q8
        0Tfl8u5e7h7MZdW4lkdN2s94wtoM7OzvSPvVbjCe1A1jjOJZIhIxjGHpACUq4SFrKt8dzcer
        Gahuomrjj+ctlhYmncRK+/+5ZHWy/9hF+OhY/86Ler2PfPUD9Wj70rryl+Z37aIKNeprfGLB
        QAhKgpCKwa28AeFgs/nh2Yg+fGyoEFBKCfRjCf1lSfLl7ImOpXSdsm9TMIO1R42gBZiASmsw
        xUsxakFTyNaQDG9G2pNI8SDSu4EYK7DJYZPeR6L5q4G4TAHigORWwo3NdHnQ4ztM8AH22I/+
        P3Tb/k5h5Q9vz+Un7l227bl+TY6iiQXbQlJQrVku4Y653CyX8vwJKb8Y6uDvPDA/OhvS1pIX
        nO1ATPB9S+j2KCUSjKdKlOhcY+5fR9RGNPFQB7QuIM2RBBKbABneJUSbkWvFtNZZd+OGoybt
        ZzxhHajNpUXd//GinJMkSxHNUO8bYiEAg16WGKyzTTlE86b87hYrZiCB6IIJONfBxVHKaPBB
        6HWXGUnL19/4QP0PwHHJsgA6Cy/aX6z56m+3XnDmn4al7in13nmir1DrUOMQI6Q4WtZg8YQQ
        CINx/yPI6dtBlWDBj6TYkYz25nXWrR17wo/8qqz5nzJ85muR8nlaHaDWPkIA9Y1+jjbGONRE
        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
        wcVxz2KxpnV9/eYtt/yNp4T+19RJStmREqYJ6d3bvSOdV2Xst5P3Xl8c2zz20S/qkpR57FhY
        1YtwQvmQZiWnXPj/+4vuXACGT+W0njZ5ziusyo+yY8Vy9AWs5wocYRF0sccqnPJK3wyzv4FL
        +cr5m4qdt1jZc/20xDbO13K9WyQlS5mTQ3NCXEJE6GadWFr6hj++7yePXIl5ueYtrz9dWfgB
        u+7QfXihSUptBd6A9IpJCqOFXjD6FXy+mpfLGPMbxsCpIzrPZBjoXGDrzHpz7p5Pfeunv/MX
        P/+J25A+vVL59l1SL22ZhdKpuMev7KFR5s79pQbn/9suNig0yFnKTSwJpzO8dpg4fPO80yEc
        /bXPBjhpKUppBKhzLfI4gckn8mXtKY69nyj9dntw6cIcLcfhmuFTPq+nQ57zCqtxR827NXKq
        SalfUIWYak9Z2XypsbdbIHvP2165jdm8hrDfdXo0+2NKeRbUNHPXorwuPXWJqkO1JAKcb2hj
        kvHuuVu3dh9ZulJzsyPLj7gbDn7cDSsNOVN1kT7szF5S4nH+9gdc53aX7b32hKPcrYsbF+ex
        4QBtarbOnuXE//joC3a3t/7p+t/4dytX4vzD8oEog1VVV2NWSlAW1rZx8XPZN+YVE1zO+5mH
        GqwEuz04l0pIwg+R6vDvpJ3695/qOalEKUHXEua4IEG7f994wiEXBNWFff++YOy9V5FFqr3/
        3TllvYKqknJC2/UrZ0E/jjz3FVaz8kjlD54jLaE9xmZ+1PNFpPsUzuISzUF1iw1iXo7Tm1rz
        17Khc1iE7Vd+PUB1nkFaxC6K9ZJSCdyLE8QNiZ0xnpxZVZ294ErNzS0/dXuXBu4X3TWrG0pG
        27agoN2eKtqP2FhYon3DhdwbCosbcaHgLrUXWwn2IlAFtHK0RHbHWzI+u96cOLf9tLX8uph0
        fjTWwaEuu0GJsc2zgzDfmS49jMWasP1m+MVGPxMqgrp5QSZoNSILv3v49p96yoHpOsIi5Y0s
        LLtSQpN75oQnLrUpQ/cYRucGMpcTmQOxQlHjnMO70rsAESwrueuEZzeE9dxXWLvV5L95Wf1w
        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
        /wEbZFevbMLtcQAAAABJRU5ErkJggg==
      </shape>
      <shape name='olympic/summer.jpeg'>
        iVBORw0KGgoAAAANSUhEUgAAASwAAAEoCAYAAADi7MxjAAAACXBIWXMAAA7DAAAOwwHHb6hk
        AAAgAElEQVR4nOy96Zsc13Hu+Ys4mVW9YCNAitRCbTa1WLa2a9/H1/faz3yYT/PnzpeZZx6P
        R9eyfWXtKyVSpLiDxNrorZbMPBHzIc7Jqm4AFCABRAPdwafZjerqqpNZme+JeCPiDXF358xO
        hTlgbuAdycGZ4i4gjqWB5B0wwWgRyYChNIA82YWf2ZkV0ye9gDP7pE0QSSCKxT9xz4DgJHBZ
        Pe8MqM7shFnzpBdwZp+saf2/ZJwefEAEnA2gAQmQEpfyvCe31jM7s+N25mGdIhuxx+r/ZuT+
        NnCIu+OecBdELJ7vwhlindlJsjPAOm3mYAaGIb5gcXgV624AHeYBY06O54brdWZndmLsLCQ8
        jSYAjrBgmF8ls0WavkB2JZEQfAVUZw7WXbaepxI5O0GfpJ15WKfMBEGTFO+pJ9kew+w9xHfB
        F7jnimen1iI8PsUn4ATbGWCdNnPHCTwSoBn26ffehP5dYB/zAXdbeVan2IGooFUB7AzEnryd
        AdZpM3FcHC8ulNocX1xlWL5PkgNEwEppw2m/PUXkCGitP16/zuyTtTPAOlUWYBWUu0N2dJiT
        8m36xTsk2SOJI+johZ1Gq0BUvSozO/OyToidAdYpM3cbvSss4/0c8X0Wh++R8y6qDiKYnxLI
        cuDIsXqExARQmQ2lsNae2BLPbGVngHWqLKrcxZWGAWSH3O6SZQ89uAaza8Ah0KFiR7OFH2dP
        K7Y54IZ7xj1jXkO/DGTEM8oCfK8kJIbVn94jVDyzx29ngHXqTFAKly4dlnpIC1L3Ibb3OuTr
        CD3idir4dncZOT31AtJAZgCd4fkmw+JD8nAIa4B1Zk/GzgDrVFnwV/FdwadgLYqB32Ixex2G
        a4gMmDuO4DwAd/O0FsQLEf6ihdVb4tmi4l8U2KVbvIctb5FUQM5ulydtZ5/AaTIHKbjjLrgr
        no1ERyM7eP8mef4m4jNcMkY+AlbPWvhT4TujkYSgA3PcwL0j929xuPMqDLeRJKFscWZP1M4A
        61SZgCm44hjGHLdDxDpa6WnyTRZ7v4fuJiI9uQAWfBxYOU8viQVIzQpqOQJByTR2m+X+a9jy
        Q9q2eJpP6zE+Q3YGWKfOqqcwAPu4HyKeSQaNH9Lv/wFffIDQFQz6Y2C0HmY+bRZBr7qjJFwa
        LDnCLsz/wPLWb2l9TppullPxNB7js2VngHXqzHGMiHsOEJtDNjBB8iHT/BG291vEDkmAanTx
        qH5coeTTeSMHwd6j5khWsigDBzC8Tb75Q3z/bSapRSaXEZmM0jtw1kP4pOwMsE6JBRdluGZg
        QMRw65Eh00iDk1Ht8OEjhtnvob+N0hPeU/26HzA9vTdv9bDEQ72ilR3s4FXynV/T5hnt9CLo
        BaA5A6kTYGeAdQqsVmtnyzgZo0fIeNcjg6MqeOpxMmK79Ie/w2e/ReQ27v0af3MvwHpaU4TF
        SpGoyILkN5Hlb+lu/jt59js0Gc32Fdy3wVqEFH9yVvH+xOwMsJ5Ru99NNcKOOJI7kmfEeywN
        GCkU3Ifr9Ie/AvsoVEk/tsr7KQYrAFKcC52h+QNs72fk/d+QZA9vpzA9h0mLSiqChmf2JO0U
        Apbz1Ge2HsIqaEWzroI0oenuA9IdkHQA6XF1RKZITjS+z3zvF/SLt4CO9fM19tQdefQkeVll
        VfWbO+v/HV140bdXA7tD3n+d5fWfoP37aDvgG9vQbCHSIKR7hoRnYeIna6cMsOqVus7JPPug
        ta4sIChJFHwJtgMyBxPUQGOsDskXyPId8uHvEXaiwtsNZ0AYQqLGnYyT3aOm64S02nnpBfQq
        nwoMDPQMqzINA6xWtAvuu9jyVeZ3fkA/e41GD0LOfnoFmssI0xjOceZhPXE75YD1tKbjH9zk
        WGZL3FEMyUuy3cZ8hqA03sBgNCkj3jGxPfL+G7B8G/G+jAgbSogY3kouYsrmHin/E3EqaxaU
        4mg5A0PA1djfXLxEyzhLGN7Hdn9Et/8zGr2NpEw2JbWfQtIloAmgE8ZjPPOsnoydMsCCuOoU
        Imn/hNfyyZuVbCFudN0eWeaY9uBO0gx0qGbwjuXBu/R7ryF2J0h6V6Jc3kK51IUkThJD5ESg
        FZARGUAdL02TyRONT2itCbDSDtc5A/skewv2fsb81q/x5Q4TzeCKMaVpr4BPA57TEKHjiTnO
        02mn7I6tXIuu/XyadkqP8V7iYJm+PwBZgpSmXskgPaJOkwY038Jnf4D+Q7B5OFFSQMtBEcQz
        JyYeBEAxlCzGIBnDaBCaLAVrHPMOkyWq+7D8Jf3ej5DufSbMizcpeNqkmVzB2YhokBye25k9
        UTsFgLVeiS0rLsLXAWs9THy2zQXcBshLhm4PSUtch7hJPQDLpUclM7HbDLu/wg5fRdhBSWRP
        ZAQkOC/lhHkdnsAnGIZJj3hGLELhUFsVRIXEHLX3GG7+K/3uj5j6h0xlAbnDRPDmHDJ9EfcN
        RLSEmSfoOE+pPeOAtc5Z3Y9gP0VZQ6mkdAfDHB8OEekwHxi9ThUsG5aXtDLH5+/RHf4Khqvx
        XBoyOvbVCTpOkj4Jzqp4hKoCJHI5KgUZcM1k8ZhpPdzCd39Nt/MrpHsX5Q6NDmjyOJa0Cc0F
        hA0URfwMr06CPeOAtbJVOn4txU3hik9JIaBZBDXiPd7t0jLgPmAC7ikKIy2KFDCD3DFJh/SH
        v2Y4+BXCHnWIhZHL9OiEo7jIyYF7C4YyrXnSpsKAkWXA/Q4+e43lR/+BL99nkhaI9MCA4GRJ
        pZxhA7EEWRBvkFNHIZw8e8YBS/AjO2NJea99rYeBz5J8yLou+eoxCFL6kGF+FbVlZAw1/BG8
        RTwhoogIitHqAvo/ML/zE+jfRn2OkkEMl0xtpj45wbQj4qinEWQCtxKG0foezF+l/+h76OEv
        af0AkXI8OEbCfYPUXgSZAg1iinh4ksLZ8Iknac84YFWrF5gTKgUZZyhfVm7qZ/ciXBWPgpIR
        DujmH9DYMmqvqufgieiZUzSBqOP0NOySZ2/A7DUav0liAWU69FjRcFLcK3HQAFJIRY8hNqfk
        M3R4i2H3Byx3f0zKV0l0iAfoBiff4pwjTZ4DaYrnGJ6aPMPXyNNipwCwysXoVnbRoWTFArAg
        F9L4tLj7huRbaP8eE+mQMRz2Qlg3IIKIgQ6YLWnznHbxDstbP4Dla6jvkUp2ULzmXU8IYkkh
        1ynspQT5nnyfJr+F3f6f9Lf+mYm8hcghSmRIR+/aNnC/iEyexyVFRlUhKycr7D2l9swD1vHZ
        ckPu6Po55h1eh4aeGPfg8djR8HDAutuo3SLRIxYhlNRiy5FQz4hmUnLS4LS2jx2+gR2+AXkv
        uC4XRELxoPghT95cC+g6JpksBjIgtgP7v8F2/pO0fAOVGVnKcZYGaHcHnyB+AUmXcBJWAMsS
        8fOJOMjTa82TXsDjthGsSi3NMBxgy13a6QRttzHdpkNJbiTRaHCtwnViEU6IYCTGAQ5ebnD0
        iEbSE7FxRFXZ/cUYKyYRIJd/A24oPbm7g5dJMOIWaXuxMYtY3ZPsOSrjLdHKgty9z/LOL9jY
        fgWZ1pBpVTJiTpwXcUIzfj0Ur61BNWv7gOdunX+sD9TXL6943O2RUpVuAJ5RbkP3G/qb/wJ7
        P2fCLr30eJrg1kWfoNUsp0GaIM2leBzHhTPe6oTYM+9huXsBq8hkbU4yTfchiw9/gh2+gbBL
        x5IskM0xo/ShZbABoy+9aEYHNYAAz5yMMogCAAW4asNMYG54EGAQETFqPbY8YLBDkA5VwUwY
        FExyeE45wmgRRZFS8TCgfpvh8DcMuz9D/ENgjtFjZAY3skf2sLbvMDYf26qOyTx6Ex+Gph+7
        qCKkt7EpaK0UpfJobuCL8BFNEJ9D9yrD7j9jhz9A80cIYJbIkqEREEG9Rb3B0wybAHIBoSFF
        yRmNp7Fc4syenD3zgCUiJJFSSzNF9Dk2zl3mcHmVmx99H+t+wbbcIuUFKkpWw3TA1HCJv1Fv
        Se4k79E66skbTmJ8ENSwFv/KkTJjDwFJGXyGdXcQOlQjDBIvVeCjtwThISVCfkUj9JMDPH/A
        4Z2fY4v3EOvAGgzBPI98lrgWgKnvvwS6klm8v7LW/Wx0esVAcvFuAwBlDZSlBrOSwKGxGY1d
        pd/5AQc3fhRhcIp3bhsNHq56lFLPWI7jTZM4l4XjOy0M50m3Zx+wkLghKQMYOAcbL3Lh0y8x
        m73N3nv/Ars/pMnvIhzGiCvJZMlRFY2SLNGaMnEL/SjqCKwTcAmPBfs1ixXhoJQ2HGQorlUG
        7cFu0S+uIsypmcFEgsJbIdVz0ShxMI0QLEFqepp0k2Hxa/rdn+Ozd9E8IJ5ImqJEwimV5RUw
        B4SMSC7hteMqD373BwKOswPjIY2ShdLbKAyILBFZ4uIMorjNafK75Gv/H/2Nf2U6vEtiFh6a
        d6gPtBSPD19Fp66kNEHTlCOLfMZ5zqfFnnkOK7bzuEFE4vI2tmjPfYELF15gees15l3H5mc6
        ZDsjzedAJmQHx2iLyqRYqVXSElsJrHoSn7RVn0ULy1Yek3zsOR0M18j9NVpf4NlLbZEWCLZV
        p5I3BAFvY/il6kzoyMOH9Hs/o9FPk6YvI34Zl4RIX4AyFf6qclcpeDTRstKq3fkgR+a4GC51
        sGsLno6VGJRjLdyjktF8lbzzYxY3vo8uX2Oj3cNzh6vHGTJDpcFGICyBqwiSWkQmrPwqX73P
        ifi8T689+4AlK+JdpXArbIJ8iQuX/gvzg4/o935G9vfYfukW6dw/weRzwFYEUwIJw9UiYiIV
        TyGfiMrnylxJIXHGpIF44bxLaOcOzLDFu0h3lSTLEgZKCd0oJQGFEEcLWR9lH+aGWvhimzKj
        m/+KJRM2z72Epr/F/HmQvmBGKqdFgBbxNsoGpL7Hw9764Z2JtwX4StZz7GGsaqCGcojma/R3
        /hf97X+m6X9JY7eRIa/VaFEq2BPSlOygDGVvS4hOQSarEo91Yv8Ms56oPeOAVTwPiVs64EVQ
        n5D9Cu35V7CLLzOb/RibXWd2zdnonfbK35HSF3F/DkstiKHVW5EGryHUCckcVS9EXdceA1xx
        F5QEvsR9n37+AYk7KMsYiYPg5quhxlJrssqNKrICCAM1pfEM3GQx+znd3peZtJeQyQZGCzLF
        imeWhAKgMsoLe339B7SaW4zK9Zp5dFwyGcNdSNKA5cj4yXV89wfMbvw/NMtf0uiNAHNLZRjq
        2uRrKa074phYvJsonlqQJjzF49nIk/GRn1p7xgGLFZEsiWiak9Jm0eLNJdpLX6bZexGfv4bO
        f83y5gLrbzB9/n+j2fgrsje4KBlD1SN88hZ3SCclIuRouUANu0J4zgprvcT76wyzD1A/wKwj
        6WQkx7XcjIV7HqPeyPKVlH8BHjch6ZLGr7PY/SHSPk/73CVIX8C8wTSqy40lSYTEdPT8/rSa
        rTRykdG8PeDSYygwYeiNRmcI1/GdH2A3/5k0+zFJryMyINqUA+vHZEnI5BRvS0o1fM0m0+LS
        EgkHTkYy+MyAZx6wBLyJlPqYRo+wRzTjsoVsvcLGpb9jsdxh4m+Tu1+xuHkTy7tMr9wmbf8t
        zvMY03KRF6fjiR3Tvax4AZIj9JMEIhhO0gT9AL7LMH8bX3xEyxLLA6QWN0NSZYSqQF8FlFoy
        0AR5TynCJIHBpMksZm8xu/E/Odc8R3P+Is4GeIuloq1V/FF0Wu79h+86lCN5xRgu767gwTCK
        HKL5TfqDnzD/6P9kOvsFm+lGhKiFO6vdDOpt1NRJaNmLp/Kr8JhD977FaQq3d1bKcJLsGQes
        eplLuZErvVracnyCNJ8lnf8bdPf32Pw6EzlA+JDFzr9h/S7bL/bIxjdI6bMY28EXqaKyFio8
        UROUhpradzGcFKxPKYaFDuc2vnwbyXdI4pjKGmcVbpV5uFY6AoSPN7p4hMGRrRsQSSjOxGb0
        8zdY3vg+qfkUuikkuxJtLVrC1VI3tQLBh1N7DQ7SEC1A6onkCbeMyD4i75EP/o3lze8ji1+h
        foOkA2YeH7tkalONFdj0cPdKprE2P1fPqylfWlZs8bwTQgGcZnvGAavccA7qcRtmMUyG0nI2
        BS6jW3/B5NK3WS4/wOZvkNIh25OrLPf2OBz2mTx3lfbifyNNX8H9PKvYqeWJA5aPLE8hvR33
        BhOwGibKHF9+yHL2Omq7oRTaNFg2JFWPZ1UdX+rW4+FS9+TeAC1GRtscsjQGE+lobIf+4Ccs
        brZsPN/RbP5XlCtE4YBRQ6uAjJoxfJi6hmhiFokBGBG2DrS6gw2/Z3Hze3Q3/oXJ4i0abuPJ
        GHKpSPNcAFhxUVyGVfbUo3th5O2E8MY0+KuSdDyzE2TPOGDBWOntk9JioxhOg5cSgATNRZrz
        rzC79TI6XEfdSMOSCTPmh7/gsFuwlZ3pFUHaLwCXwJox9FoxMpU9khFIgLsw7Wjp5DEVAL/3
        39zPjiX3GUNeEioCNgCHWPcRw/wqU5sF6DRKbwOtKu65tJ6U7OCR4RwV9H3MmllRuRDNqBnJ
        l6jcZH7wn6heZPrCS8h0iup5YEIFwni5Claruqp6Fu4+6OIVeazNSQg9MAc/wLrfsdj/X8x3
        vke7eI1JnoFA30ziM5QB8W4VJuMlFMylNKIID3pIxkRiU8aPThgbsB7qMzmzx2enALBqtstr
        RRBKG/6ERDYMvYRtfY32+W/CjdfIs120yWhaMOE63jvDtQV58R7t8/+d5tzfQX4BbwFaBlNU
        I7SI+qJC8FOyYpFxr8sJQlpWXE40wJQbZpS6eQgFT4/3MUA9oShaSjDwA8g3yAev0fYfMpFD
        kmfcnDZV6eDCzVWgci2hYqwuvNEIBcFLGFXX2IEKyTumfc/y9r9jnGP6qTmp+SoD2zgTtHqj
        GUQTWfP4HlJCTinHMpZlMIR3B7jUsoU5MlzF569jO9/Hdv6Tze5Nphyg7pASbQzvKrRUGgES
        IgSMaggtoaoHeGUiLFQHtdDIckGtUAmVJjwVoLXOM66nRnX1EDwRAH/GAUtKqFQKR6E0rRD9
        goFaIBO0ucz04leY3f4MknaBBbiTJCN+B/wPzPfvsN/d4MILe2yc/ybKy5hfBJuATEu2yUeS
        OH6KG08LX1K9q5VPdjzVWDmlB+N4vHhALlLqlEoJgRcp5GYfm7/D8uANWttD6UOdweP8rL+1
        jBfn6vHR+5N6XBxd2yqdSIvhvMvs1r+Q8y7bn56RNl/B5UUy00KAg5gFB+j104gQWzDMM2aG
        qiKacNPCVc1B9iB/SN77Of3Oj+l3fkzLVVo5QFNp3raeVEdyHVlrLQOt21b1dEvIShoTgiFF
        NFD7uKMy4zSR7+up0SeITvewZxywisNyj9z0yJlTReum6Mbn0K1v0M8/oPHbyJAQbVE1kNs0
        HKLdIQfXdtHuHSbP/RPSfImGFxCLCmxS7NCuNtK8Xlqmw1upt00Nc1bkvcuqtuvBd/Iyh8/0
        aMZLo2+Q4X2Gw9egK4J9kh/PtScAmYYdtnmD7s4+nXZMruwjW9/Cmy8wyCaaNOq+XEJYYty8
        vShG9GizTswLiQXCDVi8QXfrRyxv/QfSv81Ub6Myx9wwC3TRNAblD2S+vnlEK8SoRiv18zgd
        btWarVMc99g4n+DpeOYB6yhYHSWYI4MUtTw4iL7I5qe+y97hj7HuXSY+xW0CssB8QZsWnNM5
        3XyfRXeNxf41tp//e9LWt0G/jHMeSZNSOR2z+8JnmQDgvhb6mayWV75q6CNrK3+Qw3Mc9eo1
        eQG+AWSGzd5ksfNLmv4ajQ2IPqaCVw9inNzTpFso+/R35hzO3mNy+W3aK/+VpJ/F0vOIbgIN
        rsGZmSi1OkukDc15O0SkR2WG29v0Oz9icfNnyOL3bPA+SfZAHDNB2wnimZyX5eN+mOPz0rUQ
        a3EDz5lRjUPS+Lyw0wJe9+IUn7ydAsCCu13ckqofieYgk93Po9ufZ3LhZYYbr9FihZBNpCZh
        OdMMHW1aslx8QD90zPvbTC7cZPrCPyLTL+JcwjwBLTJ6VLrissasHke+1/KLut8/+KUi4aVJ
        Bs2FH0sIS8T2yPtvYQfvoHmvDDtVjnubj8aKNrzAkDuaNtPqVbrFjO7GHXxxncmFb5HO/w2u
        z0G6iMsEpAnOzBVxQ1kicgfhGuRr9Idvsrz1S4bdV9H+OlPdJ8k+0KM6xVEsW5Dsxqr04YFt
        1VJdNbzEB6q6RPyqhvKnKSw8mXYKAGuNcB2vNiveVQqJJovBCybbKC+xcem7HNx+DcvvIz4r
        OzkkEioN5IFN7ZgyIy/usOyu0nfvMb30bZpL30H1RZzL4Js4CaTQu5JRCS9La/f/Wh0UxQMb
        l33Mjk/2kRLCiEc46TKUADGT2MEXb7C8+Uva4QaTNGDUbNjjydWbO6INKSUGy0ieM5UeX84Z
        lrc42Pktzfmf0Vz4PHrhZSSdR2SKsBFKGtbBsIv3HzDsv04/f5th8R6N3WTbdkG7UH3wAVEl
        556kbWiXleSBmD2wc1DF+apmGiLx99YhviD6CyclB2BrG9zTA1sfNw3qfqKEq795WHri8dsp
        AKxq97jZKXumFEpWJjiXkI1v0G5+g3ywT6MHuNbpMB7SKYDIgDKg0uPMmO3t0C/fYXN+ncmF
        byJbX4X0Ai6bZGkYyLgU0BtBNDScAniiJkgKEf1AYpyjVlP8vUsbnIzsIsM7LHd/DPM32Uhz
        BCenUBB9UKWEhzNFPeE5zqfSRJ24O86M5O9DvokdvsliuYXtXEDTeZKeB7bj+HOHDHt4t4P0
        t2hsxkSWKDGGy5KMBaniFuT6UJu4U2iua3pgQK5JmFwUG0TCy5NhDjZDNBfVDlaf05k9UTsF
        gFW9q/WwsPJXa7VL4/9bpHmZ5tJfM5+9hvoHCDG7DwlO3WWVyXMGGvbZsp7hcEZ3eId85zU2
        PvUd9OLXkennEF4gcQ58owCTRjUFDrWmCYq2eM3QPdjNETrkObxFm6C6ROwa3e4PWN75Pq2/
        h9BByrgM8ar+YBnIhzGRDAzhMFrxQkTDcRLHZIn4gpR3STnhixZhEiDrLeZRD6aSUe9pilii
        kENTXb2UbkTfo+YE2Ytel2BJyUUetLH8gGdPwKpEdDRGi2cYDsj9AU2zROQcYyi4nuF/Bq12
        FMQlWLLppQTvpID1sw9YI1AdBawKWpXsNqwQrUB6jnTxFdj5HLJ8C2EJGFkA9aKK0BS+KSPm
        TH1gg30yb9IvrjH78A304GtMrnyXZvuv0fQ5kOcRtoBppOsR0DZuEiwm1Xitg/rjoYeIREaQ
        HAXa/SHit+DwF3Q3/gNZvE7bHFCHn4rn0mLzmMzDHRErJ1bDgzS1AspOIxqekRnOMso+StlA
        UUFGk6ISaqWiOVSVqTkrRbNEVnQExvhmAlLkoR/09hJfnzPoKD0+HJKHfRo6RIPYTyfkhn2s
        Jus9t0UcUR795vbn2LMPWMfDA1+l5EKpJKRFnBw18Aa9tKT2BdLWl8mHP6fxGdp0RcYuBm6K
        N3EDiYJn3AB6xDsa3UPZ5eD2dWZ773L+yodMLn8TmX4J5ArIFUQuINLEzThmosoFIxQv6OND
        G1/jwXI+IKWbcPBLuo/+Fd3/PYl9aIxsjhokK0WUjyNJGHB0F39kFhm3RjVCLjREPgEv8s2V
        9lZRJIV2l7kBQ2jMl3tGrajHeukwqFdv8b7UHzK3VUpefC1EVzLqC7ADnL6so8jaPGOYdW9+
        q0wQgiqVBuiJ4bFOGWBp8TRk/JWPvr4DDY1ssJQBaz/N9vN/R3/zh2ie4XkXSwbSAYJYQ8oJ
        SRZkd+vFQ9Do9ujusMUMtQXDtevs3PkRzXNfY/vS10kbXwV9mWyXUb1AjHsvPArhfcSNfHeB
        g1TBvbJutwHSEvQ6dvAD+uv/L773UzbsFq6KeRs1WeaINfHzWpX9ozvLPoZttRJKTWnylMZS
        TO8QZ9AeJ5OaWjiqcTzluN37wuM1wDbRh9hTCznxFPjRZAYdMA0t+WRCM8SEZh5Ggpl6V0rI
        g5ER6ZB+D7zHPSrl3BxJ90+IfKLmaz9U/vXuX46SPner6MvqsXruxTHrWfZzmqahbaZEr2x9
        Tbnr9etrfZJ2CgDrHid07bqLvTVKA+oHHFTIBZh+nuHcSwz7bzF1RwbHm7Lj933RWSq80/iZ
        xoSatrTqiO+RpMOGPZa3b3B4+DvajS/Qbn2N5tzXkclXgCsYG5gqZRRzSfGnIJldjrw8OTwT
        USflfSS/iy9+x+zG9+j3fsimXkW1xz0hOeEpWm08ZY5f3o/yLAcPt3qHoOI84rzyyyQS9Vde
        QHP0igoFXgW5IJ4zRvGyCu+F4uWGoKB43YQe1gta3cgSRFmUZtgBLG8CPTAUbSwZvSwZs8yV
        3/kzw6Z7OTr3O45gAAAvySAwiYTNOE+SottWPUMnNjUB8zauC+nBZ2ALkmZ8OGAxO2ThG2xv
        X8LQMiWo5WjxaOG5gCeRMX3mAet45Ux1bdd8FlZz/KIuPTmgm9B8Ci5+iWHxayb9dcQc89Ig
        rB47//iadfLMynsL61EyG74kDXvY8CH58E36nV+Rpi+zcf6vka0vI5ufI02ugGzhTBDdCGlh
        JqHkiWA+0OiApAWwhw17ePchdvtHzO/8hqF7lY3JLRJLch9ZNPEmAE+dnPq4CB+qsPLBz7Qe
        v/EckAwprz1rdW7u8h+FtdCrFL8eeQtfbTYO6VjyoH4OD05g1bWUoDBreG95j272Lm2+haTP
        YGyMSRFd18w/wos+Lrv79SOSDfogll9q8cbfrjZRKR5W0IvBJapkLB/SyA4u15nvfsD8YBdL
        l9i8/HXatmZaT16W4ZkHrAe1sTrJiFQgAnqO6eYXYfIi1r+LNj3Q4BnkyF13d0Ghs84RZJLH
        cAREMJ/T27uYfcBh9zNk7zI6eZl2+pe0m19ENz4NkwvQbCO6TSPT8loLJO+S8zWG/h0W8/fp
        96/SHryPDLs07CC9gUyj8t2CvBe8DIeRx3Z/yT1+ut+1fv9b4MHBZs2He5AXvh7IgpAAACAA
        SURBVLe5lBH1JcPpqSQllvT9h1j/AehfIFxAtKpYrPzyRwZY91338VAuPsKcgmcS4a4N6MgQ
        EqAq7rpPEHpE5ogtaIY72PINDg9e5c7eVdr2s1x+8au0G88hTEPk8J4elMBjKox5EDsDrONW
        5UXcgQ20+SLafp5BXmWSdpGhKb/r6x8c+fP7FupJPyZhkgsq4N6HsEN3g2H5DsPeq5hehvQc
        ptuk6TlS2sJlghmoDMA+Q38b62+gww6TvEejcxAjqZBMEJ9GiYQEFzbWe9mzRxz/eVa3ncq7
        GXiKTGG+xTC/StvOMRxphmiYL21Wj9buBqaPfa6E4qp4A7ZeclGFCIvJsIpbbUD9AOx9WL6N
        777KbO81Dro9Ni58hfNX/orJ9l+CnIuQEZAy7fyoPdkL6Ayw1iycpZXqeJDUn6fZeoX54Q/J
        7INTxGBCauVjX2+tkdlIEUaaISyRItvii0zCaJoMMsPyB3ie4j7FFkoWoQ64QhzxTPKBiQ0k
        N9CBrPPCV0xDsaFe1NKXdVYfsEzPOQOtMPHCGXop5g1vJEmP5gP6w2tMz81xzRgzkJYVYN2d
        EPnTzTkKWvfnxKJLoogglkyyU5JBkqmtZlVZFZ+jHJLkBt69R779UxY3f4F07zJk49z5r3Lu
        +b+D81+j93O0TENHra7syAb85C+cM8Bas1XUXgncBOkKWsLCof+A5F0hWe8NViJyl5flCO4N
        roLWmiSL3VxsUkash9emdJF1lJCBMcnIWHZBTMCx9YtW0FzHcglGBnVMO4Q+DsMBq8NSz2xl
        tfGZwp3VydKQfEk+vI53t6CN8pBVI/SjtvXQch0I7w0QWidrE0W5LssALEB8AiP9MAO/CcPb
        dHs/Z37nN+j8TaTfwdxpp6+weenv0Y2/pvfzwRiUQtxwzNaFHNfX+uTsDLDWLBJRZUpMDRd0
        C9n6Ar7xebruVaayCMDxigT3ep1jYSKsCiMlIwxIlMxHppFCjJexUquR78Utl5DAqaYjF1VG
        tedJSeWH7rnrAEcKKAW9/3JPtWlNurjEkFx6VJSGGf3yTYa9n9E8/xLinyoelpWWqKgrq9nC
        o7aeRXu41YyAUDLDOKwnIWOKkUXpDIJJLsxaGzLgQ0bZRexDcvc6zF7D9n7LbP81xK9hzZLc
        XMLSt7j44v+BXvwH0JdoxkEm4zuN7yljGYysfT2ZgtIzwGIFMLGj2OoK8QzSQPMcuvky3f75
        GHpAz8PuNFqHMKyHZBJj1nEvww+qZ1fHxa+HcquLOZKRRa+pFhEIZFmvsaoSOroajyUft2+f
        RitFqF6m6tSeQh1oZE72t+kPf0pz/uuIfhpXAc2jh+1jQ/SjOKP1mjuWvjgCIOHxGF1RUm3I
        OcLZRgbwO0i+iXdvMBz+hsXBz2H+Hrq8wVY6RCc9B32LtZ/m3Av/jXThW9C+SK7KIjRjfV+Q
        +vfi1uq/1xMQn5ydAdYRKxeF69i9H67JRdqtLzDXF3Bu4yXUetCkVlX3jJKtOnIqGqrjN/G+
        q1xjmVI8XitVFVOOvejqJgvxu1rD1RA9i/FdavHOGhCeGSVrusqqhcdSPgsfmMp1uvmvsf2f
        oe0ryOQKRkK9YfV5/Pm1SPcXVPC17yWBIlGN7/TgzkQGyHvQf4TN32TYf5Xh8NfQv4vaRySW
        aMoYRt9voPIXnL/4j0wu/ANMvkQvWxhGIiYRHQWp42Hq8Z8/eTsDrCMmYx2QeMgrmwgiG6SN
        l2ial/DFe7jMYtLyA9/8UkBEoaqPytrFsC4rA+B1cEPlEJxxIGz9mzVvy6s2+th2tLoRpVYy
        19DncSmOPpW25i0UL9eL5yoDqA8g11js/YTNC6+g0+8AVwLaJM6nWSalxxEeeeFCa59pjEqL
        wtAesQPE7uDdewyzd7DD1+kPfgf9uzR+i8QCbIhmo9TQW4vrS2xe/AfaC/+Ep69g/lxp6h/K
        pldJ+2r3Oq5Povbs/nYGWOs23ui19aVk6KSlaS4w3fgUvr8VJLqsKnEe4IVx6agNzU5DTKCJ
        EFSkNicH4EgV2Tv24l4KU2vNmNeYwVctFGNtpZeU9hHeYbWeP7pyX52Suzba+/z548LBx5an
        EmAMyWPkq5NL8rCBYYNGMrPF77GD7zFpztNsXALAfEClLdvJGt9Tz/Vdzokfu83lyK99DLHq
        bwOsYp5jzNE068CXpOEmvvwD/fx1+r1fMhy+hyxvMGGOckBq5kSWGJrUkGWD7M+Rtr5B8/zf
        4pt/ies5TAKSkjdlg6bweDB6jvcqMj6ifPLJ2hlgrZtEYKYIlGkpUZKgIJdJm19mLj+kRVG6
        Y5fcx71uvaxrI20oPUjxgrwW91VivM7NOwJaa9kjkSO3SHkRakFGSTsSfFz1GmUNfdYuNj/2
        OuPjOsq5jFIj+F1V8j6GoR9D6t+rc/aecdDqeP3Io3JkFUex/B6v81CduqW0wSvUVE80xrg1
        2tEOH7C8+S9Ybjn/wgRtXybbFVynxNizMvIeYdQ1q4c4cpY2nqsaStY2pth8yjVS9FwEQ7yP
        KUHsgd+B7iP6xXX6O79n2HuVfvEHWr3BVIeY8pQHkmQwi6bt1NBnp2OTtPlNtq7877D1t5i+
        iEnc+g0wlthI3Ynq9487j0/GTT8DrDUzgSxr/cFqZdKxYnKBNP08g16I8gTLPPhA0KNT92J8
        1fGPvPzrnnd9gca191o568f4hsq9+fprrr32xy736KrqnJnxZcrPfhRNikPxcDvuujDx0XWu
        XmfVox4gElmz9V7IR9DELRWmBNxIVsBEHJoFCmwCzaKj2/keQ9MyOf/3aPttkI2YmaixrkQK
        4HNYpfZi46jN7ePxwFqbD+C5XBc9ENph4jPobjPM3mRY/oH+8Hf0s/dI/S2mdodNmSMWfzWo
        kdouBscOTrKGQRs6puT202xf+i5p+7uYfxZns7x/Ub9Qxj7T1WzK8UM/UXYGWEdsVYl11BSR
        CTq9RLt5EV82eBkL9eC25u4/jovg+Gve06uBMj+eFcCtg0Qldxlx6qh6p9z9J0DV2zLlbtg6
        9sC4rDFqCt+pem7rq5YS98pIjK89R9a9gOMI+jC2ujGPB2nVTVKgZYkt3mb+0f+FHb7D5MpV
        dPO/0MrnIV8h+ktjQpILmCi59PoJK80t8boN9EQTdQbrUe+BA5AbeH+VYfYO/ewDhoOr+Owq
        abhJoztsyCGSHFVBTHEXhBA91FpuQ4OlDRY2JU+/wOaVf6C99F2YfAZkq+iGDawy0Oub5R/z
        rJ6snQHWEVvzUkYrnBYt0myjkwsM8wkNTVHZfMrM17ONawB1F7kvZcyVH8MDWSOdWb2WODYK
        Cq5bvVkLPHmFqfp6XiY7x42tRTVjTEJUXbAKskc+mxok1iERsNYX8EisFgKLw9QEhhtk+0/m
        /Yfo1u+YbH+XtPEVkHMwOQdMgS3QhqYqeUgqWvED7kuQBSILxA8QO4R+H599yNDdYOjfx/oP
        GbqPkOEOKc9ockdDR/IO8hJrM+4t+CaIkiSjUprBux7Xll6nLPkU0/PfZXrpfyAbr2B+KaII
        Mk3hzKQO3hB9GFL2idkZYN3DqkcfI7cKz0QDuoU2lxh8g6gitnvcoCfbgsa6h7t/t2tTSju8
        hIE11FkDsBGrIowKOZi7r/gj4VAFrPUlVMJ3DEXW/DopxbFHXnZ9muDR78EN/rHQ9+FNJLzA
        KR3Z9lnOb9Et36c/fJXJ9CtIc4V24yVoL4NegmYzpGooQJAHGJaQD8Du4LZD39+g727h3W2k
        u44Ne+B7iBwyZUHCqFOqR39eE0LGJSSvWQtlxRyXRJYJ83yO9tI32bjyj7D5HVxeimG25ewK
        GalNzHXjeWQ1ZY/PzgBrzcb8W8Qc1BsoICsFYE0uERIw+0DHk8qW/KnmGCsdGF99jdfp6iYz
        vKgZrM7C6izJCmjKUNTkd3NKVdpkPKUVWCpZP2pcydrvbM0JPMbRlZfwMWSLdehj1GYKb9Iw
        3UdTgiS03pPsGnR7LA5+h+gWXXMe1wmuDSoTxBSxJtZmIGa4LcOr4hDhgFYWIH2owpJpkiPe
        FznrwieJxGDe0qIVITS4LnGXqJ+y0q6jypItfOOLbL3wP2i2v0X2l3DbDG38osOQKle1Ph/z
        KbAzwDpicfOs8mjlBvK4cS03tJNLzH0SAmerwOXpMBXc83jr6zqhXm78UXW5/p718Kz828DN
        8exYVet0kHx33U4oMpfde/1rHV9K0Wtgo5XqEh/plDG5WX6/6kyoj9XpQcfbSx6duTjeDtHn
        6Q2ShaRLhAWNJvANvNvHRIvyapQiOIp7mSjkSlIJKsEH8L48x6GJ0NfIIdNcjsa9gIq047GG
        EkcHGoohoY8Yn2XPBp28yMalb5O2/wp4HpF23A/Ea8KmqLOuc4ryWE7dI7UzwFoz8ahfLlzv
        6GO5BWcjTKA9j/skPIwT/One1YDt1aOB1SxEDcmZLLjJqLleT4D0jvSO5xgFb9nBnJwtAKuO
        nK9vYit1dFh32upoNBl/1rYJ56FJ0ArSKDQOqlFR4ICX7Fqhy6wol2oZIS/EGkI+pdauPT6P
        QUxCwNEbGmmKZEvozscAk56sYJ5x75DasTB67hI1qmN4p6yI/nUer4S17ogPIEVlw1OcQ0uQ
        UskqCqKCZyfrlF4/y9aVf2Ry5Z+Q5gvABiJD3YtjAIhAZF217ihPjZ0B1j3sOJ2TJHZ1SS2e
        prg2j4UneSwmdXhqmOVcZitWwIodXEyhbPx5yFif0Q50ILKAZgFIDk1RuDzKeEipI5O12ixZ
        C90KgV2ygnkZha2iOaTDU2jC04BOBW1CG1/bhGu8dmiI5cisEfrxAYTxXKzq4j/6yvMYfjGN
        glKRot6suDchx+KCa09VfEhZSXmD1WCRAam1WLIKgb1UzMdIpjGnWLirMoiDoUSGEcZ5SZy4
        pdJTCANCpxcYpl9m4+J/QSav4H6+bEJ9cUd19JL9+DlaC9dPsp0B1jGLGy5+rgRl7IkeO12a
        IKp4dkat8pNs655W1ejOUlrTPCKTwbFlBxms9/EeI4MMQbKnI7rlNb6onlAJmcqNuzY1C62o
        diR1DqqFJxsMyyG5kwt3ZVGziaqQpo6khLSKtIongZSiIlsLne8xWTtuTh7fZ2JlhL1azMYo
        5xRLJcQNFQWhTJmRmEgtR3o41ygHp4SymWR9cetD58prDKdWyiVsbMFSS0CLWINjmAg9WwzN
        F5he/nt0+5t4+iwwZRzxJqv6KkfH8HsEydpcf8Kv5zPAWrNa98PqW+Gjy87tQJlw8zSQ7e6+
        xvcE8PjC8QXYkPEuk3uHTJn1txqlpaIjvV49pFUCsFbUl3+u82Dx67VFHF9UebFcbj4BccVF
        aTy8Jl+GEoLjDIcZmkxqFZ020WY5daQN+WfHSgimqMq6MNCjt5pUq1JBHsecSsM0OOoR0jk2
        DolYJZIDNGQN8MMMG1tiisdVd4PCW+E6bg6UwR4iCXPHPEG6TLv5VaaXvgmTz+BslTqtDFpC
        v9rUT0m+FCCVIq8z+uEnGLTOAGvNjvTNUekHG3fxyJjZUa/lUa+hpv/rGsr/766eiMUGv3P8
        2bCaQKMwONYP5GWPzxIsBcsWk5MdJMdNplbDkdUN5SNpXklwKWByfDXysefleB3r+jMFRtI/
        bvq4QZFwYj0HqFrXk5PhE5BW0c2ETJRmMsFTXddQRzOUNR1Z4WqzGTekj0+ceAUMoXgrUXHv
        JYMXCcRcjqEcaBEDdM0RKkr1YNbSNLZK0LlI4aQESCtvpzaK1SVbHIdXz61w5tm30OkXaS99
        G6ZfxNlekxVq6hle4xTjqx7N6CnW351gOwOsdRPHUhDJmuNqyJrJ4qi3+KBAR5M84haUMnPp
        kZodKdjUsRanLDK+OSVMKKA1hmISnNQQQOULwxZGXmSsg1Q05VmrwRm76NajvjEDJ+P7ru7d
        +yhvPsTFfi+eqfJbMnoEhXjGisiFRjjegYmRDwZ0qrDl6FTRieKNYDKEV1EIbh3LAwA3bNQS
        I7jII8J55UCkrmgV9ldCfOVfR51UyGOtHU/pQT0yZbu897ipyGqUg5XRcLUPtIKk1AXVjUBX
        rm7wehnXCdk/x+TCP6CX/juunwXfLFnJPspDi9ggugItLfX7UhejZ4D1FNo64UnZUcc7F/Ee
        Hw6iluZx1v34ag7hyrOykumTcoE5Zo6ZkSStdnD3uKGXA8MiY3ODpaNZaFASiY/3KeoiHsuh
        ffxbrrthY1ZTijdTuKEyqlDEwXryYOQuoxNIGw26Kei0PYpB6jjhlQRuVW2yFa8UX+v9fx+z
        TtbCTuHo9yPPutdDd7/28X3i6JrqeSiPCiAJ8xCRXA7nSOe/QnPlO5BeRGQrwkeIJAbHzuu4
        lEou3n+5J9HOAGvdxvCg+t+ZOklFzIA5vriN5gXqq136UdooMWMRhknJhplQCgcZW0VENRq1
        c+i8MwjewzAfyIsBekctBW8r1dN4uiwcnlXqY6R1TGhSS3LDukzuMv2sR1plcm4CG4JMFZqM
        kaOuq76gV018cM2rTel+md9Pmq6sahtSx3mVrGIBnqE8R6VFp68weeEfYOuvQC6MYBX9jKVE
        Yu2g1std7gVkJ93OAOuIRRhWyePaJyxEsZ7kOcN8B5Ul4t1jI3dXrS4hqhZcR0mJO3gZ6Kma
        4rkLwZdGng9YB95Dyk2EflZDq6hc14ca434yzKSAFVCJNXHHB0GlQVRQj1okHyD3GdkQ2DJk
        29FNxcoQUVh9vjWkP8JTHbM/KnDxKG2UuKmp10INFMCKzSoaq2FCtm2a898gnf8WS7mMksbE
        RQx2a8awPii4k58o+mN2BlhrJpSKa0+xQ1EJUxB6vN9lObtBIzOEMozisa0mZI+9ZKACrByV
        COnUFAawZcYOemzh5KWhQ6LxNjwIi9cBoh1H1/59gu3IjSXHyPICWPGMEioWmQgpRZq5h5yj
        lkx6oRkSbIAkSk1afcVVK9HdSYQnYWMmgLJzUldWPWsr9WDGJj75DO2l72Lt5xnYpMFK/2vx
        R9f4uKfds6p2BlhrNtamaBrByryhMQefY/1HDP11Wp3h1lGLLx/5GkolukmtvSn+hQuSE5rB
        l5DnA90sI8v4k2TBUanrSnRBowLcxXGPPrTHo2/zeCygxWIzqUULZQxVTf+7CCut/PKJmOKd
        4dnplz1pM5G2UpD0DSF6BiNSyRFRxGN51+MpzUds9375FYdVwcod3BShZUgvMLn0HTj3N7hc
        Dm5S+hLVBpWgJpS60qdgm3owOwOsY+YIuWSSHEdyA7YA36E/eB31mwjLVWHfY1hBaMiV5LxH
        lkdNwBvoweeOzQZsbugQYBXQKatCTuryygRosZWi6Qm3ox6AR4W9ODLKtawyfuF/xsPr9XFK
        yBz7AJYd74xh0aNbSjqXguNSj5akmiUVW9VXfaKYLsc+m9WH6EXGp0AQMVhkijcvoRe/jTcv
        I75Fi+DSgDTgoAy4lKG6Lk+1V7VuZ4C1bh5zAV17jCWK0Aood7Dudeb7P0WG91HNKA2Pr9Ld
        yRjq0TKjlpAhQS/4POOHAzbPyCA0RC9ZrEOLpElFLI9QsGjGFx3cx7Hgx2rHKabq/1iVvmEd
        oItXYkoyBU/RH5ozOQ9YztiQSecSutkg2uC26lkUJXrzqK/1JGztfUvtl4jiJEwmZC4wfe6v
        0e1vAi+ATUmecWkL31dmX+Kxycnjy2h/0nYGWMfMXdDa8+ZdSIHYO/R3fkTq3yL5PDou7Kgw
        3aM2MQ0VJFPoFJZCPuhhadCDWkNtna3tF6uQaUXWVuUowVcjC58qq57ssTFn1UpmT8qP8RhB
        ynvhJaNQDRWF3ulzxgdjMghsCZIaatlIrWVb57c+WbvX9RSlHeYagLXxaTYvfgPSZxm8JZXL
        UIqufySYBWom+9nAKuAMsI5ZrfptSLQoS5BrDLMfc3j739iwD2ndQufocV0EXlpjXEIWpFfs
        cGDY60obW5Q8jLMOJSRhxHSceDIOOxin8VBTbav7/2kxZ+SqqvprLcYaS6COZL+EUaWUAtji
        Y2Gk9EKrLWLQLwb0OUe3GmSjCUAjg+WjRbRP1MK7MhfMFG+34PxXYPvruD9fFDAy2foi8heN
        oJkUCqTo6nN/BuzPACw/9n3NNS8mR36WtXDE15hAufvJD/S+d//Bvfemj/2Tu/5IMDBFRRAW
        DPu/YXb7B6i9SfIDmtLsKs2frzZ6r8xUrDcFd9aDzTP5MJMXTuOpVCjXM20l890SXfxQ3aiV
        YkIJA0fF0D9ryU/IVkqkAKPG+ygYuDqo2hUwigBKybZGbjXUFlzwZVTE9wc9MgxM8gTdbEqL
        T/HWRuBfL4V4TCexvt8RwcIi1yMaDdY00F5g+tzXQT+DDpvQOpkeTU5VhBBS4bOevhKWP2YP
        BVg+/q/84AN4yLVmH4qmd4OVCybhJLQU6bVr060dPMMgwRupRFVurcxdr7kpb7g+Qnv98XGy
        i1d18nUX2EePpFzHtSRpDCG0/mCExIlbaG3nq9jhr5jf+L+x+c+ZsEOSHtcoKxgJ8Qe9INbU
        Cmqvm5f3NjNSipDH3Em5gcWEbn+BLQfoPFQlndVNWvsExws9Mmn1n+uie6vZAk/p1Tu2KdWL
        bzUoY+3b2j9KVlVKQHwXWDsoNCR0DtYZ3mcsC7KdYNJgdOFpCaQqBVO+ojrkPudyHI229hk8
        wOFFPkGiV1IyyRJILrN3jZSVIV3Atr5Es/1VnPOQcgmWU1FjiPtCyzqPd3M9C/aneVglxHB3
        kENy3kGlR1XIeUrjW6i2WCo1TZRBn6pBfBZ9qSh8JNoljrjgtR3Dx3tsJQ233gi8grZ77Xte
        LlqrY9zrjiNgVn+XEc+IxHilpIf44i36vZ/Q3fkxHPycKbdphQJUeSUlUpuE/5RTWLgFK6jp
        5oiGcK0vHdvP9AcDmp0Gqdz52gusHQ+rX443yv1c3afNJKDiXt6srP3/fn8cv01HnyZEmOiQ
        cot6ZpgNmHckGlSVlBImGXcju5O0gED1ZI9sqtWORhsPFzRUz9kw9Rg35gp1E5KGzGWa7a8h
        6cWYiVhMaaIxf82hCiru40KLp9MeArAqJ3B0t8EG9nffo599xGYSzm1cQdvnYLJRxMW2EGLg
        ZMbwRsgkzFtUJ4j0qBuNN0gVhq1tCGuqAbECGZ2s1WZZQIz6IbHyOnCcHtNhDAkQLdLXjtBj
        fkjSGbCMiSi7bzC/83O6g5+i/btsyAGNg+QWRAPYpCd2+YfH+6Pz++LnRFSsy5CwfmA47KJq
        vR9Io+rCmT1yEzCzkeOz5UDezyRPTLYb0qTBPZPJsbGs6c+PZP6jAIMxYHC0hPnRXN8g0mMi
        mLRYuszm9peBc9SU5h/Rmng06ztB9nCA5aEhjbSYRum/+jkuXvo8fRo4vPELrn3w77R+yOZm
        Q7t9Hj33GZhcRiaXSJPzJNmg9XMg23jaIkvUl6htUjNB4d72jKPdj7cUjGJkHPmwV/HeinDN
        dLFTkpBCRCYbkLxAdB+1GzB8QF5+RL/3G7qdn0L3PlvpDhNd4kOOrntZjZaPFoqHZ2VrQFun
        /OLQSIKsiLX4LNPtdeQFaN8w1SZaTszCw1q/+J6t6/DJWZVMR2msYVhkhmFAB6e50CLThEpH
        toyORZi1ohz0HoM3/tR11FA3Lo8G8QmZ5f/P3pt/2XEc+b2fiMy6Sy/YSYqkJGodkTOyZizP
        csZzju3n85a/2D/4+Dyf92zPG82iZTZZEq2hNm4gQaABdN+lKjPeD5FZVbfRILsJNNFo3JDA
        3u5StyorMpZvfL+YZtYyQXa+hk7eItt+SfyKIvaQhrhd4rVxthDBHFxn4vS2hpJtjtorzK7O
        mU4a2v0dVgc/Y/XwV6wO30bu/giLkdDsECdXCPE6Gm8SpjfR6Us0zS6EPSzsgzSITHB47sQP
        zyIiTuUihBIh6cZQTK1vDclhhXkbamvn3aaDvETyEmnvY+uPsfUHpMW7dEe/ol1+COm3zHif
        IGtCMujKa4Yiq+Tv5nQdZ968rBaX2FhZWZFOsFUi3W/JR6BJiTaIXIyFIY694taewAyQULus
        QFYaNVI20oNSvyKi00CWApM4RuiQe872cTp2No9RJyxqiUHr8LMplhSC0DJj9+rXyeEVsu0g
        hMFZ2aX2URt2eodlglhTGAw7LwgSMCageySbo7NIs3OTeP3LrD/+Mengf9Kt/gVNdwh5gSwV
        kx062WfJnMwc0V2kuYLNb6Bh6o4t7hDiPhJ2kbADtgM6AZ0iEpEYji0R6B2VGU5OniBnZL2A
        7gjyfVL3Cbn9iLT6iG55G9o7aLqPpgMmtqSJC1SWkHx3cz7yJVYGZM3CKLJ6tEP1GafPv9b6
        hxRGhg5sDen+mnSYmaQGrcPXZfc+SwF3a2ezbLlQKwuWMpIDqkKXO7r7CRMjakNoGnqKmlo7
        FQbsVu0LnKKy9qgVDixTpBTbvTGQnMZaIm3YQ/deJ+sVRKZePpFhi4bnt6dyFjtDhFWKeoWU
        LFSAZek+ZQJm13wcYHaNyWsvw/U3OPzgL0kPfkqT3iPaEcYBiYdEcQYE7RK0QreYIARyDqxo
        CNGdlTDDZO4XKUwdmRy8ntRrFwF9Skj2zmXuyKlD0wq1I3I+IvOAnA/AFkQ6aqymISNmRW1q
        Vj5r9lENdZqOKlju6WCZhzlDWmi1pZg9pdSSCloL6cEaW0K06MSB5Rkn7p6jVfkCrM/zN6Go
        3pRrYoZkpRGhSx3pMEPIxN2JR2Oh0B7L4LBgs2l4drRLLRY0kAJoi2kGVqgZySbE2cvQ3MCk
        8ZJJ5QiTIQJ/Eez0DksKCZpQbto40NqqRzVWZBqzzMn6OmH3Kjuv3qTd+TrdwQ9pH/6CJn1C
        o0uEjFlGSKBG5MgvRPS8PJdw2CyQLZCpdSvFaV+9vlUn791qWlijH+ezEjoCHVETlJEFJ/93
        B6e9HFMkMwXp8IniRKWtNWrXsjDI2aiG9hnWH52Vc5fLZ+mUfH9JWiRChMTdYgAAIABJREFU
        G1xcoNDrbu0LMsulyRPKhaqhsGKdgCr5oQ+hy25wItNsdSn6PbCxBqyPtE67odTbqO9oWiY7
        0ZlvWNoQJzeReK1/jxFGiMcXry7flnY2HFZx532zZAMWI4gEhGmZs5sCV9D5DaY732Zy5Tss
        P/pL0r2foMt3CPkBGjMWMsm6Pu2p+Bkx177Tnrishtplto5R4b3aiEHSCrXumPEA6nhKrUNV
        6hh/z0wma1s6gV2ZbgmYOJOnSFtQ6AGf0aqve4pzh3ekQg7ehl6CHXW0Dzqklf5Y6mNPXGty
        7OvWnsi8aF6/zxtRu5kgFggdtCmhOREB21WXG8u53AtyrPPLkCqeuZZV1ihCUnzgO4OlhqZ5
        GcK1gmQ5Ht3XgupxLMvlWyhnSgnFtJySqrWGRxrm4tdYoIIefOBtTbYrGHvozi47r16lm94i
        3fkBq4e/IHAb1TWQ0azD/WhCUGf5NDOCVfRxcZiWcLaq4aLUviCUDbPmUsE9q4gDKzWWXTE5
        LMExS+XYNSOy8t5LVndWFnyBan1Pyuc942IoPEwiCp2Ql4nu4RrplGBOCVM7nL3oJmd/m62d
        0WpKB95QGq0pFb8mofOIt4stIQZk0vjm2LOYyufJA0dW7hpJpanlJH0qPv+YUyToFWAXLROk
        j8JjjneBLufCOXuXEKMS+mfG0YuUYrHXXZJFjEDUws1EgzU7hFdeR/a/RvvJD1jd/Wua9j2m
        HJLzqpD5J7IlB5aKuH5dec1appL6nrVlUwnd+sVnBREhPkqTQh93exzloFVQUt9OdtkjISO5
        QXLjRVDxdNfTuEl53wysefwudnzxurPSoNAqaVFGQloh5OgzX0529KgewiOvdMLbXM61+cVY
        hcToUGesIqPiLI401kAHq6OO1GSmgEwCVUFIkM060lmvR18AS6AJI2I0rnxDieZ1t2QtodwO
        4w37JGdlw+teovVxJoc1TLK70xqUfKuVEyd4NObhCCIJrMHkBsYuujtjZ3KDdbPL6uO/Y3H4
        a/Z0gdgRWQ5BMlaFGArmqZR/XFHFxu/nb6mwMXrjf7ZR6io48HOYV+h3qVFqN0gsQYVHbFIh
        13x4WOsbnNmVHbSE9lXUQhIusLNKpIcttsyEXFVL6nvVFzleF9naedkmcZ9vaiLWj/X5Bum/
        b9oGe5DI2dCr2amnpCCispan25mpiKUMvJtaT8s9dLzNudGCFgeZilKSUmRkGXCHdQstRfmN
        TsATn6oLYWeLsHqHPRRTdHwzi/+txjn+KC90U7tszDD5MjKZMb3VEOItlrd/yPLh20S7TWxW
        BG0hFRyKaBlO8J99YYg7wWNXoWoIjB3I4BA2PoB/MTs2FxaGh2p34mcf/9AjcHrEc3VkdTBa
        yjGLC0SsMnaYkRXE7IPMMnZWwgZa4jPX2CVZhM/URDdOo/X/YdB9KA4odpGchESLzAyiM3r2
        u6nhpIBnrRaUJo6JFC1DQ0kD2lBLiUW6ktkoVdBXNoCrxyTCvngmwnO3J6aXeVxh0TvyydOc
        wkuOJDpTLzqnqwT7fZr914nNd1jc+y8sHvyYZrVkZhlJiqGkCEkX3hvsGqSbQli5wN4jx3Li
        AX7awR93bZ/9nM94gI08pPU0MOrQsEWiPepgrQ5ILLNizwUN6Atij11DJdwyM/LasMNEjE4C
        6LTaQ2T1+TLCsg6M0tgp4YB4SUXaQ8grTCJiYYjea01LSimEftfu51Uv02jXufBh1dPjpzIW
        agw/ecnWZA2oTkj5FnADnV9jNhdkdpX2w8hy8Sum3IfYkenIhVQFSSBLHu3OjS7II9ubfUGR
        yChNHNe2LEBWl6JaZVe0MSXU/HUbJj03ZpJ7KEM6Skh08j+ZAMEc6GvVhZzBxBxJL9kl2ZKW
        kquQUR9YWx1A+4DcWKF/fuQlGHfTPW3sGLrpl2OdnTOB3yhdMsCMqEprS7IosZmSQkO2V9Dw
        J8xe/gqT+FWOPvofPDz8IY28h7IiJinJWsLiqoTxY/XhT+uQfAHRS3m7XDiYaqoopmDRO4KH
        HaycJiYSkbzJXzUcqTzyCbb27M0Esgs8Eixgq0x+kEm2It6Mo0K4YkVaTcLprqKNUrnyRmhO
        dKVXFCWTj34H7bvo5KtoGVWjyJ25FaiPSR/l+4ykXSJ3dU4Oy0uBTugfqJiW8seciQqJjowR
        wtSVQOwGJrvo9RmzyT6HH2dWDzqm3ftMcuu5ugJB+3rBRTUVxRKQBLKQFpnuKNF0wXmOSvdJ
        xlGZFyue6XFv7dPMytyhIaY0MiOnjm7REVu8PDtKHXOB45zWU9SHSmWGzZQ0M2F5Qbf8HaH9
        NSJvYhKAMnNb6rti2buJhFF38LK4qcHOLcJyTuzkObgGb9EaRIkYQiCX85pQyThSbkoOrxKu
        RHZjIE1ukO78Nd3ybRpdYVkxCTjBfpFpumB7h1C4rXJAmMDKSAtzwKiFAlgdUPK9H2frrp4L
        EweUSi4zFppZPWiJql7PKrRWZ0kLrXQqa4Q0vJV32JUl2n1Ad+/HxL3vYM0uMCcRvF8vCZHO
        c47SHez384t1ezyxnWNK6CmbZ4QJyYl6GcUab8LWlKgUGBGjtQhyk2b+J8QbV8jcoL0zZb3+
        NUEfFBbINAqwRk3pcxSF+DTbAPEZLnJqAVlnusMOWxma1PUCx7Q4AJKLsvPWLrZVYZLRb7Ki
        SemOEjYxXGLJR2bOJFRjeJkjD7AgoHTgM+QFSmb94GfI4T8R9l/D5AZBG1qM1pSmFtlHx7hJ
        LH057Hwclo203upJlzo76ARE0l8YHTi0yUTRMs/3Mszm6M0rRGlYfPL/weKfmIUDwIZRKtgs
        YY3Ucgc7v0tmYj2Gpj8WHFeTlx3dYYuulfCIqkEFoNbjreHWiK/8Mq20y2B1j5VMP3ycBFlC
        epAJE2AWHJpQ9TJOnROap4NCoQv3N6xQZ9U1afFrVh//mPnkLaS5hVn0gW1VMgEpUAjQMuN4
        +Zo659clLO1ZEEwr0Vihe1XbCFt9FMFDbRVQWle61Wsw+y7x1hXmk1c4/NBYrn7CXLoSDNeL
        kZ5dvt7vbMUqZKxN5GVGW4hWAaJ580F9saK8UPkqFVC2tQtjAk6mCCCGaSrZAjQpkBYZOzK0
        EXJwXvdwyiRf8GhKzKO4LmTn3k2OczSNCEZjD1jd/Qe6yas0NyM6/Q5mr4KU4fxjDuryuavz
        irDEB4+xEYhOCpyth4f76cwlf7fQUWV3RTJoJhExdqH5OvFaZjffYX2nJS/+EbW7fQpo1TmO
        hp+Hy/UFXrLqZ3ImLRPdypz62RQhFcdW1Yv9CSehMLZ2Aa2CQ8XrViapqHFLUZgu4rY7wLQ+
        4SwvDhXZntXAgo+6mUB0quaJdlj6kOXBX0Oc01xTtJmRbb+g8Y/TNl82d3XesIaazwvYaLep
        HZGhO+YFelctVqwMWUvBlSSmoK8Trv9vzJorrN6fkBZ/T5QDAi1JiqacOH+Q5DKMTXeuPstx
        foPT0SIBxsqwww5ZUxBko9SvjwTrgpZ+p+5fdGsX1I5BZ+oiNkNR2lUHCwizQA5aUsgxa4Nv
        ov0wmwxjX1L/U/Zd10xRyP7obIbkxDQ8JOS3WXzcYd2KyZciQb6McYXMxBta4kP9w7gQwwa5
        MW5mUMd4evzWsdulov7rb8fJxCP3lX3qrWbHqZwfc2ZP/oXbOTksofKub/r6zbMxlMjVD0Vq
        bSsMzyk7GjYjy9eQq1eYWMP6TmR99CMm6RMMJYmCeHHSJcUm/gIhcS5WSlBVqzJb9l2xDXCU
        4VBpkmNjTHP56LXgXq+Y9jiafkHUtPHybY7PtznmwK9TbZ4Yfi01YZLJnWGHmTCZoDsBU9cJ
        HC10KCIrtUNOeQmhlEqAJqs/DyAEsBatpU1bEdJdmpxZ3mlJ0jK9+W9g5y1EXgauOoA1Vxpv
        cTKSitQvxJTWb6LObYc55XIvjTb62L3jPWkvHa/T8rjxA4eNWPvHnBx8bjYcHmfnGGGd7o7b
        PDVDONTvSZbLP0BmiLyEXvkzpqxZoqzu/RWNPCTSOtkf5pQ11ZuYDovmaVu/Y7hanZhAZ9g6
        FXVmqQWKx2YIjxRlt47qgluJSkY/WlHfViC3hi0yOnNRVoyeRnmYiR5v4zaseNlMCDY64aWU
        4tTayoQFYu+w/PiAtHyb+fW/IOz9MTTfBn0ZEyVpKs2eAqUxcYFes0K7lHsHlUq0F6x4141S
        zmYmUe2RRqg8usxrVCUkxKzcx5v3OuX1x/WjxzUrLrRU/aD/VnXlBCSSmzfQ/cw0w3J5j7T4
        n0zkAWaRLJC0RWQNeep1hvOwuvVI3Will4rqVm2ZExweuvVDl8lG6XxZl5JBo2JtplsmJm2G
        aOXRZZ3UiGzcFZZx7XXTes72EfuDAF3qQBMTWxHyEengAcsHd5hc/S3xyvfQK9+FyS2QPbLM
        wWYIDX3n3sSDu6D9sZW/MJAXjA+kfmbrS9BQU1fr783jyS+4w3L18cLYO37RWg4SB+SaVA2D
        x48TXWiHBZSB8yI6IY6e72yCNm8Qr7VMFu/StmtS+78IcoSETBYlkQnidB3nVRbqZRNzkf1K
        0C0T1tmQDG9LUpfGhrrrOBpwUwJiRdW7hbxKTp8WSpYAnhb1aWVxEp/RyjvReWhyPrcOGjOa
        sKDrfkl77xPa5S/QxU8JV96k2fs2xNfJXMdkijFBdOKOqjQM6mYabPT6Gyms9Xq9xsD71aeK
        QyF64xjrKRpGhwRKTa3+aJVNotLo9AHA42thYmcl7zkXO7mr15+c/lfFYZHItEQOCYufY7f/
        O93t/4x2P0ObhyTpSBmCZKLIuTmsRC6FUUVzJB0mVh8vCSuhsVi6SIBu46vLYv39WTp4UokX
        8c0xSyapYVcg3gjoTEl5TVZfK4pvvkME/vhyxfFbs3J3VdCE2MQbTJYxbUmaaW1CJy8hk9eZ
        zL8Je99E9r/OZP4aWW+RuUXmCjAFU4JBMINcar3xWAxTsILVP2dPDvtYaiAv1GMpYb2f/Teh
        UJJ7JDbq5sujn/HTcpILHWE9Cq3yelSwDsh0MoPp14g3V+jyQ9Yf3yamFTGWjchahhN3DsdX
        4nzJgiWlW6wdSFhmBbfR1SWzEZ2y9elgSWFKUVtQ1CCtfcKBae1YM+LWGtduHqmKPWJjehgr
        3Z5cOONVoVI4KYkJS2L6mHx0BEcfkR68TT54Fdv7KmHnq4Tdb6GT10CuAzuYRHJSNHjRPZMG
        2TNqjVX6iLLgWTFzgKsV0rA+cKq1tiqmUkIxk1QmOso9U85bro+lEHXaZmPqODXOhXZYJ5mY
        oJ3neTkIK7mCzL9JuPmn6Op92sMVwW4TpHNJ30cDt6dkhotfOnKflWHLwk1fnFUtUYyj7a09
        x3Ysbeo1CevfSoqlBqmDbtERdhrX0ZThsT6CU5zfpyyKk3isPGYxD9olFdnqevv77Ry0BXsI
        LLDVx3SrX5Pu/5Qu3iDPX8emLzPZ/yqTndeQ5iaiN4BdYAfEBY0pTL/ubJ1OvH5GSibXk3da
        3zbY/DnX/7jgbJIKc6onMhMs0KMDbHwyT7YL4rDO4FFMkDxByIiTB5HDHnr1LSbdxyw/uMt6
        fZdpWCHSuA7gOclm+cLxE51XGWkhZO0LsX64Wzd12czrMzZkPMVLiY1utQR5YT5HGqPDCEpN
        p6yM/v4cF0Q+870BijbooLRU3JgB5DImlkrBu6PJLTEdktNtUnqHvJiTHl5l0byEhZeI0y/T
        zF9GJl8hzL4KMgONoA3IFCRiTIAGk1hqcf4hawTmkdFwXJu3tACNaxf4o4GMiJFz7h2YJ4tl
        GuYxMecFcVhnMAFTH+OJKGYdHQ0xfgm9+kc0y3c5+ujXKGsmGiGvz/FgfIVaMvIyFToZLWIc
        NT/PRSbsHA9ja+dvQ014A/icsRFNuFHxRmpK6gxr/Xsz9cH98euNgopTT2OZIHXUiwzSlWWo
        IIVehoSFRBYX/NXsoz7BIOQjsANS+xF5+TuSzElyhRz2EL1BmLyExh10soc0+zC9Ds01/xeu
        IGEPkxnQ4Pgt5+YScSwX0lBHhTLW47/UQq/304u+FP4w9+RV+3OsNfpcdQlPvsNNjBSyMx8k
        ZRIndBZI0hCmXyPe/Dc0y7fpDlc09uBcRwxVwFKGLpNXHZpjYWQYduAh+N+mhJfLrE/5qw0D
        /R5lhE6gBWsNmdTO4KjD+CTlVaMAVlMvvpJricIUcvb1SS7Oq9RVs/PEqxjKoW/6+TaWGywH
        8iLQ6QRkStIZ6BUsXsXiVSTuQ9wjTHdRnRH16qDIHuYQZqBz0AbRCUEDSPmXvDmFFu1HiYA/
        LtNgTDEajEjlbD3p1Dx3DgsyWVeoTaF1ri0VV4POchWdvUGz/xZHR+/SdgsaPZZfP1VTCs7C
        oQxF/aSX8CGdXwlta8/YRilhtVJghlpvFmxtWJvQpozkHFvWQ8/slCtEwEfOSvFdKHxa9WDM
        +eBzEaoQw4JHOYbXkgTzNKyIDasZ0JE9QaCmeNqpO6SuAWnQQhpo5srsS9kHnXrpRWceecUd
        CDMszJw+WiNoRHQHk10SkcSEznbpbAdtbjKZ3mS++xKhmbj2aB9lPWoX2GE97gIGGpt7sTHg
        mBRcSURsB4tfItz4Pnp0G7tzB0sLLLqI6miKi40h0Q0WhU+fsN8A8aUAKbA6WoEVGueUe7ZI
        pBRHN2TFt/bc2pjKzGTALp34UMUydIsVzTwWsQohV1mwPtqqPcezEmiVd+mxUFClwQRKXahE
        fFXtvP8Ig+P0x5Z4UfHxIMHvFwORrkxteOfQmU0TZpBkiuVYoD0uOpxXnpZmaxCNiASyQZsb
        EnskuUKKryDzbxB33mA22yE2ewTdIRTGVDN5bGb03DmsPl7qw2mvGwyk/HOkeYXJ7tfJd/8G
        565tH90Newcy/uVj0tACcBsfkU/HBywZ5OLorPxeRnNXWx91OWzUSNn87jEPrZijbORkHsWU
        QtV4wHhjEz31sWwex8bzj+OaHolVTni3/ngSWCrYLu2L+hoyognEyGW55ywkPUSAYFLwZcUh
        ipJkQmZGZpcse6RwHZ18hfn+a+jeG8Sdr6PT10BvYexiNulZiUXksUo/F9hhPd76cQKToWOC
        YayBCOEWk71vcNRcI3Ufuv6fPWGnsDotGZYaBrnLLqxZQm53bObEfltn9eKalJGyskZ8FEY+
        bRLnmVuvxmMCRfkcwFJLsqKJqEomFlqodbnvlGTuHLMGsjR0dpVOXyJMXmOy+zUme2+h828Q
        plcxvQpylY452A4iDm3QGhR+ym7/3Dks7zFkhxNQ891SXCQVFsbr6PR1ZP4a7cNfMeUhJ4RY
        T34sJlhrzh9oRaCgnuwaa2/Roy+oOeRFESzhNc4mFJiNneC1nv3uJpV/ywzPSkKpWQXEfJ7X
        oylPYmO+gpnSmdEh5DAjhevQvELc/RaTnW8TZ18nzr5Mircw2acjkikFd0r9WUDNGS+EhBEQ
        mhOP8blzWFA2ACvjkT2GQxAaUukxWLxB3Psqy4d/D3xSnjl2IGeUfXhkEFWgy1ibyyzhZvTV
        t2YvoVz41j7bvIzgtancZd/YpkYJuoZmTD+Q+myPFygRVSwdbi/qV/9l5pzzSvIxnjI3mWRG
        jlewyUvI7HUmu7/HZPeb6Pxr0HwJZJ82T4AdhJlnO6WmBqBqWE5kSVAgIp92Kp5Lh1XiRgCs
        0CN7UXDqIbhkVOfIzlcxuY7l90ASlX9osHEP7/EF92GGqzyrgv+SkluDLB7x1dp6z7R6akbv
        rV02K5RIoh6FW0tp6xtIYhjwvTgrxEQLrqqK9GWMFhOPFkUCliLg9alV8zI6f5W483VP+fa+
        DbNvYXYNYwcsICY0uIp7j5Lvm10l8igYrEovCI93TM+lw+obn1IcFlKwJ4qT9he+bbmKhv3S
        qy3hbm1Hn9XGk9jmlUfLzn+kpsNrGyeE+5V1dGsvjAlYLqwdWXqNSsPIUkeI/YEXZVtz2IM7
        WpXgGNjceaklNnTM6NI+Em4Rpq/R3PzXhN1vEmZvAF/G5CVIe1iBPvhgOI5vjeLMKbV7WfGj
        o7IOUov2jz/G59NhWS2yjya/SzFTpe4OhugckSlVJfep72ZtpoCJ6VvTUo9pC2V4kU1EfXQM
        o9EAnbnTKumfFYz8RSrAZ3EWlBCcKsdSRnQKMmfRXmEtrxF2f4/dl75H3P89mHwL5BrGDGzm
        DTD1ppPTynjGkk3I6p/YO4kV7mPejRwhaOuvH3fbPHcOy+OY4rlxEQsoKJbSYfA9y+ednjaz
        i+8EpYGbBDWnCtHKi12pJ4Hjk/lbe4GsVhkKPi915hAYO0Pd9As2FZCgpGz43OCcNl+n4xXC
        7pvs3/w+zZXvwOQrmFxH5BpGBMvlvjOcOUIw9YGljqoDX2lp/NSEAnBVOeasgJMYSas9dw4L
        bMMjG6F8X4acxcrUesTygmxPPks4Bov235shCYTgxfZU002vdm24KpMhldz6rxfCrF7rTGH0
        SFgac3KO7WJ0k80gtRHiPou0R8stdm58n70rb6LzN5HZ14HrRaWngRohFs65gea43puUEs0w
        JQhDA32YUBqVS4qTl6LrcNyeQ4dFubZW/lc/WAeyKtiXACak7gE5HT6d4mbPjCj9DtCDRq0e
        VL0Cxx3Ts1+MW/uizXpqIcseXVnrs37Wt3A+ZwQ+pmEZfbvxJ46VUjd/KE+pTypjPMxIdpUu
        fYnpte+yd/0P0f3vQnyFJFcR2UWscWXzDKiruWM6OB/xuEpw0r5gSlNpyiu6uxSsjlPrVLaJ
        T7tfn0OHJaWrYGRaRBq0wApMKoYjI7YipQ/JHCC0CN42fdRs47s+bO13iopOLjWqElXRQu7a
        IXCVzYuxuT62SjgvpGVAg+MGDW9S92UCRZKvC6NSEp3CDDKN14loy5SFeAyjSnZQYBFlDZ4J
        SELKOI3fP6W2JA7tyTbH0j7r+Abd3h+wc/1NmmtvIs2XMX3JeeFpqBTJRTPIX6cIcPSNP6N/
        /f6X/Y+bH/J4XNk7qstUdB8YcxKQCZlChG/lN4Z2h8T0Ad3Rr5B8F5H1gHQfaCKPmRfLN/RY
        h4rZKGgS1x7srLDbjnNtLzTKuBu5dVIvpHnx2MjqFMZALxSMCJIDYmn04NNZLp1xI48I9OqX
        qoJT5OrLMUDGQlFXzy7sC4aYsrY5rXyFyf5bzG/8OVz7I3T6KqLXsLyL2aykZw4LEnUIUWUG
        rd364YOX+u7458dlwcc/ujzym0fsuXNYYGRZIwbBmiK6YaXDUeeZHmKL32FH7xNt6a3UJ3Yc
        Vpx/cWI5D3isjRev3ZFtGrg1BjgMlGgIx/VtROSnN8FAls7CYIqYD1UPOodlyL/Ms4q4Gk39
        CwjBApIjKU9h+irT639OvP7HyN4fIOEGyD7YLsIU1wgdyiCnA2E8Lih4cnsuHZYVPDupzO1p
        5/5fGhpboOld1vd/ghz9hqmsnkKx2x750czJyeSRRPxJ3mdrl9WkrJkaro+5s870OuA1J+t7
        bV6y0AqMLm7JQHD6mSxa5mmFlBs62SPHV2D+LSbX/hC9+acw+RqZqwRpMJsCMxAlZekJRmvm
        5yXbEik+lbNzensOHZZfKKxIf9FiJBLRhzfzXfLDfyY9+Acmdoco7VN6Tyv/H8t8jx8im7vp
        1l5460sJMvohZyzXwfgyznWWZWM+goYFTLyAb9pRGUKEUNSainNUp4VRgjsru0qavEG8/ic0
        1/8U3f19TF+FNAGLWHAiP4oWqCglzbT+Mz1L7Nhz6bDUJqhJhWLRiWJkgi2Q9nes7/2EvPwl
        Uz3Ccovo08C+9D3YfjHYqNp4MRrTW7tIVvs2/SopkmDDuvk8K0a8C15rrtojl8EaJEfv2hXp
        MXGKLFppSHIddn+f2c0/I9z4c3LzHVq5ieSG2DvPMER+QyZY92vPbERHq/6LtefOYbmmm0c4
        2YRExCwR5C6xe4fuzv9Ld/BjGrtDlq6oezyNU+u7jIpvOxU7IiPdwzPvllu7xLZZjB7AzhBU
        ydmoisf+6NO+rIF1iLgAi2kpsOcJkqfkLqAimCaMFrUG8g6r5hb5ylvsvP5/Ene+j8kbBHa9
        46eCWXBxVa3lk7qQSzZRiAfrPOCz6iY9dw4LDKEjJ0FDg2F06QFN+C3p4Q9YfPIDmu49Qlj3
        HD0XF1u8tRfexhHYqc07f0NkpUhuIAc0GCYriJmsRrfaJYfXaa59n/ilP0d3vk/W1yBNC6U3
        oIoppJAd1WhjpzU41Dp69ixb38+lw0IyEoR1uyA2C6bya7o7/w9H7/8XwuLnTMN9cm4RFSfC
        z9vB461dEHvSCLwU290SvYpODo411BU5rGkV1uzC/A3m+/+O5qX/gMzfpLObkBuCJcgRs6Y4
        zYRJR2VrGB/o0Bscc0Q/G3sOHZYXFpGWEB6g9i+k+3/H4Xv/FXn4cybhPpbXGF1J0bZAqK09
        AzuhOtCvxCdyWrWGBWK+xt1ZKbAEW2EqrNMOufkm0xt/Qbz5H5Dpv8LSTReSCK2DWUO5P8Q7
        ikpCJJbXypvv2RdWbPS3Lz7aenYO65GLZscu8gDG3DglJlgOiKwI4Taru/+d1e3/Rlz8jJku
        COLgz6CVV/1x81unO0g7ZUukPmrrHrf2afYIUPLMzsuo5HoOYRB8qLUFOkBI3T4i32Rv7/8i
        XPt35Om3wa4gTBAazCKmiSSu7CSAihByQ+UTPX6gVtuD4qBtT2PDE9xbn8/O3WHZ8StSCnZS
        o87iVCy45y69DSoljPv1tAkZ6FrMfkP74H/w4IP/RLN6m1k8RFPBo4SEWefPr8C3U5gUjznU
        FB1TPwDX69h1XSz1iYUemZGkwKhwKaN32NqLYb5O6hyE+Mip4DJWBhTiyX5xneW1C4RBs5Ci
        kXRFJhENct5nbW8g+39MvPV/wPwtB4Kqq9hYwqlv0AJXqKSWNc2U0b+xyWO+/2LtC46wKsVE
        7ffKEF2GjDNZOam9T+4V6AIJbAV0kJawfJf24K9YHPxXpqufMdUHlyAoAAAgAElEQVT7rr4c
        IllbRNri6LQPeU9jVfbbxMh9ZJULQG4U/pWdRiX0bd5s2cPz8Z4jjBzt1lm9cCag2dfPWH3C
        V79hZWxFzkBDZAUTJVlcWit2dCEjktE8ocsv0+x+l/jS97G9b5DzVZQJWgW+gr9nL/dV5eXh
        GBfT5vFsjgGGZ7aaz8lhGVVvrea+1v+vxWj94oWGHGIBgbqkd+znrVpQIWN0tiLoA8jv07W/
        YHHvP7M++Bti9zE7eoR0gjJz31fwJz50NaEonZ7eaTEiBfRf9JirsR6tjf1X/bqFNGztuFkN
        pArMQYZ7gc+RUPX3kIo7rTqMLxNWaY40X2F280/hyvcw9kDqpr25cX/+qP/Zbrzn5LBGIMtj
        v3Z+9EilhqmT6ooWfJVHRkYBv8mSoB8j3a9Y3v0hh3d+iK3+mmn+kKkooRVI6uMDukZ0Tb9K
        pPtcRfehekb//CHCqsPQo9bvyFNt1tvqb7ae7MW0k6OU3mHZ562vJqykdZIDKpEkMzq9znzv
        O8jed0G/AjZF5XKBes4tJSyC2CWpSzjliwCNo9TtmC8Rr2GZ1hlRQ+QItQ/ID3/M8pMf0N79
        W+b5PaLeIVjG1gZ54vOZLEDWfRLpiyUdj2VPdeR9zVHGJfsSWdUanFZ2Bxu9Z32+9C8gW2f1
        gtqw7gzKAP6QFvYjLmcEYQqeFrrQiXghPTeY7CHTrxNufh+b/R7JbiHJ0NOXcJ8LO9calpUI
        xIvmJUrppGBH/G+IYZpJIpgayApkidoDbP0e3cE/0H7032DxU2btr2jkCA0RLGJZfCHoGnRV
        rqaCTZCsnh7KGTBY/fEeT/dGAbQAqmiMJFlv/K3QLg7R2CVaKFv7fFZrtjZGBpBH66OWGU63
        sQ1FCefAEgJqAbMrTPbfQva/Q5LrZKZEyZduHT5Vh9WPGfQdslIglDh03xS8iJ6xrkXUe3G+
        W7QEuwP5Pez+T1l9/GPs/i8I69/RyD00tOW5OB+PBkyKgGr9OHnmYwqWEZZshEuf0x55pnhp
        ABWyPSo2MaZUHr/3JVo3W/ssq2weEry0YYaESnhn9AzAn2NgXkQwi2QLhOCsJYQrxJ1vQXyF
        Tib+QNWTG37PsT2xw7ITTnilOlXJ9NwGBdKfa+6uCWtaVA1hRbAHaPsJ+cFPSQd/T/vgJ8jq
        1zR2HxVPKUFBGioGBYv+2hpKdOMc00pGpINa3OdkfugTPs3jfyx+ycN7XB1Ea4G+PHBciUfo
        R/W3ZawX0KRo7lnfmZPaLYQyg1phDZzJqVjyHVOkYqYiOrmBNF8myxVMhEAC+eJxUudt55oS
        1rTPpCtVLD+BogHX0/D0T/IncP/nrO7+nO7eT2D5NsE+oJksQZxbURA0KZIiOVZHNNbhMERa
        RLJ3Tch4DevzFR39VWuVVMhmIzEPGb6qf8YewmBsLJKtn3oxTUrKVq+/Zxd13ZRHFIrhfs87
        lW/x6VgzRVSx1JFDJEyvoLNbJCallZUHIYdL5LOe2GFVefbjkZYQnEpYW8zWvWqGS1WvEHkI
        +Xd0h7/m6ON/Jhz8I7b4DRO9TdADsrV0WehEQRMNRRJIctGI9Wn0vqhvuWxeTow/qOnw9Avf
        2TFXGkKBuj727Iyqq1t7oayPqAr8WKqDKhi/R8oUZwjDRQrlt5FM6CwikzlM5mCBWDINSrnl
        4ki1Prk9lQirsm96zi4lx67RSQAUlTViS7CHSPcRafkrVnf+ju7oX7DVb2jSxwQ9JIQ1llaI
        ZKJGAlYwUKWArhmKFqDhDqzkhaXY7e9n4vX3Cgb93BeskhptIDVKrU4dkpGrwu+nvsbWab1I
        NnBeCZYzGhQJI2rk8hgfrTn7+jCSqyszI1tBsQtINtQiZHNOPuwZwjyfvsUB4Lnp7euNWeKn
        HuhG8ddDqOvfZQwzhy5oIczzEYI1kh8i3IH8AXb0Du3BT1k/+AW2/CUzvYuk+6h25ZoFJPgp
        Fmvx2UE89QrZ+Xo6JykTscGhVGfV5/WukuOiEk94wWQcJGVfKBIgmnc2C9jVN00ZRZtDSjkU
        /7f2Ilg/qiVGso4YFU8TKCldxRxKf4+d8pVBIJkhOaM6rH8v7quXThNI34y6PJX3SE4b4amN
        P5zhEYw4V7RTTwwFbMNoLWHi0tOiqZ46sq3JuiSmO9C+S3rwT15Mf/g22n2A2kOitAQyBA+c
        XDk2De9f+Kol1EjKGPnN8p9RQb1gucBQkzoaeoZLdcIjS61MSq1Ka61KM3mq5JgJpkiRWyKb
        y7yVx4vJkzvMrT2XZmpY6Pz+mRqEVIJ1l4L3Ca8SMJxliUhH0OjFd1s6YNqS4xt15jPQMSEk
        gnxq7P/cWfRaTz1pVnCPHrl4PdAn+gQnoMAMp24pMlti3o0Qn/dTWQILNH2EHv2W9u4/0x7+
        Elu+g64/JOYDGl0gocPUisaHX1zpsQ/AI0lWdUTjn4/bplqNy8fnp7+51AheDYlgXQkBe8Do
        MNxzmRbL1s5oVqLtQBGf2dhtGartcOaVYgoSgQ5lSW4fYnkBscP6TvoIpPrkn+ZCWKS4o/oB
        TT1K0TKD5AHG0G0wqWDMjJBQ64Almg8hfYSt36W9/xu6+z/DHv4vyO8TOCCyQK1FQuGjzj4T
        hZozHubgYM/qODFPvQriznelmlqlEvWN7JE60TlfIjEnCGwiadk5bKNgstzRjzuFQ2C+tRfD
        RHyAP5PRKL7u5bijsvFQxBmsNJU0YLZAZUG3vo2tPkLiIRJnI1d4uRh345govyLT/f/Zc20M
        Sgcu05FJ3vGzBHYEdh9NH9Id/gvtvZ9iR7/Glh+g9iFB7mJ2hFpy9Vl1bJIlhzhoIxhrLCXU
        GndI4qDSilCXmvZZKCmpgHSPfpJ67P2X83cPooI0wYUA+ij1+PJ4gl10a8+t+fbp9EQhKMRQ
        YA2pXwburM6+NszcGaJCzgnRFlt/Qlq8S5zfA72KqWdEl8lZAcRHBnf77p4BLVgLeY1pKgDO
        BdodwuI2dvQ78vK3dA9/Rlr9FskfotxH0hEmK0wzqg0q3ozMrBEyopFAAzRIClgh1ZcCKq31
        KneiBSQqLYOi7HhotIbYxwPfzHk7CAsgjTgxREUwPBXR1q099yaQs5MlEQWaMnp2zFwQlTM4
        Fs86zAxTZw6N0iHtJ6T7v6TZex+bvUK2PS5joycKaZBnLymgExE4WtxYgBwBC7S7Q178hvbh
        u9jBO+TD38D6QwJ3CRwhcQ0xeTcPhZzJlkhWeKJkCpLQYKXmlQscISC2KntNxCxCBd2JFSWP
        hJWRHt0oZJ9UKC9fz1kn0MQgiAeARWHXObiG47hM9YOtnd4MKzVOdYdV9f3ExjHCWeja6gs7
        gD5kjA5VKWyhC2zxa/LiV8j0W8AOiGLZLlOTkAhd+SzBC3l97JKxtKLrHrBYfMRqeRs7/BV6
        +C9Y+xEh3Ua55/lzaECuYpLJdAiZaB2B5AoekskmRVo7u9Q8LVLw72pSnJqWY2i8oCiKkUi5
        BaQ0DWtOfoqrcI4XyZkaMhKVOFVsWYjaMiUtLDXB8z2MrV1A60vdCtqoOy0K3bb0fyrFAjkT
        TK8HIUlCpXC6mxKlI6/fIz34Oc3+v0Ljvs/Vivb4yMtgUWrnov88juew7KGWj8MpIUyI89do
        JteQsEbiAgtLMkvatMCsRdLC/3VrpE1I24IdkO0BmYdIbhHLqGUktZDWKN72lV45OXlUJWsg
        I2bEilnJnlqKDh2QZ2UmkNUBgXHasJIlaKVKHlmPFdvai2NWWGszREWagtkbOav6g/PDneGV
        HaDoSHcPtTAUlRZLH9Le/2fClTcJ+7sYL0PY5fSztBffIv0Iy+imEsFUwCbEyR7NJIJew0wc
        sGYJ0Q6VDNIxk7XjSSx5rTwBuQVbYnaE2SGWDpB0SF4uoOuw9Yq8vss638XyAdodQVqS7RDk
        CMkPUVkTK8bLKCyieI+45q7jy93H2seXwDk5DDEsgE5iaSic43tt7bmybIksCY3q9avgIzlK
        oTfGs4WBCPK0ZqXUYGj2wroFA2kJ+QHd6h3agx8z3XkJibuYTRmoIZ5/i2bNEMIWRQygiDfM
        gSmORMskYdR5qDgoQ6wkaRIKpYVi0pJl5a+FobTAGrHO3yMvIR2AHYDdh+U9aB/SrT8hd3dJ
        q9u0q49ZtXfR/AC1JUE7giSCOVBuKLaXf19wM85UkOSwjMlsCoeP2yu3ieGLZiKgQYiTgEQh
        aWWqLQ+w+jg5c7JgmpBOkM7JKzMZ00ywBdHeY3H/R7D/MpNrXwWuPsVP9ewtVu0XG9/4OHpD
        evyTp2IR7+AJeYh2PFGndx7myHiXlJ97Ib/2QExcYls6LCyxcLO8X0JmHeQ1TV5g6RBrPyGv
        PyK1t2H1Lt3iA45WH0J7wIx7TGwB0qI9iNUK7tWwomoz7hQKlTRwhIWpEZnJsd+f7uTVWh+S
        kamSFq0PuNYZMcOjsB6VtXVaL4qZgkwEmQYvulutWI0jcenX7FkG5L2brmARseTrXbxJFjgi
        rX7L4Z1/ZDL7I2R2A9Pp6MCEyis/3O866rpfbItDO9UBmn7DjsBZQM/h06eOgnOvwohG0b/K
        ILgoZbSmv0BSHi8BCJjN6U+aGqJWZLo6pFkTdpZEWwKHTPIh0+Vd2sUd0v2fs1y+Q24/QNO7
        hPyAKG1BtivZ1oXfPZELxUzIRewiFSemFPI/A4lIbgqAr2X44I83MYhdwcPEDtsTulUHSZik
        KZIKxY0YFhLGyJFt7fm0Uot05ZoRTrB0wc2S1zEl0zWJsB89QbHO6V6gDPELPupWm1ynr7oL
        oNmzGKJjuoJ5YT2Lkc2Y6pLVwc/omv9E82oA/dfAjrOnyKRs6Ylc1royQW3EnXWBl2gcmgcn
        dN1OPPAC5HysneZ1xHcHrAyBFtQvFPyVATseyUnyiExawm5H3Gvh2vdg/S5p8VuWB3/P6vAd
        Vt2HBO7T6JpgPkgtWQmEoXvXq+coJpXtIQEdJlogFqczX6hF2y0UBokdJS0ylqpImVDZUC/w
        Gtja57Ced88o3e06vlbE6iZgU4FQIquKLjimXgMlYjql9esOfJOn9nWErAY5EWxFk+/Q3vsR
        uvcltLkK4Q3gGoOiWOnS2zEuhwu+UJ+5VL300dyQ3Fe5UndYPoglJXoymZDiDNWX0Pm32bn2
        B+TlO3QPf8r64S9YHP2KpvuYCULoWt+7zEBb0FwEWyloYUVIQMJ07RHYqdeOFSRzwdYINNOG
        FJY+DTDikt9iSS+fDTGR9BstQbzYrkaMEY0R6qa8ERg8mVWh4Q3tgFLQRxPCGmRJ231Ee+dv
        2ZtdJ+zPMZtjOvFxIcwzkhxxmbCCxxzxyF1Ee2YO61FcyBCOWqEWdtyW59iegk7dSSh0YR/h
        FmKvopO3mOz/BZPVb2gP/pHu4O/pjn6J5d8S8yEqa/rUtcx4GYlBoKJGjJWh9BQXzGNzd1jl
        ECWCTpS8SuTUjSSWnp8awdY+y4qbqpWT8quaIyQxJAphGtEQyjo76XWeZD3U59basMN/jCrm
        uyRKJkTjaPETHr6/Zi9NCPsTMhNSBtUyu5vdqRJ82gRmT3hs52vPNMLaZCsdWnzS3+h1HxvV
        1+rSMI9vguyS2COnKzSTl2luvUGz+y3y/X/m6JMf0a3eobH3IX+CmqGp0st6A8Eq0p7STDiD
        eWTluLUqwNrMJ3SrjpQ6xBqXBTfj81I1b+0i2RBTjfMBDESVLF7D0qkicQS9KUv36QM4+/AK
        KqGlmU+omBFV2GHF8vDnLO/8FfPmCroTiXILbBefLRucnxWGlotszzwlBD9ng9MaO6vyVYet
        TMwnf6Kah985gUY0zEjMsDxBZzuEnW+we+17rO/+iPXBX2Orf6RJd5hmvOuZSyhfgLNigX5G
        6ZQXzRHH1gsKmGZkPkVXmW7VFUfmrBc23pG39hzbaHMtVMQZV8RJkrEGdB6RSSmsj+A2T89Z
        DcSaQ824CnpmNPj2KdaiacVMldXDv+Pw/Zbd1wWd/SHwFbKOa9HNBY6rBrsQDgvGN/NQRLLH
        pI0CSBICSpDoyHxJdNZhwejYJbODzl9i0rxGmL/M4s6U1YMfEfJtoq2BBssRYgfWApUt4mwF
        0FrEtCrjZIbMFJsYuXP4h+TCjrq1S2RlbRqgziqapCM0EZlpubNKxG7OySZPKcoepC1qRuAR
        lu/rYaCASxBSJOQWeI+jhy1HH+4wf0nR+RzkZZJMqIgA9TLchbYL4rDs2PfjNu+jHcd+JiuL
        E6IWcv9AJokDSo1Isjk5ROLVHXblKmu7werg/4Z4m0Bp6SqkrkOzOLzh8x5+v9EZOhXCXElH
        CbIRNZ4ZHLi1i2jHSgbluksQutw6HeZcYFKovEckeo8870njmUK26XRMtZY1qr8KBfcYsJyI
        dp9JWnH48Q8gR3ZenSHTN4nyEok5JvHpHNc52wVxWNVB6Ym/PW5ZK3e81c0LwdCqwyaCWShO
        CzKvE+bXmX/pZQ7zkvX6B4T2fRoyJOs54z2FO+ORj/yqifmcY4QwV/K6w5K5Y4XHfJqtPY82
        FClcyyBZIkzUHVbTFQbdE/RqRqDRJ353qS9YRTOrwyp3Ti21BAUSDYfsNx/SPvxbjn6X2Hnl
        HrL7JkG/hMl17IIX3OFCOazjtauTfhrcmtUOX/DfWvlBKAIVhaBKTBBpgFsw/x7Tl/93lveW
        rA8WhHQXuoTQIDGQcvLHn/KoK2rLzJWra4RFFHQaCBMjrTMpF0XGi70WtnZWKw4j54RGaOax
        8KN1rnNgJwmZPqmzYgCBUcFdNdo6rkJufTtTQnB24HyA2O9o7wvLvGL2ykP06h9jhHKfPIXj
        O0e7IA4Lah5dvwVODEj8T7kQ5SliwZkTbAjY+3Fuy2jGBSPiCtM54dqfMdXEen1Ee++HzDhE
        VehshYWEdmdQyy1jFQYD1qYsIGkicWeCLVfkLqFOmlUj9RM+4Bb4cBHsMYWIxz7SAAkwmTXI
        TkPWNYlE6NlHRq/0NFg7qn4dUJWhwDfMgSek1nr9HskYlp3x17oVQe4Scsvq3gGL9oBZCuiV
        BuIOyC7Hg4fjt+FxoKudcLZk9NeTfvt57QI5rNOb9BCHMvpTbnb1b/sUEfXOTCaTJPpAt90k
        7nyPvP82Rw/fobElsfOOjk6qnthpT2wNzWu7uzpdgRCQqaI7mTa1SAcxl1Y32cU0R7OOahXp
        XxbbNhz7Yqw2/OSRX41+UTuDPlZTdQYMyCGRp4ZeUZiYC05I6TifmB+c+A5nPOCTnMDJG56P
        n7k0HTkQA5i1mN5FpWW1EPKHe+x0K8K1NXnyTczmBJ140xF83Ki+i1mB/wxKBZXTqw6e1fug
        Px5xcePN4/18drEc1slNwRNMNx5UfNbm/iJlUakW8sAGIYHtIvIa8cpbcP+HtId3iGmNioxq
        TWc/8LF/kZosNkrYm9B2HXaEj4/hc+NQb5LsrXFhlI5undUzMRlzkAzZVv2FKe68ijMyzaSQ
        CXuK7Aq5zPYpjYM5T3j9p3GM/VEOHuFEd1XBrP7XxrFalry+FjJiD2nybfLhT+jaO9DdR15e
        o/ENrLsKMieruhBsXeAVpSGVLaXmPJtTyfU7P31jYtAns4vlsE5tnxaCbv5Siu5tD+WSCLKD
        zr/MdPcN8tHbmK4Ly8LZu4SPbKRSVHNydnDqRGnmEVtnckr0maPU0Yo8XneMVsQZj2Rrn8vk
        tPGOM3saddSmc9zlBOLOtNCC17lRGzzeOR3zY344fsSuVWgKhHL8XioxM4JkZwzmNu3yiNXt
        BU17h9nL/x6L3yXZy1icomqFqTxiJlhZ430UJUKw6hxzH2VZcVS5zujKk5+S59RhndYErGj/
        SMm0LWAyA26hszdouYbFA2//mvSYmVO/wyilqJQdmRLgSUKCEGaBvILcJSyDEgo+NQzhlmSq
        vNm2Ov/FWR9AHXNcG9FV+bmy75pmOhLaKHHHGRnMlYBRkV7zt3/iuR31Z5tUqb6eXQKPtJL6
        mgsdGh6Q9AizFd29+yzah8y/1BJ3/gCTV8CmPcWU31KCEVDz+wspqWB/0iqLp8uRWU9q/oLW
        sM5kPcq4FAdFcbGg60xmX2elL2HpV6jUnehs4znCo8vHJPvbWOcXc6qEvYClTF4lXEvDIz/X
        Yqwd6VzA9lv4wxdlJwWz46B5fH3rhJWpIFGQXUX3XOYt95irvorDWRzL+VmVzJNRoU4QgtPS
        dEaWJUEMsTXaHrG+d8giHTC58Q7hxr9F5MsYNzAJZNlM8zbSUgPXMC33WXVeMoYsXaYa1rnY
        aCGZUhXlVeZocwvT6ySEoPZYnN+ZrKz2nF22TCX4gplHdJ3ocus00wmn9ji2xVd4xBYYf/52
        Ugn8pFL5+DGJDMHQuaJzgSb3FDL0ncELFCTXqH38KU2dG0v99ncx5IyRUJZM+JD1w79h2d5m
        zopw5U8g/h4mt8hMS1XMCo169YOlBmxSnJYV514jrqdjl9xhGbX16/k3IEZmTQZUdyFcA43O
        O39mJ3HCE4ZN1oUIrBRiI8iOoFnJliFlcuoQKeKw5HJ8J8VsW/sirPcxjlNxfB30HFZZIGmG
        aI65mitJ2w0PtxFZPWOn5W4qFGmxVMRbcHpx0VKDKipVdZ2qIbZgIi25XbD88Ah98A6TW/8e
        3flDRF6GeIUug0nE6LyZBa6EnqcO4cniL2mgIRQHvk0JP9sKpbMV1WixUgyvnDBVVRroFYRO
        /dqjb8ft8eNbtoGRYKrEHGm7jtxmnIlSC7iVvhawVdn5Yqxeqtrr2OydbFaIDSORsInR7E+Q
        vUAOLRLq5RafxkEKI+kz91d4+T9iFoC1OxcZGgNS29blsVhR41FQ6TB5gHa/oXuwoFsfML9x
        m3D9+2S+QQzXsdSg2oAYna0QjKDqqXOfGm5KHj+pXXqHZaMgX0oEo7UIKS19e7YU5z/PWa1P
        sZrHH/+jFEkwBZ0HYmes20zKyTs1I+noGuVdmJTiklt1Vv33G38sLfuqQt4YcTeiu+q02EV2
        XmyTTG9AKJ3TRTz1hiY4jLre5gGj9XQO6Tfzgf9meJoV9LzaA6aypjs64Kj9gEn7Oya3/iNx
        +ibwJSwFshqNhLKEu/JWlXKpTzdqVf6JPvqld1gePQV6IYwy5IwCeYHlo+IkCjfQGbuEYzs+
        iz+uHIg6bxYBdK40KdLSkVYd2YRgoXQPaz3k8x3D1s5mn3qaRcg5O31MVMI8EK42yBQ6OghG
        zkYjOjRPJPcdabPzclqnv/GlF2MpRfJcGksFUCq1MN6nh2CWXI7MyprOC5RDpL3H4vbHtIu7
        7Nz8t+jO99DwEsI+yC7ohF4ARtdDcd4iPCUm00vusISBjMMG1IBF3w2SOywxFwQwoc/zT2fH
        etcn7HzOt+0OKBdhWG0mhLmiFnzK3yq3fV00o774sZe8GKnG5TEzezTC6nv05UdVwnQCOxkm
        YMGZZlWlwAYGB1LXml+nPpbZXBt9/aC+2eM3qCFgP/6Az3hC/+cOpMNLHxEsYriYMZK8VDFK
        2urxSq6OrCub+xqlZcIHdPf+kqPFe8xf/Yiw9wcQvwH2FZAphMbXez2FFjDquNvWYZ3CZHBY
        fb7WAS05PcDsPkrqSQSf7JRuupNxEbcuYL9uCZkpEhQ1IR8ZeZnQJJDDqAs8MFtu+MRjoKFt
        +jgyq1d7sE3pv/H1MRzsWW8ml7bzgMQgZ3LosKkQrjTIrmKyJqeOmgHGEHw59Wng/8/ee35Z
        chxZnj8z94gnUlWWQEEDBQIkQRBUQ7LZw5nu3p45Z/fLnrN/8W5v72HPkK3IHoom2QQFtCyR
        6r0X4W77wTzEy8oiqkhkVWYhDajMfCrUCzc3v2Z2b/eXkkVQS2VvBSvt+//Ku9cmpnLsxyYr
        E2cDNStqOVL0DVAsFwUqojsG8SWgeV2NL1uLQo8R6YqVVRIuRNH6hF2uhUhygN6yrzYAaw2J
        NYoR8yHT8B6r1Sfsv/sxYfYzZpe+S9z6C6hehLwLIWJMevHjDm+38bfwJ960j7/DkiE09wrd
        BCwROaRtb6Oyj+oKkZacHzT9Kic8vDvDJ1Ayu9LT2BAyIkrYVMxaUmsF0yozdi7bUlub8Q0v
        fRAP2crNcJFVXLPeH3SL8vI9jTNVVn6IM/w7MO2OAANyIoUWJhnZBNtYQe26mtppbZowBChD
        YaaakotOgMmqvOwJnl5DECBVHl3rWD2qu6d8KZoNTCPIlDZPQGYki4jUaJgiMkN0BjJHdObP
        hSkmfj598GcFIM2pqLIvwfx3SgtybnzFkY4QitixtAgNGhKq5XPSYhgxJKx9k9Xt2xw1N6lX
        n1Btfw2dfxXsKrDtiS4DywXIV7lryDyoPf4Oi9IgsNY5n7B0m/bgHaTZQ2i8BuXYUuCzNLHB
        4SCdcEWGOhI3I8ESaS+RLOGY2/h4pV9SrP2U0ZLjwoB7TRdy94sGffO8+FJczLmtTBOttti0
        ZAQ3FGIGS4MvlGOScOMHJqijQEXZ2UqEkUqBqRduIlVhHTGPnkzJCUKMEB3zTBpoZJMcr0B8
        EonXqGY30OoysZoR4gboHHQKOnFRY6lGkdgQ83UOS0hYdnk7bAVpBbnB7IicD8jpiNQckFe3
        ye0t2uY2km4jzW0sHaAsnX5ZExUN7dEb7B/dpLrzG2a771JtfQ2qF8lhh6w1KQiBgPAATCj3
        sMfcYQ2d5T2gKIC1WPMB+eAtQt4HbTHraqJOz3xWzj104a0e5urASQgZWkk0yxXB1Ese6KIp
        H1ndirA/v4voas1kbekxOKqTeKm6u0MRd1YpuQhqzKSpEHdqZB6QaCOnUyaKP0LS3wXaLk0X
        6dWZJGGSvL2HiEvYJf8OzSfMLIFFUrLtkuNVpH6aydZLyOxJwuwJtNpFwlOgW3RLQXdQzgPn
        S1F6wQsrIZZ0N04pQJdQzl58Kehga4PIkkBLRYPkBeR9SAeQ9rDVHnm1R14dkJtDVocfkPNt
        ct7H2kMW+++wXPyAyZ33me5+jfrylzG5DGwgzPjjeqb3Z3q4+kUAACAASURBVI+5w4LeaZl6
        D5QZwhI7/AMcvU3FoZMBnrYqc3/jSMke+gCQkq2hBtkMBIWVtVjrX47izsyxAE8N+8omFXDz
        AoY/bn3B+ZovlxMdjKHlvZlMi0WDuRA3I3ErQkik3BIwEB0Jpgy/743HGB131dBrKv5cKdiz
        rryGxDJHGrlEWz1JtfEas51voBtfRqcvgm7g2FQAnYFVvvlCg4xqKb8QLOeic9Cp9Egf9Q2s
        pDq6bTJkd17ZSgbRumbuFWjyZeHEUDGvjE8LYv4E7A62uokdvkNafsJqtcfB0YfsLX9MfXDA
        9pXXmGy86ID8Z3Cbfi4clpUOcv/RIrYPB28gy3eIYYFJJpcJ8/SH/ihElw6HbV1EelahMaCm
        2BGk1rDk1B4q5SZfE+W8cFj3tvHi+d7iD1qER9pCFaMbQtyJ6GYgx0wmFdyRAkLLmoPqAfK7
        rOheSnEiZYLSzmGYOS8VbZGZ36KVq+j8m2xd/i5h5xtY/RzoLslqLEUi01KQSR/t5X65p0XB
        qdwTlguYzuC06MB6ocPZRYrDww+36u/NMq0GnxgzLQ2pnEem1RVBZijPobOauC1U6ZBpusl2
        vsXBwS0Wh5nl7VtU6Sa6McHin++0HnuH5TeL3yTuuA5h9SF58Q617KOaWCUjhKojpXq4xyfm
        k17slK6FuD2BYDQHq4JpFcwjdaUZIyBe+Cxbtc69rWdVB+zPfY0hWtSZrZQlSKC1RBsTMo+E
        rYDM1fHFDiCXolhpXdHxfRyF+Oe9NaYszcxKlEPBw4yUMybbLHiJ2aVvUl3539DZ66T4FEnr
        IqqSidEgBWgVU3MMf5REcPdSIAOsT8xIl6Ap/6ykTF0XRRgmPfx87djNVD6vVAixz3YHnQLT
        oqBek6VCYgthFzhgPlsyT5CbgMgmhPozwYcfa4dlQJuyRydimB0hvEez93NW+78j2r4Tmpmi
        weXCTi1gkfGNMTpAfH/e2pURgTD1EN8k0B62tMvGMzPqeop93VYu8lEXEda6lXHo47lcG3XP
        nslOYKeGCTTNAmohbFXoVkBngsQEue1jkgxkkYLArF/rE5eDXdZQcontPbLRXLKQBTMyqci2
        hUxfZX7l/yBufROZvIrJk6BTMglhiciqRIIOe42PoksA9vxUhfrF8c3jR9xlS8fR53BPGiWZ
        2UenQ42ZjJ21gVGNlnlCFiOjmG7g6tHZtQ2CegZWwmdyrz7WDquPTFAyLSr70LxFu/8LcvMh
        qm15V3Ru+FMNVYZlYAfKrn13MqofkgxVIGzVEJRWVqRFQ06JUGqFRPTuTNWF0UUSd1txVoJz
        /EsmmaETI27U6HYNMyB6Jm9gSB/R/j6AdVz/4ypzQV2lSd0BrtjAqueot75LvPLXUD1Ltg3f
        nxnRFNUZ0qnZiHhDhhW+wPEx2bHfo4TDiZeoe3HN4UYvKSsLDcFhcu8NXJtfi0/uHKARNBUs
        WDAqxwbLW0yk9JpcRFh/1AQIUi5cbpBwAHu/Iu/9nCh7aPAvI5giqaz5T60Kc1Q0d/dTaw9N
        SstEFQibAQkVbWyxpZEbQ127rGQR4c9pJ/r8mHmjsmRashPuRai2a2QaYGqgXVlJKXFZiy5k
        JGB6P+Z0xA5c4dnhEmVYCCxMWMXrzLa/R7zyt+T4Etk2Cr1y7KdaGRE8WqmBcl75AZe7+84a
        3QxdtPep5p+J2KiWVfqX8gm+UYsjY+zgu4RoSXJ1fvUzaCMsx/fYWyFr1RbJd2hv/4awepPA
        AZYd8IwEJKU/hs1+FofB2q11kkhBAVK9JjFjuUVDQOfKJE5Y7a1KMaEhuWgz9jVbF+UNbiUU
        sKLKXa6L1+JmZ1wImTCNhHlAtp1BVCQVjMn6pZFHOv5Pu0AJ7mPgCWKBIELq67A8Q53ImAaO
        ciRsvkB15XvI5JuIXfHYubzdK+LD2jb7JuU+TKd4gtyfdn8N+jd0eNr68fU32uixAGq5jy3X
        V5BdxLgeZ1nPMFqeE+m3K5LRUVmRPJDAy8l2zh3WeKAWB2DrX1vORdw072P7f2B55zdMuIlK
        IlsumRUgHYt5T+14j298jDB0GR/z7I+WMgwxqJW4VbssumbyUSYlKdzcx3Zx11Y7QMfu8muf
        PvZO4WLc5VvHLUjHEZfumO9xHML6QLLjuLGn900yWTNUUM0qwrxGpkquW7IlNFuJV8teTfrd
        dhqXD4ZvikdKksryMJdstJGItGGHydYX0K0vkdorqFVoFCytnP5IC9Y1iNaVDOGxL9godV3H
        C4it/9zxyEv6O036pMTwmVHRsoFjv13zkpW3d5/uSjYcQHP1HPXor4RbIg3eu1SXf3+enU+H
        1TsWA0a9WhTkkUyn32ahJbFHld+l3ftnaH+F2L6HswomCbMlojU+M7ScMKI+A+tmnvXZ6/i+
        /H7wymAYOnoIoNMAlSDTzLJa0R6tHMhNsURbQk7mDbkasE6nSXr1xHV+wLGD7g9jNAl8VnH8
        STZyKt2Y6RlIxse25iV0cF6CJ0lKGOSOHej66QrwYtqQtSUHQ+dCNY8wD1BlLHgGLoh6UTjD
        kNaRXxBsCHbu53KsOdhU/vIlUqU1q7RD2H6Vyda3EblGCKGoM4PEmiFTfez6y70O4NNEeuWu
        v/v3ywnvs1EEt4bejZ2i9MfTnZ+UdwyJiG5M1vc47ge3c+mwhq9zcFgd0X1PEVP+xFoiB6TD
        f2ex91OC3SzAYADaPqTtbtTTtQfZ/iDl1EUQQgZVZKpMdEqqGvKiJS+Sd1mIokEhWyn888/1
        AVZ/GDLadnFQndOSYaen2lQ91s8ajcuBS+r49wwDgD0a0Nl67qZ+O2q+/LOGTEJriNOIzhWZ
        V864oMkFT60MuWN+4aRx/CeeaGHs6LYagE0m82eJ9XWQ6bEA6DQmiQfc3j3ffq8XTpL46h79
        +dXtYzvXDmug9zwWtYjREYlpWkJ6m8WdH9I2v6LWBdYA2ne7+DYkgZ0miPUAdrwWrBQfoorT
        0RpSB0KIhDpgdSYvWtKqISdBVb1AMVO0DrtCwQxB1ybQtbrHdbnHux3dZ3Z+jJap66uSk1Zd
        wzJk3Y11EaA/m8AgSUsjybNpUQh1JM4iTNWZgINXcefSkHu6VirLS8RlAsmUbJvU0+eQcAWz
        SX8OF/bpdu4clscDRQUEQawqd7iOFjOO+5g1qNwh7f2C5f6PqeV9lBUiAZNCvG9aAPAuWjtr
        4HUXARlYKQiUUtAYBKYBiYpOamQBeZGwNtG2ybOIWfqeROuWUjCiMBnP6MMVPPUBVHbb7/E4
        lHLsqPolSJ9ft6H+qFjGSCGRq4xOlDirCNOIFP64rHnAkzCvbTq1M+0ggAF3cupkRcIlYv0c
        sINZXeoET+kwHjM7dw4LCsePFRDSnFTbSuFlLtkPz0nsY6s3aG79M7p8k8gRllpP+WjrnEE2
        xT+UGNRsz5q5Q80Fp5FSBEmWUpMoUCs6qdBZxBYt6SiRm4w1hmQhSCzqvYJkGVLXMmIUQLg7
        o3Q6ZqOFXh9AwUCoN2Do9JmnDgTuMDmluB7/KQpMYbKpyCSilUA0cpFP61J+ip+/9nv47L9z
        K//5jocWnSxCqC8R66eArcLSeTbvurNo59JhDURQCtkbUrMlsjSYVahFj6R4l+bOj2jv/AsT
        26MqSyOpmoJ7RLAaynLCndajPLdia+yUwx/SUW8LoOK0yxSR2CIeQBWQSUWYKHmRSYctzcrI
        uSEWko+xTxqcheNB3QKrb+s/tmz69Ibf+zXBG3LL+XYHZevLIynPdf7UBLJ4EWhryXsxI4Ra
        iJOKOBVkYhAFtJQxyHBJpfBC6XhdfGpBVnaFGjx1aSpkNSxuInqJbJNCtHc2brvzYOfQYXk+
        wsqyT7qS3LLEExNCAliQFz9ndeuf0PQWFY3LdksoJH5dzsP6rbql47t7RDb2TrY2uMYpaZNM
        ki7yoi8o1XlEK0OrgC4TeZW8mbpp+4pjlWGpaJ2zKhFqv7Fx3+If0UG7dxPwyc5NGDQZ3SmN
        Bq5QJNLKmRbnkrtKKklkze6oJkqYCjoJSBCngul0ArvD7n2TR5N62piRAD1s4f15/cpbBA0V
        UGHiDAvhwlvdt51DhyUIVelEz16rRIunyRTNhuQjaH7D0cd/T7v/Y2Z8jGYZWllKT5fftivP
        vllk4C5aH3yfXVTxYJbHGbET/MEY/7HuCc1kMTQbBEXriKQIK3daHAHLTGoTyfIgZS646GsX
        Y+WiftLVgjEsc07un3vAa5Pt2IRRtl6ajTupLMpzfoBeoa61EOpAmAWkBipvVvYSldI2ODqm
        vtyy8/unDFNa/88QcR7/noZZxEsYJPSvXfir+7dz57CGorcOLG9BvXZKzFBdQvsWae9fyPs/
        J9pHKCtUKkSS04VkdacnBtL6b+04ij6LgxyikXHkcb8Oz+sUuxT+QL3LGkjsuMiJA1CMHDKS
        R9Q6MyFMKu9LXRnatOTWSE0itRmSoGaolfLJ0F3f4bh7vOvEg7Z7O4KTeKj63sncR1RdkWcq
        5++ldIYEIVQBrRWJilSCFHzKHXRLLstXpah7M8DeY0aezkXmvgH4dBxGp4bcK+dYEYHoIy3H
        TXttwAuvdV927hxWhweQvS7BgvQrJyOB3CQ1P2Gx9w/I4vdUHJXPeS+WszvWYFrwBfCZrynL
        yvJ4ZPfHf9S/udAxD4//pHMUwIblqYxfG/02k8ICwABIlyWJUy8JhBIlmSJRYOJMmJpAm+jL
        xWWGlGmbDMlbVDQJtH59RQTRjhjqHqd+r7M5/hnBHQxAkcUyjFyO36X0xKW1JmFg/a2CsyxQ
        yAs7jyRD4WTvfrrNHyvNcDxLeoelpxXhjEtkTApeWpFNnaTFMtD4/dgF9RdO61PtjDis8Q39
        ad+aAQ2ep66AWBKFDSqHWPs7jm7/A+3RT5jbnuMDGsi21ngx2lf3b1WA+E6MQAboqPBOmVnh
        0HPgdiBGGx1/Ed0cmEELH1EfgXSYVF+y2R9VP/ECFG4sGYPQJ3B1CTbqmnfoKTMEY9ItrcwT
        E66P2DrgHT1qCZNAmEVIRm7BUnZ1p5UgK8GSF6Lmwvp2ktN2eEbWrsaxKzP6BgufU3BOKg0K
        QQhqXpEeFamDO9cgEL0q3WiGmqxeRr7sqe+yHX2vJy2ju8lN+oM5JetRs/JTPaudu+jbhR6s
        SwBc2H3ZmXBYfut1hZvaKzR3r/ZOrNyDGUPL0s7rryISGyS/TbP3Q5pbP6Ru30LCERYc65Kk
        mE28+72b/cRpYPtoRSBryRgWYdMOATHzDKIpTksi0pEHFWra1M/4XcdI0IBkyLmArkQkVx45
        hRU5JJIGzAJiQsy+jBMHlIbz/jQ7xirnjk963GZ4XmBUAS8FvLIKdwxI3+zrVY6CNOKXKIk7
        sgyWDcuZXPov+yMdyY+tTUHd19ctKQVkBgRf7omCBMFUCaF8QEtjbddcK3ldBKefCIZz7nbs
        7bsnR07dc3r8c5+xSSm1gATqEX2whpAn2HLpCjUhe9R64a/u286Ew3IbfWtrzmpok++wq4xi
        kgh18oggJ4J9TDr8KUcf/oC4/A9qu4NKRNqIpY4iuQwAyQ7UC/RyTabQFulucYUPxyA8M5UB
        gpP+twSEyqlAMmTzxlZVipBA43JKLWDZSWm1RTS7YzODrn+tW9kUnm8rTJW9UvX9XDZZf6LH
        a04alDbgYl2kB9zdQWE4mD0JZVklqFXlNXO/l7JzivfeaUx5YsNSUmTstdypxwYkDQFRh2Xl
        3OM/3YF3bFKjUPOPXpL+VE542+Bc/+gm/izro3jJfVRtkh0jJJPSIeQ97/e8iK4eyM6Ew/Ih
        FkbhPAzOqsxSdK85YJ5EnLVADqnYh9WvWX70Y5q9N5jIkev7te6wyAahgbjE1LGdDA6+W0As
        IgQPzXNZV+E4SxZIomSpQTcw2SSzgTFB44SglVcq943NDZKXWDog2yGWj2jzAdH2UNnDQgtE
        p8ptjGjtEJ1IIIfkleyd6MSp2LozPHEv3SpWEn1tgKbi4J1qmNDp85X3q/OFj32Lr4SPRYCj
        ZEEHvXe/+mXl2oruvA7q7riddcH7CRNmR1g+YOBYP79n+LDtTDis9ULJcVJ4QHnGiEgwIRNZ
        yhGV3CGk39J88Hekj37IzD4hqGB5gtiEzAqq1sFajb7NUtku4jMemrEsJCJJAoQ5WTYhbEN9
        BeoraHWNUF9Dq6tIvOLKJXVVuKqnkCfu7PIK8h7Wvk9K79Gu3mN58CbN0VtM8ntku4WlQypr
        qEShkX5GzjGTxDNH8TNuGv2jl9/ukUwQMBXGBIG9SrBQKud9MslSyjDKUm34SsdDccic9orI
        x0bqOMHROa7TLkP4rK2/g60Q7ZWMoEtyJXK+Q9PepDZfPQzqNhf2aXY2HBbQZfp8lrXRrCzr
        /wzX8FOjtpZo75H3/oXlxz9gkv6DEO/Q2soHTnD13hwMpWBS5pGbANmU1mqybWBs0OolZHKN
        OH2COH0KnTyBTp9F6ssQdzHdIMsEkxmU5h+TSFfD5cWQGWSBcJvK7hDtDlXzEbb/B9qb/85q
        /zcE/gC8R272ShFn0agjPSCr5Z9iJ6+TThowPXPC+LUuCi7JrUEXUZCciy87GfBeC577pMTd
        b1tznv3mz9eAHkD9bgmegAqRTMp3yKtPILfuzPR8ndujtDPisEZIbSE86xyU2d3LFxFDraG2
        m9jRr1l8+E/o8ldU+hFGi4q3rWRWjh33DajuuLJFMlMaNmj0CmHyPPXG08ynL6D1MzC5hlRX
        QbYwdkgyxUKFE7zkgZoY1phDDS1RxxxhQrZdxBIxNrDzGmH2Darbv2T18d+zOvwh05DBVoWk
        vzuvMQp1epf6+DW917rw7vjo2F8F2Zc1LOvurOmwj5OwytHfxyK98zuUrU/e0EXxZo7b5X1s
        9QHYAi+lcQXK83y2D8vOiMOCUSBdHjteBUJKQ/uCFxomxD6Cxa85evP/o7n5M7biAknm7ItS
        WApECRIJRFLKpBxodIvEJax6hrDxMhs7X6TaegWrr4BcQvMGlidAjUmFdbLfZmDZ0aciAEFf
        w9On1vy4TXChy1l/32a9gkyfIMan0cmMow8Sh4f/wtTeJ9JibePRVRFIPL1b9y6Ufrj8x995
        kgOiHF+PXHfne/I21pzeWurw+P5HiNU5i6buZQaQA0iL9QToiSALmv23meVbaLheasLu8b1c
        2JqdIYfFXdkuKwOhz3ZpBlZk9gj2B5a3fsTq9o+Z8gnWNojWmLUF/YmQJ7Q50lCR2IR4mWr+
        MnH2ImH7i+jkWWRyHQuXMSosVyB1aUfpEuPZuanNifa7ASpdzUAfNXSZTCk8W0XRuejPZVGU
        KVZfQXe/wTQu2Hsnsdz/IcpNJ5zMQAx0Xf6nc/ve07OcYCOGz87GaPoIVzQcdL9vE7u/ITqe
        v86NdW1GlAgrIPjyTzGUJc3yYyx/gsghYpP+Kj4uzvq07Ew4rIKUHHt2mLWD4qGzHSBygNpb
        HH3y9+x/+Hds8AZ1XJDaBol1XyeVUk3iKm24hsyeYbr1MtX8Bsy/BPXTINtgU9ocsUZRiagq
        WdJ6s6w3e5TMV3Fifes/ozErdMLMlJu1Sxq4YpuXKjSmINeZbP0lO89vcvC7Qxb7/8Y83CTn
        JX7T6unpud7veDBw5eLhfOXEgxquha2B7Z9yGOOI6l77P88mRX3GAhC9q0Ja1IRKWharW9jR
        m9jkRoEeXCnnUfWtnhc7Ew6ry4NLx6zZPStd0WVC7BCzOyC3SXf+lcWH/5O4+j11PCClBcTI
        0hLZapJswOQacfYyk83XiBtfJs6ehXgds8tkm/kNIl6oKKWcwSxjmjy7g9diDTFD10KCMz4U
        Js8BlinFil0xJur4m1XFp3mltmpwgN+uE+vEZOcvWCzvsLKF90EaZa+PWM65w80LceDo6RPN
        r8uDbR9Y6/N7nKyj/Sl9RnRN9mZCIBNlyerofaY7B2UyHtRqLpzVve1MOKxhlSH01ZTda2KI
        rCDvI7pPPnyD5t2/o97/CVHuoECSGpNNEpcxfZaw8Sr11peJW1+B6VOg27S5glwjMsW0olvC
        ZUtgyUVKRIm5YqC1pXeknZBDxlVuDb94HVvpIAc+QiNKtCWFbNCdWCJLQvIc7Eniznepmg85
        +uRt5nqbkIIXnAbOwEgu6j2jEoXhvO42zQ9AzePZE2AgYjkR6xo/d+LO5e73HX/QJy3v74Le
        813jXMJatCmjn91TNry/765oC9TZEmxJe/QeNLdgkobtl3McHHkXtZYzGEf3n0M7Ew7L+t9S
        6DYMrMVwyXZPn++Rj/4XB+/+HWHvp0zSbXIwlnmLFC5h1QvEyavEzdeptr4Ck6ewsINRO6nf
        qNUl50zQrgK7a7/JBTcaaYHb+OigqzFSoOdk6ZaD3H0PDUso830IqJZMoFSIbsPseeKlr2F7
        PyOtPiGyQHpRjLNgQ/ZvqInqp5j+b+md86dvsVfJud9lX58pzmtOa6CnGY5Heh51Z5a1Mvit
        0BAbXVTniRNTj6y7+jIB503zM19D6Zxj0COnrINchkAvBSaj81MxkCNPwOQKQuslDG2i4ojF
        4jek5l1i/apH+OITmpFKtjkULNVZdrXryPgcR2BnwmENaA8eNuPV1bnM2Ga3CPkdDt77f0i3
        /we17LFkSmsbhNlLVFtfJG5+HZ19BernMdnxaKan1u1Sxp7diio9JjVYGO77Y+B//1l6ici1
        l+99+xT8p2zCSCRWRBPEIkhF0jlh40XqjVex5RuYfISG1Z9zMT8z6xSPh8fHz/XYmd8Xin6P
        y3yvzd7lIHM/mazD9o4w+jJ8TMYoCDU5qydDQirfmbdXNW1yUj/xpq++mbokXXKHSeK6TH2y
        hU4lvCSHiP3xCc5z5TfMwnGsHH1CVgHJRFsiqz9gy99jsz2EXcwCSQ0heeFMifQ9os/uQPs+
        2E+/zo+jnRGHBVhGpSWzcpYgq4maiXYT2n9n9eHfs/zkJ9RywH7YJmy8wGT+JaY7f4nOX8HC
        E5hMIURaUpEJ9xaYILpeQX3XDCUn/nnSex74PhmPNQTxhSRdyYZRQ3WV2daLLPeuYmmfbMuz
        UZUjXex4zE4UbzgllFygb1DvnYlPbe5MdfRGIamWbGX2nEGqoN3yFqrQYnboRH9ZSalikjcQ
        S5gs6SiGOgrq3GWKRUFhKStUM9HUCSGzFw4bwUsTJCElWlMbIjMkgQ4pmCCKpYTaIcu9twib
        HyHVVXIRZvR2pi4rbcfuvD86Qz72dmYcVtdflnLpGZYlId8Cfk/78T9w9OFPCKY08jz17teZ
        Xf46cXYD0RuY7pKpyWqe5SMgEgu3O/TO5lGG0kZZUo7oaxCECcY2MnkGwjXa9C7Vmtrpo7R7
        ZQXHpRH3GVb9OXYcL+ocpo16OEc4Wy4MpTEGRCGxwAmWhZwrklRkJohOSVJ5o7oEREsfpxRn
        YQlyLv5KyIShST3nwm5qQENghFkRoWPExaCIYJhYSeh4u06wJcvDd7HmHaifB6nJVKOy5PUS
        lE6443Psr86Ow/LoPRIJRM3ATSS/ydFH/8jRB/+OWM3mE/+F6tJXYONrEJ5EmJCoyVIVDihf
        DijByepKLZPoWahv6YD5WMaclOemwDZSP4POXqRpf4PmD52W/EzYcXB5XHvWvXyaB9sj19Ax
        a/TH0r0+StKYEpJgUpX+xkAbpmS2IDyBVteQaodQbZbm9egZXFtheUFqDkjLW9Dso3YblTsE
        O0DTiiq7zBoiZC31cmTviyxLwNyTA2qJABMmmSweJZp0lNNGsAWyfJu8/0vC/FWQDV++di1k
        XTkJnTzZaer8nA87Ow6rczZmYA25/YjFnd+x98lHzOYvMNl5gbD9ZXL9HMI1JE+wkBBaYEmg
        QnBRSs3Sg8AdUHxPLvKHZj4DS6+JbmUWDmBTpLpG2HiexcEGOZ2FmXSUMBgjycdN7N6vfaY2
        dlSd47y79EOzgSlZpiyZ0MZtZP4sYfIC1fwrhNkrSHwCwiZUFV31OdaAHZGbPfLyA/LyfVj8
        jnz0e5rlW7TtR0TbJ1jrGdwgYJmUQaQuSUFntTVpHWuyUEp1nIu+S9Rky6goakti+yHp8HdU
        6RO0ukpmuywLjbvYa8v9/Hl1VnCmHJZnQ5AEaY9m/yarQ2Fz+3Wmu88hkydpdQdkRrSq//KF
        0Fe2S+5mpDLrSiqCBg+P+eBkKyBtl7Equj8iXkxqVmGyhcyeIesmGmtoFzyKZaEdGyAeCOqx
        14clq5z68rVkyTrMypRBKKT1e6bvTFBUnU21yXNW8Smqndepr3yXMH8ZwtMguxhbXotnikrr
        k4Pi2w0tYbog2AGk96F9j7x8h9Xe71ns/wo7eoPIHQK3ibIs8nIBioAHORH6tKrSUUAPAaG5
        fkDOqLVUeofm4Pc0B28Td54HaxGpGWN10GUrrb/vP692JhyWO5Ui45SdR4pqyvzyK8TpLlZd
        oWWO5c45McI1rB8/Vlgpe6ZK8Qimz/w8ShtFAxkvb5DSn4gEsJlT2FSXyU0HzD98h7VGtmfr
        y63+9ZOyg6doQzHxuPXHsSbDGV9FXTqrzYHElDz7EhtX/4pw+T/D5FWSeImLV+4Xdg0D6Qt7
        yz+ZABsgl1C9ilQ30Nkh081bTNPbLO/8hNWd39Du/5rcvoOkj5GwImgqR1oEbhnnoKXP8Glf
        GyKIGMGOSO0H2MHvkY1XUNklS0XfYVCk7KRciXXs8PNnZ8JhmRWZcUkuUVVNifEpEA/tG5mh
        VK6N6aLPztPUzTjWCVCVlPfImZ2JbBvAMEeWybNzCn5TZiKhukysrtA0gckjEqvr+Or9kNdp
        iMfAtp/OaNJYf8NnfVR3b7uMZ3dYilJjTDnKmzC7wfzK3xB2/xabvErDJW+Ip0Etl0kvFedb
        GF6FvtPCTEtZzAyzCbCNxqvk6knq+gXqS+/TfvJvNJ/8K+3BL1F7C9ItRFZoEAjO3d7Je3W9
        ob0eohVSxALlS7qFHf4Oa94h1M8iMvcasf6sh5+fp3+WRQAAHi1JREFU8wDrjDisUjkuBhUT
        0KofCyZCxOlkJMcSZjMCfkdfpn/CW2zEpb/8hnzUS8LO/AhL3AfmrBIWnNlUwzZV9QQpT0H3
        H/2N2Zcv9EBgGWhj7OhhRYHdMr+LnLvCTUV0SpM3yLZBql5idvWvCFf/G4SvkLnkZKkkghlq
        lYtBqKz1ezoXWe4XoEYuTLSORUGFMmOVN9H4LPGJV6h3/4K89wtWH/6A9vDXSPo9QfYRXaG0
        kLsa/hJvZSsU2lY6Sx1cF9unPfwp1f4N9MrLqGxjMiGX9w9b6EpZH/WN8ejsTDgscMBSDdQi
        lNnFcUdxwQkrS4ByxD5THc8U2ei17o1nBaXs5TwB+sHmN2x2emGrCWELlSmP6qD7JaHhkYbJ
        aEndzSIP+Zj6v47vWMkEjAnZ5sSwQ737VeL290CeJ+cpBIhmLudl4hOEMCggla27iGygu/Gk
        1EQ5tpr6BEnFFCusaNQT5PJlJrMnaW//nMVHP6Jd/poqvY/KPrCix6CMUg1fnKJCzqW8QRqa
        9n3ag99R7d6GsASqjqm7fL4cWxfxnol7+uHbmXBYHhy7CCZdMkVLsacZQsQ19zJtkYBQuoE1
        btsYgZ2lXmatrvCRmfQpaaHTwusOaGDpFAlQb0PcxCy4HJd01TcMN+zIHPvz59UCQvLERenQ
        s1yEIySDplL+4QNIe+J0AQJGcJpoqzAKziOhzOsZkQYfhAtgVZIG0NdDyaAk7XVMpThWSjKl
        iDKIjdqf7tf61WdZQov5xJYCWac07BDnXyLu/iVSv0q2HVB1AZCSOJCu46GA4MPlLA66i1+k
        91vDcYpCFjRTWnMimS1MZuh8hzi7wcbWS+Sb/8bq9s+xo19R27tYOMSkwTCChX4SdhCkBYve
        x9reZHH4W8LqTTQ+XYD3yq+fySDFMmiyfC7tTDgsSngsQn9Ew6QuDM8IUXTt8drfI7redTbL
        Uzz0+7UyCsQ1f3p0rZOqo0M7ZlssZUZNBbS+tLjLumvQ8S45kGxoSYOvRmCHL3SkOI0s3m6i
        3TRh6mA0GzQ2I1VXkPoqUu8gOkXElYEsrbC8h9lN2uZdxD5BOSLkPHIEGdVClZw79oFQjtFV
        crzl5P6X6B43+/u9368Dox0KUqtItoHVzxKufB/Z+Aaml4EJHWrUl7OM/aQcAwqOkSauB+YD
        L5gF7/nr7je1iKuIz5CNKTp7nnbzNfKHPyTt/Qtt/hWhvgN2hJkRLPp2k1fVi0BqjaBCm9/j
        cO8XbM1ewfIOIhOyCqnLeJsOzv5zamfCYcldf5z0Iiev39c+LPfezhkxP8pBOa/05A4RY6hA
        4gg/+uNmCK0qYq1zLuWSpZLgEYj6uwyFNCVY8OrsAFmFRma0dhWtXiJOX2K28UVkcg2Z7kK9
        BTLxUMMaaG9jy/eJR78jHb1Bc/BbcvsmFYdEWUG7Amm86TiUc7TCeZ8nvrSXLgJ8kHSIOwcH
        rxOd9LsBK4tYuMx053XC5itY2MbM2Tju5qK/58P72H/5UJeIKKUpFBoiV/PNEGoml+Yw2cJu
        Pc/i43+gXf2SmneIdojgWc1MhWqJsnJDbcpq9TG2/wZp6y3C7PmSjEpkVmRa/05DjUhEzvJN
        fop2JhzW59oKpY6IC6oSah6MW6Yst/A+NrpG3BJxoaVmKQuSgwuiSkWbpyzjFZi+QNx8jcnO
        1wmTl6B+FslTjEAOE7JGz76SUBIyPyRs3ySu3qTa+znLj35As3gDa9+jdheC0ZKla0HJYG0R
        kC1Edrp80IvkiRkpupG5OEFVmjwnTm4w2f0LZPIixrwU557CgJay1O1FUkqU3LcIbThQLxGb
        bWKzG2xsPcfq/R+Rbv4jkt5Ew543REsi04AlZw6xRJ1vsjj8Javb/4tp/arLygEmzZBhVJcM
        O9Oz8inahcN61OZ3ZGnYVZBqtAz+dPMWj1QA3ViacX0gZfUsaSeE6kuailZ2YfIC891voTtf
        R+dfJsfrNDbDmBFCRAl9iYMLeQhGhcguMexQTS+j9VWm800WN3/MwQf/hLRvoVpS++V4BsWY
        hr7xO0d3ZPd9mmXpq6lggIApiYpcXSZufxGdfgnjCSjdDv31+Sy7G6z8WKMN6hBGRWSCO5OK
        pImGhnpTmcYd0uQyzSf/zNHylwTep9JDhxWzR2eWW2JYoeltmv2fM915B+bXECbeXWgVYuXe
        ODOJpIdvFw7rodrdhZgFqEMIWA4OtkoYWO0+xcQgNj7bZ5mQqcgBkAaxBhFnA8xWk2WLRXyG
        sP06s0vfQDa/g1XP0sgWK0uoGIElZg1iM0KuIBlI6xx0Qcnmy9VsVxE2kK0dprMvUc1fpn3/
        /2a5+BlV+ohKWiRVpbZpCbrErPUoz0LBGD893VjgvbIdGP2gyVPi1g3ipdcxuY7lbUylCNt+
        xs5q7YjG/4b9WMaTFVkxbQgqNOxi9ZTwzBPUOy+RPv6frPZ+QLt6g3lw4khLgmkkhEzNAUeL
        /2B19Avq+dMI19AskCskFcqkyIXDurCHYMIo9dQ9N44GSiZK7j8NJCaQKqdDkURW9RS95b4c
        JDNlxRWoX6a6/G3qy99CZzfI9izJtjGpiVp6Ms0I1KXmbRiUWgoslYxZLMuuGvJVJG4Qd+eo
        Tmg+3GC5908E+YiYVx7ZaSjAeVcbxwOl5gUr5VfBCypLn51xicnmK+jkWRKO7fSq1KdgXdFM
        yVGXx0OdX7dfQwkWsexL/Rw2MObErQnzeoNQB5a3pqwWv8Zsj6ANEFCLhNSi+UOW+7+g2n4V
        iRtg85I5h55n/3PqsS4c1sO2LmRYc1wlyhKXen+QyKDLxBEM0RaRFsmKJi9NbG1CE58mz7/O
        9PJ/Ju5+CyYvYGxitkmQaUmX157tIg/lCO4/3QGKKwCptf43pV5O5phNIUyR3U3m4RJHWWiP
        /pmcf0el2ZeCHVOmmCcGHsApO7uBF9mKBoxElgqpniHOvwhyFdHSn3nfW/1zrOOdzSV56ESB
        /Tdq0GkCkKuCv0VMamQyYXJtSjV5msVH/y/Lw3+n5gOCLGgXmagw4SbLg5+TDl4jbl6DMMe0
        0xQwL/85M8XQD9cuHNajNKEUJHbD7E9ocRGcrtcSZq3LSGWQXNG2M9r4EmH+Leon/ppw6RuY
        XgHmWHalIMniNbldrl8Uk4yFRBIhiRIKD5QPydzv2IqDNSIJl0irtmZsXIfF+0qb9onxJmJN
        WQ3HUohaHOB9VqD2sE3yWioLkUbmxPlL6PQljB1UBcutZ1hPydZ97MBrZdx9LlkFSu+gZHFs
        UsDsGsRNdOcppnKV5c0fsTz4R0L6OXVoEBIVd2gXv2H1yU8I9cswv05DSy4F1RPC59RdXTis
        R2ydAzie1br/UnITg5jBDDXta7xWbLHS55he/u/EK38BO6+T9Ao5VwSpyrJT+sHWlT8gPcSN
        EXol6oEvoAxScSrrTsCMkuLPXEU3v0vdrjiymyyWPykRhNdrtUQ0BLAiHPupV8jIkp011rwz
        IGmkkUvMNm9A9SSW5+7IrOsPPI0s2hh/PIZh9ec/9GAazoHldWx+/Zy9tCalCmUD3ZkzjdfQ
        yTaLWy0pv4+yRyAxsU9Y7v2SvP0bZHYDZBdsRt+R+PlcEV44rEdmY1WVLvPUs1Q+oJmV2zhg
        LSxtk2X9JSaXv0988v+C+CJJtoDgVMF4qYLlFhFBYjcAZDQklWCUQlTnEsuU1WKP43TCoKWB
        mBaRKVmfQi//FZOwx8E7C2SxILLvWJZmGm2J+QH6e9TIlrxSXDKJGiZPUm19AcJlSHMwQXWF
        ZyRPp6yhc+69UIkNNVnjycfhuVRKIMrxd50YomioCob3JLI1YTLfQaa73PngR+jqZ0zS2wQ7
        Qld/IO39lHrzy9TTCcYEyfFBVtOPnV04rEdmw/LKxRO658fLi9xVPXTBTw+B+ZKsfD53Qp2Q
        ZE6efIHq0l8yuf7XpMlLGNvOxJkTJkoyKeVfhShQSiNuX/wgBWPrCj3LnsUBZSm8VD4WOzwu
        Ay1ZWnKoyXaZuPV1ZpffIX14QLv4NSEvsKqlJzwfl2+sFcoWp93tV8H6RmIh6xSdPYlNrpFz
        XVbWggRXlxGqz+xbGpuNvq/uWNeW08VR+ivRa/zFyMGpk6AI5Foucl0CugH6ItXujEuTJ9h7
        M5H3Wzb0Y3J7m9XBr4nL3xMmVxCbQxshCgMl7fi6/QmQwjmzC4f1kExy4QXQgPRMlF5XRDan
        xMKABqNBsoPoWY1U5Kg0Z6rWkCSYCKkycmipUiBlYRW3SfVLxN2/YfrU/47FL2Bs4SSHntUT
        1JW0CcdAmZMyTx3//PCO0L1HRk/SVbTPECIBwXQG9SvUT0XuLDLZGmL7SyKJ3EoB971mzKRF
        uswkBnro27bKMbLs6ljuMWsSl5lsvgzhGmYTv1bSZetOr6hS+uEy2r52j9fTnnLsp4wmhOGS
        xpImqJEwJW5V7LwYWbz7HIe3/xGZvs+i/S3s/Rub9dPI5DrIyjklsk80QhglaU5esj5OduGw
        Hqp1N7UjGlmsj1SsS1vnJWRvls1EnFFJPEMnudzs/mYRXwi21pJkhybcoL70l0yu/hckvITJ
        LkockJaOebW/j//IDS1y13tO/lj3wLOAMur9NNlA9VnmV75D0/6WZv99oi7RRHlfcYjSePQy
        bvTut9GVXpXoigqNu2h1Ha9qjz5wi0PLD4D/PZj1Ot9rp37C1Tn+lv7Td79Nynklr8EL1wgb
        32T+zCUWUTm6/T8gfcLRJz9jMn2Jun4BC0+WaLzLiXpkJz1BZIelPZ6w/IXDeshmZgN8NWb3
        7G60doXR+LJJomsD5ozgGSQTIak3REsyNAWaOOcwPcHm5e9TXf4bZPoacBnJdT+QDSFJRumq
        iD5b65yiA8u5DKAItk2cvgLb36Jt3qFpD4kclgsQ+0DAaDEp+JAUOpWudqvQH7v0VkWsrxCr
        6xgTr+8qTtKOqYafdRvoqA1RBduizRU6rZg+tYAamps/oz3cp731C6qtL8H0MuQZvrzUPrjz
        chjfVrdNt8cryrpwWI/KHDwacva5QdTI7crLAKQFCq1u6gDc6NXmhY00JsXyhIU+S33pe1TX
        /htUX/PUOTXeluNRShJIZKpTm3lHEUQ3cCyAbWI8Q3X5e6T8IauPPkHsbYK1hT4ol7GVMR16
        9HryPHHBBkyxEEi2gU6eQeJTGFN/voO3enXv8zNIzTrprxqIoBNaiYTJa8yubVDl6xwc/CsH
        t94nXv4V1fQ6qs8Cs3UM8K5zHvPQnJ/r8Wl24bAelskQg/jvAaRFHFQWa7F2gdIikgrQXnrx
        csC/rgCaMDJJIolddPPbzK//NdRfAC6B1r7P3C05BC30v6dqmeJ0OpXigKG0skGsnqfe+U80
        e7+iXe5Tyy2cW6ssi/tIK7mjK+tkNSOb61WaQFLnvsd26fmiRtQwcr89TWfJ1EtDcqcWphXG
        NbApYfcyM9vi4MOfsnfwDjtbvyPU22SrSzzbSdcfb/s6X477fu3CYT0k6wh9jcJ8KeU5cQDV
        b7YWaw+9BxBzdgQxp2tBwZxQLyI0Gmm4TJ6+xuZT/ycyexXsKoQJZoVdYUQw5hk96TDyU7S2
        OCwHmU0M6kDDJerNrzLd+R7LxR1y/inYfmEBLW1A0VknfIFTBB3MAydTb9w23UWnz0DYxbGb
        ItLQkeL1abvzMVg7wDwbaADPwypiOxAuIVylenKTJ68+xztv/oT48dtsPXED0008cRJRCSM1
        o37Lx34/HnbhsB6qDTGOmQ3zoZWEXV6R20MCqUQoGREjh+wUV7lFyORWyPESbXyFjet/g8xe
        B64gTCAXJyelqLREHGLeLHL6928BzgsTrEmitQVBayxdJm5/jWbv96z2f0uttzzGbCKWHF0j
        tnQMDx2A75qixjJDW20Tp1dLFOnkgEOyc8ykcPatz+5Zdya5lKpYqW4RLMyw8CzEyKWr0Bzs
        0SyXhNkKw3snu8SErC0Bz4/TfhC7cFgPydYhUI8KelOD3CK6gnQAeVV64xQsO9AeMhpWqExo
        VlMsvsz82n9Hd/4KwnWwqS8nTBjYELIzfYKXUqwR4p/OWbqzkgKUQ6ZBZQU2JeUN4uRl6sv/
        icPFz5F828VJ8fR8x6Xug3aou+ooi1cWCfV1mF4tqkl3n8h5HKLdvCLBaGlJGFFL2lgCZnNS
        fpr59oylvsuigelkRRUC3VJQPifVpBcO66FZhzOsW844viQtYitye+BLwTJYbTRoWwDZYBWf
        ZbL1beKV75P0BcRmBQorOFVHWWxdtelQgX2cCvizsrHI53Dsvn/X4wOVGvQqced14t43Wdz+
        kGh/YKaGtL6E9avURWddwOTbNdkgTJ6EuFOiipF0/fEV0TkzMSngu5Rm6QQhQzKEGrEZyYTp
        9gSaI1QrZ6cgwkDvV+z8RJkPahcO61FZwUj9ly+BLC/JzSGxgOrW19YImr3C+6C5xnT3O9RX
        v4+F58DmSFZMjSRWquJdHsoxK+efymivyXFq41pyqSvzjsYsIESCQcgComSbINWz1DvfYXH0
        HzTNx9RyiGqLatEDhGFFk0uiQhSNm1TT68AUd5HaL4OGJdGf0Nr0iK1XhjZBJRa4oIucDLXs
        OpZhQhKo6gpByTkixBHLx9A9MYDwj9fS8PMRR54JO14XU4BlzQWHMUiHpGbfub4lkTVh0qLZ
        kDZi6QrV5jeYPvG3MH+NzCaqimTnUspAKy1JV0WXUZyaOFdkAqkobJ+KdZLsnWIR4CB4QJkW
        hWUBjSTZJWx8jdn216G+RlZDqhakLVdl6FD0fmcjZ0V0jtRXwSbOim/H3a9weid4emaSybHx
        OrQcCKlCrPbuAQFkQQhLwEgWXWiVaSmFCFjuIs2Oqhk6gdjHzS4irIdlZQaV7DeoSfYKbcsl
        wmrJ+Q5iS5yRAIRU6IAjbd4mT15ifu0vYeNLrHROxRRpAgRfO4VBAM05k0aJom5on94MVZaC
        HZAs5Rgo4LLq6LmIVU9Qb32D9vDXpPwBym1Us4uH9srTLsIgqqRUY3EbqTaACWo1PYOE+D78
        U+eP77yLSMc8aJ7NLbxXpcBYDKJEF1ct6V47Pg+uAe7n6zrcj104rIdmRZzThHU+8+6Oa8jt
        x5APyLkhSaZGSSmDzbH6C9SXv0/Y/k+04bpLqJv6TV362VTCmkPqBoDI6YfS7jxCf15rg88o
        RZ2d0zKybqCzV6in36A5+AVZjki28ORAR1hjgqmBBJLMkbiDVhslO1Z3OwYSWZxep5MAO2+m
        5dp11DFCdw27iv/it46d3MkVHMd7RB8fu1gSPmwrN1i39OnlqCxhzR60BwRJaM5YjpjNWHGF
        sPNN4uVvQ3wKZULMzrNkYYhG5Nh//f54GHNu2fpIIKHfX7/zcT+eQtyh2noJrZ7F2CKlzql3
        oHtpkM4BkYoQ52iYDF0Ca2b9QD9vtvad3fVFDU/cn1D94x1hXTish2RDU7D1P60sjxwYX2LL
        W0g+QFkRBcjRNQPnrxMvfx9mXyXnq0iaEWyCL4eKovI5MyGQ2UQ2XiZufIUsVxGpSglDIHVU
        hBZwodIpErZAqoLM6LHxeLzS+8IeR7twWA/bpGPzlK5qyauzmwNs9RFBDiE1KEqWTdrqBvUT
        f41tfYssT2LqgKsiI9zm/M2kfu4zCE8Rt75OnNzAmBdUqgPeO0QukJkSq12gRqSjVBnOW0db
        vrDH1y4c1kM1GxVFejtGMsASNHtIexuh8aaUXLOSS9SXvopufwMLT5FkWpaTHdCs6LnUfHLx
        UdMpiQ1k9hI6u4HJVt/+aIQSgRomgjEhxF2wSVHHcde2Tvx34awed7twWA/JPBoyzLzPThnS
        z2YLaG9B80kRUtikSZcJ219j8uR/xSYvk5jh9DINKRi5oyruCaPOk3mRpJliYY5MnqfeeZ0m
        PMUSV3TOJqhUXi4BSNgghF2QaekytP6814Doc7g8vrD7twuH9ZDMtfRswEL7RuQMusDsDqnd
        JxNY5G3a+ByT3e9gk5dIsuVLJGsRlsBqRKR87ryVn7cZqs6tkGULZjfQ2Q1WtkkioKKYKVla
        kmWQCSKbQN1X/x/b4oV9DuzCYT0KK/JPXhvVAAdYc5OmPSTplIU+Q9j5NrrzHUyfxqjBckF2
        ZKRT01VEnz/TngvL6ZRt+izT3ddh8jytTbCcySljEmhFkDhDdMuzhscdVF80CRfO6/G2C4f1
        kGyAWsR5qnIRcGCF2BG53SPbilWqyJOXqK//Vwg3ENsqfOwZlRqxKWp1Kb0y1yQ8d2PUUAWS
        EYhkAiZbyNYrMHmBZFPAS7daE0wiEmagc4xYMK7jqfsO/Dp3F+PCHsAuHNbDMss9F7djT7gQ
        hTSQj1it9shkpN5k44nXCBtfAdlFbFpEK0oRYQpIGxDzVpZ0LiMsP2YVpZNnNWZodZ3JxouI
        bKAqqArJBKRCtQIqemkt68oYxv1yci6vxoXdv104rIdoHQunt+cYRouYIu0ezeFNLG8Rd77G
        7InvYuE6yBxRz4iFjj6k54H3gXsa/OwPw8TMZcb6ytIphKeotr5Crp6gzcFZVyWARggVhAqh
        cuYHnOGiWxRLoVl+EEXpCzt/duGwHpJJUZSR7A7GtCGVBmXaA/LykLp+gdml75L1BbAZEDFR
        RBUtC8OhvSzgklrn1GWVRuwsoKogEWSXMHuROL9Blk2X91IlGxAr/yfRl9OSQJrSlwmdNqJd
        ZAkfa7twWA/BBmDcyv9OA+xIzD5Ne4dGZsyufJtq+6vk7ODyiXaszeV02K1O20phqGWwjFqn
        ABOhusLs8usQniYzR7ITD2qY0FOLHjvlc0QyemF/pl04rIdkzm9lpYyBXjhB8gGHiz109iRh
        43UsP4XlKY93tktK6192ssLsOc9sRrYpMnkZwgsk24CskJUYp1A4vYaOujFxXdek+Thftwu7
        cFgP0awAxWOoOLeHNA3Mr76KzL5I4ipB5zzeDosSITrrlRiI5cLgtAnVC8TNV2n1KmLRubDi
        DESxvul5zP1UrC9veMyv3efYLhzWQ7UiaApkKdhTY0wmTzHdfpU2XAPdOKEw8vGzjrtKTEfM
        q4rpHNNrhO0vkuKTmFTkrKCO6QEj8YbjzunCWT3uduGwHop5SYJ0EYK44ALZULaYb74C4Sna
        UJO0o8Z91Mf8EMxcumyQqI/ABJMZOrtOmD/LKikiNVD7devygv9/e2fQ2zQQROFvdu2kSYoo
        UFVcKiQE4v//NbjQNN7hMLO2Y3qgSMTEnu/Qg1VXaqR9mZ2dfU/tjNSvDdjfu1J7meDPCQO/
        CzAsKXNYsAXqPZjmPSltObHzcYWjbZekZbnLzwWmz6cqLjYZ1WTjC7sHmtsvHL/f0ekeE6xk
        vUDPPRz83O2E0AIc4jt4yYRgXQjxrpWHN9kzaaBa/pLIauETLH7ReUiqp97YrtCvg6tS6Ehp
        T9o9IpuPdE9iJ4j+7hST9UJ15gyWy9JXxn9CTTPpvJLorOrSFk25j7NqukzjKX3LpzNvMMHt
        YzKi2YdCBeSWZv+JfPMVlQ/AxnbRKPRjITB8tjHbsAZCsC6CLTJ1HywTLKu4nuno5NncCzpB
        yvWFKLweBemwyXRzcC/Y/Uo5Ffc330FzT9o8Qrrz/pWPh0z/nFxX4nPw98SW8CJ4QOZYiGoM
        O2ArVX02aUXfIX6NRj0RBkBdmEpRktyS958pP36itIBa1qKkvm9lLyXfStdnyz9lXSshWBdB
        gNaCYwBoqQnMW8yZQLKYTbl4+Omisc8DH6Rt/LRPkm0NTbhPIBvk8A09HOnyGxoR5JiQTbYK
        TQqUBjSDtCgnrD/Wzvz/Bf+KEKyLMZ0Xqk9H101WVRSI/xyP0ZrciHiis2Rye8d2d2/2MiX1
        Yl5d8Zm8H72sZROCFcxAnUgfC45t5aQfrUqgLak5sD88kJtM0RZNTe9WMYjWmBVtqVdICFYw
        A/XS9kisvECS3unQw0O5Ybt9R0pQdAMpm0yJV2c+LKoKIslcTFdVqa6LEKxgHqqZoQzjCe5s
        5dvkbIOiCql5ayMQZWOnir4DHETPii7VaVZhsDRCsIJZ0Np20no30E/3qgaNhmdF9j4S0vrl
        52rNM+5bDQ4OoVrLJQQrmI9xrxxvTU3ERiRRtLF+ldh2ECnD1aazreXv7wfLIgQrmI3z8Oax
        cp3/XiKZJImfqYr4RZ7iOjU9KQyWSghWMAsvu1FMk3DgfEyh2Hs6rqaGk0YRCf++hROCFczD
        RFhUp2JVr9t03lEXhK6/LaB63nS/1nzG4HWEYAUz4mIzij+rz4dUa7czFEbPYHAc9QorKqtV
        EIIVzMzLI/72JE2ejfzbe9fR7JVYKNYaEFWNWjoIgqsg7jEEQXA1/ALnFvSkmNp7mAAAAABJ
        RU5ErkJggg==
      </shape>
      <shape name='olympic/summer.jpg'>
        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
        RU5ErkJggg==
      </shape>
      <shape name='olympic/winter.jpeg'>
        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
      </shape>
      <shape name='olympic/winter.jpg'>
        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
        RK5CYII=
      </shape>
      <shape name='olympic/world.jpg'>
        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
        TkSuQmCC
      </shape>
    </shapes>
  </external>
</workbook>
